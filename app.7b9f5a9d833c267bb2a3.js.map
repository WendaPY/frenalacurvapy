{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/common/notifications/api-errors.html","webpack:///./app/settings/roles/roles.controller.js","webpack:///./app/settings/webhooks/webhooks.controller.js","webpack:///./app/common/auth/password-reset-confirm.controller.js","webpack:///./app/settings/surveys/edit.controller.js","webpack:///./app/settings/surveys/survey-edit.html","webpack:///./app/settings/surveys/targeted-surveys/targeted-edit.controller.js","webpack:///./app/settings/surveys/targeted-surveys/targeted-survey-edit.html","webpack:///./app/settings/categories/edit.controller.js","webpack:///./app/settings/categories/categories-edit.html","webpack:///./app/settings/users/users-edit.html","webpack:///./app/settings/roles/roles-edit.html","webpack:///./app/settings/webhooks/webhooks-edit.html","webpack:///./app/bootstrap.js","webpack:///./app/app.js","webpack:///./app/common/raven/raven.js","webpack:///./app/common/raven/raven.service.js","webpack:///./app/common/wrapper/nvd3-wrapper.js","webpack:///./app/common/common-module.js","webpack:///./app/common/auth/authentication.service.js","webpack:///./app/common/auth/registration.service.js","webpack:///./app/common/auth/session.service.js","webpack:///./app/common/auth/password-reset.service.js","webpack:///./app/common/auth/tos.service.js","webpack:///./app/common/auth/demo-deployment.service.js","webpack:///./app/common/auth/login.directive.js","webpack:///./app/common/auth/login.html","webpack:///./app/common/auth/register.directive.js","webpack:///./app/common/auth/register.html","webpack:///./app/common/auth/password-reset.directive.js","webpack:///./app/common/auth/password-reset.html","webpack:///./app/common/auth/password-reset-confirm.directive.js","webpack:///./app/common/auth/password-reset-confirm.html","webpack:///./app/common/auth/tos.directive.js","webpack:///./app/common/auth/tos.html","webpack:///./app/common/auth/demo-deployment.directive.js","webpack:///./app/common/auth/demo-deployment.html","webpack:///./app/common/auth/authentication-interceptor.config.js","webpack:///./app/common/auth/authentication-events.run.js","webpack:///./app/common/notifications/notify.service.js","webpack:///./app/common/notifications/limit.html","webpack:///./app/common/notifications/slider.service.js","webpack:///./app/common/notifications/demo-slider.service.js","webpack:///./app/common/notifications/slider.directive.js","webpack:///./app/common/notifications/slider.html","webpack:///./app/common/notifications/demo-slider.directive.js","webpack:///./app/common/notifications/demo-slider.html","webpack:///./app/common/services/endpoints/apikey.js","webpack:///./app/common/services/endpoints/config.js","webpack:///./app/common/services/endpoints/user-endpoint.js","webpack:///./app/common/services/endpoints/user-settings.js","webpack:///./app/common/services/endpoints/form.js","webpack:///./app/common/services/endpoints/form-attributes.js","webpack:///./app/common/services/endpoints/form-roles.js","webpack:///./app/common/services/endpoints/form-stages.js","webpack:///./app/common/services/endpoints/form-stats-endpoint.js","webpack:///./app/common/services/endpoints/form-contact.js","webpack:///./app/common/services/endpoints/tag.js","webpack:///./app/common/services/endpoints/role.js","webpack:///./app/common/services/endpoints/webhooks.js","webpack:///./app/common/services/endpoints/permission.js","webpack:///./app/common/services/endpoints/data-providers.js","webpack:///./app/common/services/endpoints/MediaEndpoint.js","webpack:///./app/common/services/endpoints/message.js","webpack:///./app/common/services/endpoints/post-endpoint.js","webpack:///./app/common/services/endpoints/post-lock-endpoint.js","webpack:///./app/common/services/endpoints/collection.js","webpack:///./app/common/services/endpoints/savedsearch.js","webpack:///./app/common/services/endpoints/data-import.js","webpack:///./app/common/services/endpoints/contact.js","webpack:///./app/common/services/endpoints/notification.js","webpack:///./app/common/services/endpoints/terms-of-service-endpoint.js","webpack:///./app/common/services/endpoints/export-jobs.js","webpack:///./app/common/services/endpoints/country-code-endpoint.js","webpack:///./app/common/services/endpoints/hxl-tag-endpoint.js","webpack:///./app/common/services/endpoints/hxl-license-endpoint.js","webpack:///./app/common/services/endpoints/hxl-metadata-endpoint.js","webpack:///./app/common/services/endpoints/hxl-organisations-endpoint.js","webpack:///./app/common/services/view-helper.js","webpack:///./app/common/services/features.js","webpack:///./app/common/services/util.js","webpack:///./app/common/services/maps.js","webpack:///./app/common/services/geocoding.js","webpack:///./app/common/services/languages.js","webpack:///./app/common/services/icon-manager.js","webpack:///./app/common/services/endpoints/FontAwesomeIcons.js","webpack:///./app/common/services/mainsheet.service.js","webpack:///./app/common/services/modal.service.js","webpack:///./app/common/services/translation.service.js","webpack:///./app/common/controllers/navigation.js","webpack:///./app/common/controllers/page-metadata.js","webpack:///./app/common/controllers/intercom.js","webpack:///./app/common/services/loadingProgress.service.js","webpack:///./app/common/services/data-export.service.js","webpack:///./app/common/services/hxl-export.service.js","webpack:///./app/common/services/data-import.service.js","webpack:///./app/common/verifier/verifier.service.js","webpack:///./app/common/directives/publish-selector.js","webpack:///./app/common/directives/publish-selector.html","webpack:///./app/common/directives/list-toolbar.js","webpack:///./app/common/directives/list-toolbar.html","webpack:///./app/common/directives/iconpicker.js","webpack:///./app/common/directives/iconpicker.html","webpack:///./app/common/directives/color-picker.js","webpack:///./app/common/directives/color-picker.html","webpack:///./app/common/directives/first-time-config.js","webpack:///./app/common/directives/first-time-config.html","webpack:///./app/common/directives/mainsheet-container.directive.js","webpack:///./app/common/directives/mainsheet-container.html","webpack:///./app/common/directives/modal-container.directive.js","webpack:///./app/common/directives/modal-container.html","webpack:///./app/common/directives/modal-body.directive.js","webpack:///./app/common/directives/layout-class.directive.js","webpack:///./app/common/directives/embed-only.directive.js","webpack:///./app/common/directives/ush-logo.directive.js","webpack:///./app/common/directives/ush-logo.html","webpack:///./app/common/directives/filter-system/filter-searchbar.js","webpack:///./app/common/directives/filter-system/filter-searchbar.html","webpack:///./app/common/directives/filter-system/filter-role.js","webpack:///./app/common/directives/filter-system/filter-role.html","webpack:///./app/common/directives/filter-system/overflow-toggle.js","webpack:///./app/common/directives/focus.js","webpack:///./app/common/directives/mode-bar/mode-bar.directive.js","webpack:///./app/common/directives/mode-bar/mode-bar.html","webpack:///./app/common/directives/mode-bar/support-links.html","webpack:///./app/common/directives/file-upload.directive.js","webpack:///./app/common/directives/file-upload.html","webpack:///./app/common/directives/role-selector.directive.js","webpack:///./app/common/directives/role-selector.html","webpack:///./app/common/directives/add-category.directive.js","webpack:///./app/common/directives/add-category.html","webpack:///./app/common/directives/category-selector.directive.js","webpack:///./app/common/directives/category-selector.html","webpack:///./app/common/directives/language-switch.directive.js","webpack:///./app/common/directives/language-switch.html","webpack:///./app/common/directives/loading-dots.directive.js","webpack:///./app/common/directives/loading-dots.html","webpack:///./app/common/factories/loading.interceptor-factory.js","webpack:///./app/common/configs/loading.interceptor-config.js","webpack:///./app/common/configs/locale-config.js","webpack:///./app/common/configs/ui-bootstrap-template-decorators.js","webpack:///./app/common/configs/uib-pagination.html","webpack:///./app/common/configs/cache-config.js","webpack:///./app/common/common-routes.js","webpack:///./app/common/auth/login.controller.js","webpack:///./app/common/auth/forbidden.controller.js","webpack:///./app/common/auth/forbidden.html","webpack:///./app/common/auth/register.controller.js","webpack:///./app/common/auth/password-reset.controller.js","webpack:///./app/common/auth/404.controller.js","webpack:///./app/common/auth/404.html","webpack:///./app/common/verifier/verifier.controller.js","webpack:///./app/common/verifier/verifier.html","webpack:///./app/common/global/event-handlers.js","webpack:///./app/common/global/language-settings.js","webpack:///./app/common/directives/mode-bar/ushahidi-logo.html","webpack:///./app/common/verifier/verifier.js","webpack:///./app/common/directives/adaptive-input.js","webpack:///./app/common/directives/dropdown.js","webpack:///./app/common/directives/modal.js","webpack:///./app/common/directives/modal.html","webpack:///./app/common/directives/custom-on-change.js","webpack:///./app/common/user-profile/user-profile-module.js","webpack:///./app/common/user-profile/account-settings.directive.js","webpack:///./app/common/user-profile/account_settings.html","webpack:///./app/common/user-profile/admin-user-setup.directive.js","webpack:///./app/common/user-profile/admin-user-setup.html","webpack:///./app/common/user-profile/user-profile.directive.js","webpack:///./app/common/user-profile/user-profile.html","webpack:///./app/common/user-profile/notifications.directive.js","webpack:///./app/common/user-profile/notifications.html","webpack:///./app/main/main-module.js","webpack:///./app/main/posts/posts-module.js","webpack:///./app/main/posts/common/post-actions.directive.js","webpack:///./app/main/posts/common/post-actions.html","webpack:///./app/main/posts/common/post-metadata.directive.js","webpack:///./app/main/posts/common/post-metadata.html","webpack:///./app/main/posts/common/post-metadata.service.js","webpack:///./app/main/posts/common/post-survey.service.js","webpack:///./app/main/posts/common/post-lock.service.js","webpack:///./app/main/posts/common/post-lock.directive.js","webpack:///./app/main/posts/common/post-lock.html","webpack:///./app/main/posts/detail/post-messages.directive.js","webpack:///./app/main/posts/detail/post-messages.html","webpack:///./app/main/posts/detail/post-messages-reply.html","webpack:///./app/main/posts/detail/post-add-form.directive.js","webpack:///./app/main/posts/detail/add-form.html","webpack:///./app/main/posts/detail/post-value.directive.js","webpack:///./app/main/posts/detail/post-value.html","webpack:///./app/main/posts/detail/post-media-value.directive.js","webpack:///./app/main/posts/detail/post-media-value.html","webpack:///./app/main/posts/detail/post-video-value.directive.js","webpack:///./app/main/posts/detail/post-video-value.html","webpack:///./app/main/posts/detail/map.directive.js","webpack:///./app/main/posts/detail/map.html","webpack:///./app/main/posts/detail/post-detail-data.directive.js","webpack:///./app/main/posts/detail/post-detail-data.html","webpack:///./app/main/posts/common/post-actions.service.js","webpack:///./app/main/posts/modify/post-entity.service.js","webpack:///./app/main/posts/modify/post-edit.service.js","webpack:///./app/main/posts/modify/media-edit.service.js","webpack:///./app/main/posts/modify/post-media.directive.js","webpack:///./app/main/posts/modify/media.html","webpack:///./app/main/posts/modify/post-video.directive.js","webpack:///./app/main/posts/modify/video.html","webpack:///./app/main/posts/modify/post-datetime-value.directive.js","webpack:///./app/main/posts/modify/post-datetime-value.html","webpack:///./app/main/posts/modify/location.directive.js","webpack:///./app/main/posts/modify/location.html","webpack:///./app/main/posts/modify/post-relation.directive.js","webpack:///./app/main/posts/modify/relation.html","webpack:///./app/main/posts/modify/post-editor.directive.js","webpack:///./app/main/posts/modify/post-editor.html","webpack:///./app/main/posts/modify/post-value-edit.directive.js","webpack:///./app/main/posts/modify/post-value-edit.html","webpack:///./app/main/posts/modify/post-category-editor.js","webpack:///./app/main/posts/modify/post-category-editor.html","webpack:///./app/main/posts/modify/post-tabs.directive.js","webpack:///./app/main/posts/modify/post-tabs.html","webpack:///./app/main/posts/modify/post-toolbox.directive.js","webpack:///./app/main/posts/modify/post-toolbox.html","webpack:///./app/main/posts/views/filters/filter-post-sorting-options.directive.js","webpack:///./app/main/posts/views/filters/filter-post-sorting-options.html","webpack:///./app/main/posts/views/filters/filter-post-order-asc-desc.directive.js","webpack:///./app/main/posts/views/filters/filter-post-order-asc-desc.html","webpack:///./app/main/posts/views/filters/filter-unlocked-on-top.directive.js","webpack:///./app/main/posts/views/filters/filter-unlocked-on-top.html","webpack:///./app/main/posts/modify/post-data-editor.directive.js","webpack:///./app/main/posts/modify/post-data-editor.html","webpack:///./app/main/posts/views/post-view.service.js","webpack:///./app/main/posts/views/post-view-map.directive.js","webpack:///./app/main/posts/views/post-view-map.html","webpack:///./app/main/posts/views/post-view-create.directive.js","webpack:///./app/main/posts/views/post-card.directive.js","webpack:///./app/main/posts/views/card.html","webpack:///./app/main/posts/views/post-preview-media.directive.js","webpack:///./app/main/posts/views/post-preview-media.html","webpack:///./app/main/posts/views/add-post-button.directive.js","webpack:///./app/main/posts/views/add-post-button.html","webpack:///./app/main/posts/views/add-post-survey-list.directive.js","webpack:///./app/main/posts/views/add-post-survey-list.html","webpack:///./app/main/posts/views/add-post-text-button.directive.js","webpack:///./app/main/posts/views/add-post-text-button.html","webpack:///./app/main/posts/views/mode-context.directive.js","webpack:///./app/main/posts/views/mode-context.html","webpack:///./app/main/posts/views/mode-context-form-filter.directive.js","webpack:///./app/main/posts/views/mode-context-form-filter.html","webpack:///./app/main/posts/views/filter-by-survey.directive.js","webpack:///./app/main/posts/views/filter-by-survey.html","webpack:///./app/main/posts/views/filter-by-survey-dropdown.directive.js","webpack:///./app/main/posts/views/post-toolbar.directive.js","webpack:///./app/main/posts/views/post-toolbar.html","webpack:///./app/main/posts/views/filter-by-datasource.directive.js","webpack:///./app/main/posts/views/filter-by-datasource.html","webpack:///./app/main/posts/views/post-view-data.directive.js","webpack:///./app/main/posts/views/post-view-data.html","webpack:///./app/main/posts/views/filters/filter-posts.directive.js","webpack:///./app/main/posts/views/filters/filter-posts.html","webpack:///./app/main/posts/views/filters/filter-category.directive.js","webpack:///./app/main/posts/views/filters/filter-category.html","webpack:///./app/main/posts/views/filters/filter-date.directive.js","webpack:///./app/main/posts/views/filters/filter-date.html","webpack:///./app/main/posts/views/filters/filter-form.directive.js","webpack:///./app/main/posts/views/filters/filter-form.html","webpack:///./app/main/posts/views/filters/filter-visible-to.directive.js","webpack:///./app/main/posts/views/filters/filter-visible-to.html","webpack:///./app/main/posts/views/filters/filter-status.directive.js","webpack:///./app/main/posts/views/filters/filter-status.html","webpack:///./app/main/posts/views/filters/filter-source.directive.js","webpack:///./app/main/posts/views/filters/filter-source.html","webpack:///./app/main/posts/views/filters/filter-location.directive.js","webpack:///./app/main/posts/views/filters/filter-location.html","webpack:///./app/main/posts/views/filters/filter-has-location.directive.js","webpack:///./app/main/posts/views/filters/filter-has-location.html","webpack:///./app/main/posts/views/filters/active-search-filters.directive.js","webpack:///./app/main/posts/views/filters/active-search-filters.html","webpack:///./app/main/posts/views/post-filters.service.js","webpack:///./app/main/posts/views/filters/filter-transformers.service.js","webpack:///./app/main/posts/views/filters/filters-dropdown.directive.js","webpack:///./app/main/posts/views/filters/filters-dropdown.html","webpack:///./app/main/posts/views/filters/filter-saved-search.directive.js","webpack:///./app/main/posts/views/filters/filter-saved-search.html","webpack:///./app/main/posts/views/filters/sort-and-filter-counter.directive.js","webpack:///./app/main/posts/views/filters/sort-and-filter-counter.html","webpack:///./app/main/posts/views/share/post-share.directive.js","webpack:///./app/main/posts/views/share/post-share.html","webpack:///./app/main/posts/views/share/share-menu.directive.js","webpack:///./app/main/posts/views/share/share-menu.html","webpack:///./app/main/posts/views/share/share-menu-modal.directive.js","webpack:///./app/main/posts/views/share/share-menu-modal.html","webpack:///./app/main/posts/views/share/post-export.directive.js","webpack:///./app/main/posts/views/share/post-export.html","webpack:///./app/main/posts/views/post-view-unavailable.directive.js","webpack:///./app/main/posts/views/post-view-unavailable.html","webpack:///./app/main/posts/savedsearches/editor-directive.js","webpack:///./app/main/posts/savedsearches/savedsearch-editor.html","webpack:///./app/main/posts/savedsearches/create-directive.js","webpack:///./app/main/posts/savedsearches/savedsearch-create.html","webpack:///./app/main/posts/savedsearches/update-directive.js","webpack:///./app/main/posts/savedsearches/savedsearch-update.html","webpack:///./app/main/posts/savedsearches/saved-search-modal.directive.js","webpack:///./app/main/posts/savedsearches/saved-search-modal.html","webpack:///./app/main/posts/savedsearches/saved-search-list-editor-modal.directive.js","webpack:///./app/main/posts/savedsearches/saved-search-list-editor-modal.html","webpack:///./app/main/posts/savedsearches/mode-context.directive.js","webpack:///./app/main/posts/savedsearches/mode-context.html","webpack:///./app/main/posts/collections/collections.service.js","webpack:///./app/main/posts/collections/mode-context.directive.js","webpack:///./app/main/posts/collections/mode-context.html","webpack:///./app/main/posts/collections/editor.directive.js","webpack:///./app/main/posts/collections/editor.html","webpack:///./app/main/posts/collections/listing.directive.js","webpack:///./app/main/posts/collections/listing.html","webpack:///./app/main/posts/common/collection-toggle/collection-toggle-button.js","webpack:///./app/main/posts/common/collection-toggle/collection-toggle-button.html","webpack:///./app/main/posts/common/collection-toggle/collection-toggle-link.js","webpack:///./app/main/posts/common/collection-toggle/collection-toggle-link.html","webpack:///./app/main/posts/posts-routes.js","webpack:///./app/main/posts/views/post-view-noui.controller.js","webpack:///./app/main/posts/views/post-view-noui.html","webpack:///./app/main/posts/modify/post-create.controller.js","webpack:///./app/main/posts/modify/main.html","webpack:///./app/main/activity/activity-module.js","webpack:///./app/main/activity/activity-routes.js","webpack:///./app/main/activity/activity.controller.js","webpack:///./app/main/activity/activity.html","webpack:///./app/main/activity/activity-timeline.directive.js","webpack:///./app/main/activity/activity-timeline.html","webpack:///./app/main/activity/bar-chart.directive.js","webpack:///./app/main/activity/bar-chart.html","webpack:///./app/main/activity/time-chart.directive.js","webpack:///./app/main/activity/time-chart.html","webpack:///./app/main/activity/targeted-survey-table.directive.js","webpack:///./app/main/activity/targeted-survey-table.html","webpack:///./app/main/activity/crowdsourced-survey-table.directive.js","webpack:///./app/main/activity/crowdsourced-survey-table.html","webpack:///./app/settings/settings.module.js","webpack:///./app/settings/data-import/data-after-import.directive.js","webpack:///./app/settings/data-import/data-import.directive.js","webpack:///./app/settings/data-import/import.notify.service.js","webpack:///./app/settings/data-import/import-complete.html","webpack:///./app/settings/data-export/hdx-details.directive.js","webpack:///./app/settings/data-export/hdx-details.html","webpack:///./app/settings/surveys/survey-editor.directive.js","webpack:///./app/settings/surveys/survey-editor.html","webpack:///./app/settings/surveys/task-create.directive.js","webpack:///./app/settings/surveys/task-create.html","webpack:///./app/settings/surveys/attribute-create.directive.js","webpack:///./app/settings/surveys/attribute-create.html","webpack:///./app/settings/surveys/attribute-editor.directive.js","webpack:///./app/settings/surveys/attribute-editor.html","webpack:///./app/settings/surveys/survey.notify.service.js","webpack:///./app/settings/surveys/survey-success.html","webpack:///./app/settings/surveys/targeted-surveys/targeted-question.directive.js","webpack:///./app/settings/surveys/targeted-surveys/targeted-question-modal.html","webpack:///./app/settings/site/map.directive.js","webpack:///./app/settings/site/map.html","webpack:///./app/settings/site/editor.directive.js","webpack:///./app/settings/site/settings-editor.html","webpack:///./app/settings/users/filter-users.directive.js","webpack:///./app/settings/users/filter-users.html","webpack:///./app/settings/roles/roles.directive.js","webpack:///./app/settings/roles/editor.directive.js","webpack:///./app/settings/webhooks/webhooks.directive.js","webpack:///./app/settings/webhooks/editor.directive.js","webpack:///./app/settings/settings.routes.js","webpack:///./app/settings/settings.controller.js","webpack:///./app/settings/settings.html","webpack:///./app/settings/settings-list.html","webpack:///./app/settings/settings-list.controller.js","webpack:///./app/settings/site/site.controller.js","webpack:///./app/settings/site/settings-general.html","webpack:///./app/settings/data-import/data-import.controller.js","webpack:///./app/settings/data-import/data-import.html","webpack:///./app/settings/data-import/data-after-import.controller.js","webpack:///./app/settings/data-import/after-import.html","webpack:///./app/settings/user-settings/user-settings.controller.js","webpack:///./app/settings/user-settings/user-settings.html","webpack:///./app/settings/data-export/data-export.controller.js","webpack:///./app/settings/data-export/data-export.html","webpack:///./app/settings/data-export/hdx-export.controller.js","webpack:///./app/settings/data-export/hdx-export.html","webpack:///./app/settings/surveys/surveys.controller.js","webpack:///./app/settings/surveys/surveys.html","webpack:///./app/settings/categories/categories.controller.js","webpack:///./app/settings/categories/categories.html","webpack:///./app/settings/users/users.controller.js","webpack:///./app/settings/users/users.html","webpack:///./app/settings/users/create.controller.js","webpack:///./app/settings/users/edit.controller.js","webpack:///./app/settings/roles/roles.html","webpack:///./app/settings/webhooks/webhooks.html","webpack:///./app/settings/datasources/datasources.controller.js","webpack:///./app/settings/datasources/datasources.html","webpack:///./app/settings/plans/plans.controller.js","webpack:///./app/settings/plans/plan.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","0","exports","module","l","e","promises","Promise","resolve","reject","href","fullhref","p","existingLinkTags","document","getElementsByTagName","dataHref","tag","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","head","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","$scope","$translate","$rootScope","$location","RoleEndpoint","PermissionEndpoint","hasManageSettingsPermission","path","title","$emit","WebhookEndpoint","PasswordResetConfirmController","PasswordReset","$transition$","$new","token","params","openResetConfirm","url","$inject","surveyId","id","actionType","action","Features","$state","_","ModalService","Sortable","ConfigEndpoint","Notify","FormEndpoint","FormStageEndpoint","FormAttributeEndpoint","FormStatsEndpoint","$q","PostFilters","LoadingProgress","CountryCodeEndpoint","FormContactEndpoint","SurveyNotify","isActiveStep","step","activeStep","isStepComplete","completeStepOne","targetedSurvey","stepOne","stepOneWarning","completeStepTwo","stepTwo","selectedCountry","stepTwoWarning","runValidations","textBoxNumbers","finalNumbers","badNumbersString","goodNumbersString","recipientCount","goodNumbers","completeStepThree","survey","attributes","stepThreeWarning","total_sms_messages","openQuestionModal","question","editQuestion","angular","copy","label","newQuestion","modalTitle","openTemplate","checkForDuplicate","filter","addNewQuestion","close","input","priority","last","getPriority","deleteQuestion","cancel","publish","getPublishDescription","previousStep","validatedNumbers","badCount","resetNumbers","repeatCount","storageObj","badNumberCount","isLoading","getLoadingState","goToDataView","getCountryCodes","query","$promise","countryList","each","country","country_name","instant","countriesList","getFormStats","totalResponses","totalRecipients","totalSent","totalPending","default_attributes","cardinality","required","options","config","form_stage_id","loadFeatures","targetedSurveysEnabled","isFeatureEnabled","go","formId","color","everyone_can_create","hide_author","targeted_survey","el","getElementById","$valid","numbers","split","forEach","entry","number","replace","isValidNumber","country_code","parsedResult","parse","formatNumber","setFilter","saveFormStageAttributes","concat","task","is_public","show_when_published","task_is_internal_only","stageId","saveCache","savedTask","questions","saved","save","contacts","response","messages","notifyMessage","notifyAction","callback","text","callbackArg","actionClass","reload","errors","source","pointer","confirmModal","savedSurvey","recipientRequest","responsesRequest","results","total_responses","total_recipients","total_messages_sent","total_messages_pending","handle","animation","onEnd","evt","items","to","children","item","index","TagEndpoint","Util","handleResponseErrors","errorResponse","processing","apiErrors","category","icon","parent_id","parent_id_original","isParent","getFresh","parent","addParent","deleteCategory","confirmDelete","delete","notify","catch","getParentName","parentName","parents","saveCategory","slug","findWhere","role","when","child","saving","roles","queryFresh","level","tags","parseInt","require","lazy","$http","ushahidi","verifier","apiUrl","bootstrapConfig","loading","element","removeClass","html","done","addClass","bootstrap","strictDi","d3","backendUrl","BACKEND_URL","intercomAppId","ushDisableChecks","USH_DISABLE_CHECKS","VERIFIER","appStoreId","ravenModule","constant","API_URL","INTERCOM_APP_ID","APP_STORE_ID","DEFAULT_LOCALE","OAUTH_CLIENT_ID","OAUTH_CLIENT_SECRET","CLAIMED_ANONYMOUS_SCOPES","CLAIMED_USER_SCOPES","MAPBOX_API_KEY","mapboxApiKey","TOS_RELEASE_DATE","Date","tosReleaseDate","toJSON","EXPORT_POLLING_INTERVAL","export_polling_interval","$compileProvider","debugInfoEnabled","$locationProvider","html5Mode","hashPrefix","$urlRouterProvider","$urlMatcherFactoryProvider","otherwise","strictMode","$showdownProvider","setOption","factory","L","indexBy","map","site","features","run","$transitions","$uiRouter","watchTransitions","gaEnabled","onSuccess","transition","ga","urlRouter","location","DemoDeploymentService","demoCheck","VerifierService","debugModeCheck","ravenUrl","Raven","release","GIT_COMMIT","environment","ENVIRONMENT","git_commit","sanitizeKeys","dataCallback","fingerprint","breadcrumbs","values","addPlugin","install","service","ravenService","init","this","$on","handleLogin","handleLogout","Session","getSessionDataEntry","setUserContext","RavenService","directive","controller","ACTIONS","EDIT","DELETE","$templateCache","put","CONST","UserEndpoint","PostLockEndpoint","loginStatus","continueLogout","silent","setToLogoutState","$broadcast","clearSessionData","invalidateCache","Math","floor","now","login","username","password","handleRequestError","deferred","payload","grant_type","client_id","client_secret","scope","join","defer","post","authResponse","accessToken","access_token","setSessionDataEntry","expires_in","expires","userDataResponse","permissions","isEmpty","finally","userData","setSessionDataEntries","userId","realname","email","gravatar","language","logout","hasPermission","unlock","getLoginStatus","openLogin","register","openRegister","localStorageService","clearedSessionData","accessTokenExpires","grantType","sessionData","newSessionData","that","set","entries","extend","getSessionData","remove","reset","resetConfirm","openReset","TermsOfServiceEndpoint","moment","getTosEntry","tosEntry","agreement_date","isAfter","confirmTos","tosCheck","tier","demo","Login","restrict","LoginController","template","Authentication","clearLoginForm","failed","finishedLogin","$parent","closeModal","loginSubmit","forgotPassword","showCancel","private","activate","RegisterDirective","RegisterController","Registration","registerSuccess","success","registerFailed","form","$setValidity","$validators","registerSubmit","PasswordResetDirective","PasswordResetController","resetDone","submit","PasswordResetConfirmDirective","resetSuccess","resetFailed","hasToken","TermsOfServiceDirective","TosController","TermsOfService","terms","accept","tosSubmit","tos_version_date","tosSessionData","confirm","DemoDeploymentDirective","DemoDeploymentController","PostEndpoint","limitReached","expired","days_remaining","loggedin","upgrade","toggleModalVisible","site_name","expiration_date","extension_date","diff","stats","totals","total","AuthInterceptorConfig","$provide","$httpProvider","AuthInterceptor","interceptors","$injector","ongoingRequest","ignorable","isIgnorable","has","ignore403","matchers","match","shouldIgnoreAuthError","headers","indexOf","Authorization","responseError","rejection","status","invoke","otherConfig","handleRequestSuccess","getClientCredsToken","concurrentGetClientCredsToken","AuthenticationEvents","DataExport","DataImport","loginPath","doLogin","redirect","noReload","currentUser","isAdmin","adminUserSetupModal","loadExportJob","loadImportJob","resetDefaults","doLogout","$current","hasManagePermission","intersection","permission","contains","currentUrl","iconicSprite","SliderService","DemoSliderService","translateValues","showSlider","iconClass","buttons","actionButton","getScope","actionCallback","successText","cancelButton","notifyProgress","errorText","errorTexts","errorsPretranslated","pluck","confirmText","description","descriptionValues","button","descriptionTemplate","confirmWarningText","show","getState","limit","infoModal","translate","confirmLeave","notifyPermanent","$destroy","$templateRequest","deferredOpen","deferredClose","open","onOpen","handler","onClose","closeOnTimeout","showCloseButton","closeOnNavigate","Slider","$timeout","$compile","insideModal","link","$element","templateScope","classVisible","closeButtonClicked","context","closeTimeout","iconPath","sliderContent","find","cleanUp","ev","DemoSlider","upgrading","obj","demoSliderContent","onEnter","state","targetState","includes","$resource","method","isArray","transformResponse","update","CacheFactory","cache","createCache","storageMode","removeExpired","removeAll","persist","paramSerializer","fromJson","deleteEntity","UserSettingsEndpoint","keyId","order","orderby","FormRoleEndpoint","transpermissionResponse","DataProviderEndpoint","allInThread","contact","offset","defaults","normalizePost","geojson","cancellable","collections","published_to","export","filters","responseType","post_id","getLock","unlockByPost","collectionId","editableByMe","editableBy","allowed_privileges","addPost","removePost","DataImportEndpoint","import","upload","formData","dfd","ContactEndpoint","ExportJobEndpoint","allViews","display_name","views","feature","enabled","isViewEnabled","view","getLimit","limits","bindAllFunctionsToSelf","$window","relative_url","deploymentUrl","exec","omitKeys","omit","simpluUUID","random","toString","functions","bindAll","autoMap","columns","attributeLabels","attribute","toLowerCase","attributeKeys","attributeMap","column","trim","Maps","layers","baselayers","satellite","layerOptions","apikey","mapid","attribution","streets","hOSM","createMap","getLeafletConfig","attributionControl","setPrefix","zoomControl","setPosition","setMaxBounds","scrollWheelZoom","enable","on","px","project","popup","_latlng","y","_container","clientHeight","panTo","unproject","animate","getBaseLayers","pointToLayer","latlng","marker","pointIcon","properties","getConfig","getLayer","layerKey","layer","tileLayer","defaultLayer","default_view","baselayer","center","zoom","lat","lon","clustering","fresh","size","className","test","divIcon","iconSize","iconAnchor","popupAnchor","searchCoordinates","location_name","build_query","parseFloat","searchAllInfo","googlePlaces","textSearch","formatted_address","geometry","lng","q","format","languages","FontAwesomeIcons","iconSets","fontAwesome","getIconSet","noun","IconManager","getIconSetArray","iconLibName","iconSetArray","iconLibNames","libName","classPrefix","iconClassPrefix","icons","MainsheetService","isOpen","closeTemplate","setState","closeOnOverlayClick","$document","Languages","lang","use","langKey","preferredLanguage","rtlEnabled","rtl","$apply","locale","getLanguage","configRequest","userRequest","user","setStartLanguage","setLanguage","NavigationController","BootstrapConfig","vm","reloadSiteConfig","activityIsAvailable","planIsAvailable","USHAHIDI","siteTitle","pageTitle","pageDescription","pageKeywords","pageRobots","currentFullUrl","absUrl","keywords","robots","startIntercom","domain","host","Intercom","app_id","custom_launcher_selector","hide_default_launcher","created_at","created","user_id","last_login","company","plan","stopIntercom","onStart","from","isSaving","onExit","pendingRequests","getSavingState","setLoadingState","newState","setSavingState","$interval","exportJobs","startPolling","queries","timer","nextQuery","job","send_to_browser","downloadUrl","URL","webkitURL","anchor","attr","body","append","click","loadingStatus","revokeObjectURL","send_to_hdx","updateExportJobsList","_exportJobs","getExportJobs","foundJobIndex","findIndex","_job","processJobFields","setExportJobs","processExportJobs","cancelExport","jobId","url_expiration","isNumber","toLocaleString","created_timestamp","jobs","sortBy","reverse","startExport","hideStartNotification","entity_type","loadExportJobs","max_expiration","round","getTime","HxlExport","HxlTagEndpoint","getFormsWithTags","forms","form_attribute_types","form_attribute_type","ImportNotify","CollectionEndpoint","importJobs","processed","collection_id","importComplete","filename","updateImportJobsList","_importJobs","getImportJobs","setImportJobs","processImportJobs","startImport","loadImportJobs","Verifier","checkDebugMode","showRoles","canSeeThis","checkIfAllSelected","toggleRole","toggleRolesView","selectAll","Array","selectedSet","entities","deselectAll","transclude","model","$attrs","iconSet","setIcon","colorContainer","$watch","setColor","modalOpen","saving_config","fileContainer","file","checkConfig","hasName","first_login","skip","clearHeader","image_header","updateConfig","FormData","original_file_url","uploadHeaderImage","MainsheetContainer","closeMainsheet","showMainsheet","mainsheetContent","cleanUpMainsheet","constructor","ModalContainer","modalOffset","modalContent","cleanUpModal","windowYpos","scrollY","documentElement","scrollTop","ModalBody","css","innerHeight","handleResize","$digest","unbind","LayoutClassDirective","layout","LayoutClassController","self","top","setLayout","EmbedOnlyDirective","EmbedOnlyController","globalEmbed","embedOnly","UshLogoDirective","UshLogoController","placeholderEntity","$elem","formControl","searchResultsVisible","applyFilters","showSearchResults","detectSubmit","stopPropagation","keyCode","hideSearchResults","onClear","$setViewValue","OverflowToggleDirective","$parse","toggle","querySelector","hasOverflow","toggleClass","$event","preventDefault","Focus","attrs","focus","CollectionsService","handleRouteChange","moreActive","isActivityAvailable","canRegister","showMore","viewCollectionListing","showCollectionList","viewAccountSettings","viewSupportLinks","container","validation","uploadFile","mimeCheck","sizeCheck","validateFile","files","reader","FileReader","dataURL","dataURI","changed","deleted","readAsDataURL","RoleSelectorDirective","RoleSelectorController","setEveryone","AddCategoryDirective","postValue","available","AddCategoryController","showInput","categoryName","userCanAddCategory","showInputToggle","option","CategorySelectorDirective","selected","enableParents","CategorySelectorController","$setDirty","selectAllEnabled","selectedParents","isParentWithChildren","selectChild","selectParent","disabledCategories","changeCategories","categories","selectedChildren","chain","parentIndexSelected","parentIndex","parentId","LanguageSwitchDirective","LanguageSwitchController","TranslationService","changeLanguage","LoadingDotsDirective","buttonClass","disabled","LoadingDotsController","LoadingInterceptor","$translateProvider","useSanitizeValueStrategy","translations","useStaticFilesLoader","prefix","suffix","fallbackLanguage","CacheFactoryProvider","maxAge","cacheFlushInterval","storagePrefix","deleteOnExpire","$stateProvider","verifyNetwork","endpointStatusCheck","endpointStructureCheck","networkCheck","envCheck","endpointStatuses","endpointStructureChecks","transifexCheck","oauthCheck","dbConnection","apiEnvs","allDisabled","isCheckDisabled","verifyEnv","verifyEndpointStatus","verifyEndpointStructure","verifyTransifex","verifyOauth","oauthStatus","structure","oauthStructure","oauthToken","verifyDbConnection","dbCheck","verifyAPIEnvs","apiEnvCheck","globalLayout","modalVisible","demoBarVisible","switchRtl","verifyStatus","checkVerifierAPI","json","log","explainer","checkTokenStructure","env","jsonData","checkStructure","token_type","testToken","checks","a","b","aKeys","sort","bKeys","endpoint","default","TX_USERNAME","TX_PASSWORD","classAdd","classRemove","adaptiveController","focusOn","focusOff","val","ngModel","openClass","toggleOpenClass","menuOpenClass","openScope","dropdownScope","closeDropdown","keybindFilter","getAutoClose","toggleElement","getToggleElement","dropdownElement","getDropdownElement","$$phase","which","focusToggleElement","isKeynavEnabled","focusDropdownEntry","dropdownConfig","dropdownService","$animate","$position","getIsOpen","setIsOpen","noop","toggleInvoker","onToggle","appendToBody","keynavEnabled","assign","isDefined","dropdownAppendToBody","keyboardNav","dropdownMenu","arguments","autoClose","getElement","elems","eq","selectedOption","wasOpen","pos","positionElements","display","hasClass","left","right","innerWidth","prop","dropdownMenuTemplateUrl","tplContent","newEl","replaceWith","dropdownCtrl","tplUrl","templateUrl","unpositioned","offsetParent","offsetLeft","parentElement","toggleDropdown","visible","classChangePromise","previousState","classDetached","restricet","onChangeFunc","$eval","customOnChange","general","notifications","showGeneral","showNotifications","adminUserSetup","changingPassword","saveUser","userPayload","SavedSearchEndpoint","NotificationEndpoint","loadNotifications","notification","collection","savedSearch","loadContacts","original","can_notify","active","isLoginEmail","deleteNotification","deleteContact","toggleActive","canUpdate","activeContacts","every","isUndefined","canAdd","saveContacts","validContacts","Icon","Default","imagePath","PostActionsDirective","PostActionsService","PostLockService","postIsUnlocked","isPostLockedForCurrentUser","deletePost","posts","updateStatus","openEditMode","postId","statuses","getStatuses","PostMetadataDirective","PostMetadataService","hideDateThisWeek","visibleTo","formatSource","loadUser","loadContact","postDate","post_date","isSame","displayTime","fromNow","displayTimeFull","timeago","formatDates","oldPostId","charAt","toUpperCase","resp","PostSurveyService","allowedSurveys","allowed_forms","canCreatePostInSurvey","can_create","lock","handleFailure","unlockSilent","PostLockDirective","canUnlock","showLockMessage","MessageEndpoint","setContactUser","getMessagesForPagination","currentPage","itemsPerPage","updated","date","formatDate","totalItems","total_count","showPagination","contactId","oldContactId","pageChanged","getContactDisplay","sendMessage","reply","reply_text","direction","contact_id","surveyInfo","addForm","selectedSurvey","surveys","standardTask","formatTags","tagIds","formatedTags","tagObj","where","MediaEndpoint","mediaId","mediaHasCaption","loadMedia","mediaLoaded","media","newMediaId","oldMediaId","PostVideoValue","videoUrl","PostVideoValueController","$sce","trustAsResourceUrl","PostDetailMap","hideMap","addGeoJSONToMap","f","geojsonData","emptyGeoJSON","geoJson","addTo","fitBounds","getBounds","getZoom","setZoom","PostDetailData","PostDetailDataController","$filter","postStatus","form_name","form_description","form_color","postValues","tasks","form_attributes","visibleTask","hasFileIcon","post_task","completed_stages","completed","tasks_with_attributes","uniq","mapDataLoaded","selectedPost","publishedFor","stageIsComplete","taskHasValues","showTasks","isPostValue","showType","activateTaskTab","selectedTaskId","publishPostTo","updatedPost","requiredTasks","stage","$from","deselectPost","filterPostEditorCategories","attributeOptions","ret","content","PostEditService","cleanPostValues","validatePost","isPostValid","tasks_to_validate","$invalid","required_attributes","checkboxValidity","$dirty","MediaEditService","saveMedia","medias","calls","deleteMedia","caption","renderViewValue","$viewValue","handleMediaChange","handleMediaIdChange","handleMediaDeleted","showAdd","showReplace","showDelete","$render","PostVideo","PostVideoController","urlError","constructIframe","video","parseVideo","preview","previewId","empty","wrap","videoId","timeOptions","interval","dateOptions","toDate","PostLocationDirective","Geocoding","currentPositionControl","onDocumentClick","onMapClick","wrappedLatLng","updateMarkerPosition","updateModelLatLon","onLocationError","centerMapTo","updateManualLatLon","manualModel","setLatLng","draggable","latLng","getLatLng","setView","searchLocationTerm","searchLocation","searchResults","searchTimeout","handleActiveSearch","del","letter","clear","removeLayer","classList","add","chooseLocation","chooseCurrentLocation","start","showCurrentPositionControl","updateMapFromLatLon","protocol","hostname","control","locate","locateOptions","maximumAge","noResults","searching","newValue","oldValue","search","searchTerm","selectPost","clearPost","PostEditor","PostEditorController","postEntity","canSavePost","postForm","everyone","isEdit","validationErrors","visibleStage","enableTitle","setVisibleStage","loadData","requests","message_location","incompleteStages","allowedChangeStatus","savePost","saving_post","tagKeys","pick","flatten","success_message","submitting","savingText","submittingText","PostValueEdit","postField","PostValueEditController","fieldSetAttributes","isDate","isDateTime","isText","isTextarea","isCheckbox","dateFormat","canAddValue","canRemoveValue","addValue","removeValue","taskIsMarkedCompleted","isFieldSetStructure","PostCategoryEditorDirective","PostCategoryEditorController","PostVerticalTabs","stages","PostVerticalTabsController","toggleStageCompletion","without","PostToolboxDirective","changeStatus","allowedChangeOwner","editAuthor","showEditAuthorButton","showEditAuthorForm","showUserRealname","author_realname","showAuthorRealname","loadAuthorFormDefaults","displayCreated","displayUpdated","FilterPostSortingOptionsDirective","renderModelValue","orderValue","labelTranslateKey","saveToView","orderGroup","orderByOptions","FilterPostOrderAscDescDirective","selectedValue","saveToViewSelected","activeOrderOptions","FilterUnlockedOnTopDirective","unlockedOnTop","PostDataEditor","PostDataEditorController","editForm","ignoreCancelEvent","selectForm","unbindOnStart","unlockPost","PostViewService","showNoPostsSlider","noPostText","PostViewMap","noui","markers","geoJsonLayers","requestBlockSize","numberOfChunks","currentGeoJsonRequests","addPostsToMap","onEachFeature","markerClusterGroup","getLayers","addLayer","invalidateSize","watchFilters","isEqual","keys","$cancelRequest","clearLayers","loadPosts","currentBlock","getQueryParams","conditions","has_location","block","goToPost","FeatureGroup","getPopup","openPopup","details","bindPopup","mapSelector","getModeId","getMode","savedSearchId","PostViewCreate","PostViewCreateController","PostCardDirective","canSelect","selectedPosts","shortContent","externalClickAction","isPostLocked","clickAction","postActions","loadForm","stopClickPropagation","mediaAttribute","hasCaption","AddPostButtonDirective","AddPostButtonController","handleClick","upgradeButton","AddPostSurveyListDirective","AddPostSurveyListController","createPost","buttonToggle","buttonOptionsStyle","opacity","toggleButton","ModeContext","ModeContextController","ModeContextFormFilterDirective","ModeContextFormFilter","getPostStats","queryParams","include_unmapped","updateCounts","sourceStats","provider","sourceStat","reduce","count","unmapped","post_count","showOnly","hide","canAddToSurvey","showLanguage","languageToggle","goToUnmapped","getDefaults","setFilters","unknown","postCountRequest","responses","getFilters","FilterBySurveryDirective","FilterBySurveryController","openFilters","FilterBySurveryDropdownDirective","FilterBySurveryDropdownController","filtersMenuOpen","PostToolbarDirective","PostToolbarController","editEnabled","setEditMode","editMode","hideOtherActions","filtersActive","showOtherActions","FilterByDatasourceDirective","postStats","FilterByDatasourceController","assignStatsToProviders","providers","substr","heading","formatHeading","getTotals","compact","dataSources","smsProviders","featureEnabled","showOnlyIncoming","toggleFilters","PostViewData","PostViewDataController","itemsPerPageOptions","groupedPosts","deletePosts","deletePostsPromises","deletedIds","group","clearSelectedPosts","getPosts","hasFilters","userHasBulkActionPermissions","any","updateStatusPromises","newStatusMatchesFilters","removePostFromList","showPost","fromWhere","confirmEditingExit","loadMore","newPostsCount","stopInterval","recentPosts","addNewestPosts","unshift","groupPosts","selectBulkActions","bulkActionsSelected","closeBulkActions","next","shouldWeRunCheckForNewPosts","activeCol","removePostThatDoesntMatchFilters","postObj","postDoesNotMatchFilters","bool","timeOfPageLoad","utc","unbindFns","goToFirstPostIfPostDoesNotMatchFilters","postQuery","postsResponse","nextInLine","matchingStatus","useOffset","clearPosts","postList","yesterday","subtract","groupBy","getNewPosts","existingFilters","filterDate","date_before","isSameOrBefore","created_after_by_id","created_after","arr","comp","ele","final","checkForNewPosts","time","args","Function","created_before_by_id","reactiveFilters","reactToFilters","FilterPostsDirective","FilterPostsController","hideDropdown","isopen","handleDocumentClick","searchSavedToggle","showDropdown","removeQueryFilter","clearFilter","off","CategorySelectDirective","selectedCategories","handleParents","newSelection","oldSelection","noChanges","internal","filtersInternalChange","itemsAdded","difference","itemsRemoved","added","itemIsRelated","itm","parentSelected","childrenAllSelected","childId","childrenAllUnselected","saveValueToView","childObj","DateSelectDirective","dateBeforeModel","dateAfterModel","DateSelectController","FormSelectDirective","selectedForms","VisibleToSelectDirective","statusModel","publishedToModel","VisibleToSelectController","updateStateFromModels","visible_to","StatusSelectDirective","selectedStatuses","SourceSelectDirective","selectedSources","LocationFilterDirective","centerPointModel","withinKmModel","geocoding","locationSearchText","coordinates","geocode","coords","FilterHasLocationDirective","hasLocation","FilterHasLocationLink","ActiveSearchFilters","FilterTransformers","originalSavedSearch","handleFiltersUpdate","resetSearch","currentFilters","getUIActiveFilters","rawFilters","getModeEntity","userCanUpdateSavedSearch","uiFilters","originalSavedSearchFilters","savedSearchFilters","cleanRemovedValuesFromObject","uiSavedSearchActiveFilters","uiOriginalSavedSearchFilters","uiActiveFilters","cleanSavedSearchFilters","addIfCurrentObjectMatchesOriginal","getUISavedSearchFilters","savedSearchFiltersChanged","filtersHaveDifferences","filtersDifferentToSavedSearch","cleanUIFilters","current","removeFilter","filterKey","clearFilterFromArray","transformFilterValue","transformers","removeSavedSearch","setMode","filterV","keyV","removeCollection","showSaveSavedSearchButton","getActiveFilters","requestsFiltersData","PostFiltersService","filterState","filterMode","entity","clearFilters","isObject","center_point","within_km","newMode","countFilters","oldFilters","validFilters","mapObject","currentSavedSearch","date_after","current_stage","saved_search","order_unlocked_on_top","FilterTransformersService","users","savedSearches","boolText","location_text","km","created_before","FiltersDropdown","dropdownStatus","FiltersDropdownController","canUpdateSavedSearch","saveSavedSearchModal","editSavedSearchModal","editOrUpdate","modalHeaderText","disableApplyButton","FilterSavedSearch","selectedSavedSearch","modeEntity","isSameSavedSearch","handleModeIdChange","searchesLength","searches","loadSavedSearches","searchesTmp","isOwner","featured","SortAndFilterCounterDirective","filtersCount","PostShareDirective","PostShareController","openShareMenu","isButton","isAdd","ShareMenuDirective","ShareMenuController","shareUrl","isExportable","origin","shareUrlEncoded","encodeURIComponent","PostExportDirective","PostExportController","getQuery","include_hxl","exportPostsConfirmation","ViewHelper","featuredEnabled","cpySavedSearch","clone","savedsearch","saveSearch","filtersChanged","equals","SavedSearchModal","SavedSearchModalController","fail","searchSearches","createNewSearch","goToSearch","viewParam","SavedSearchListEditorModal","SavedSearchListEditorModalController","selectedSavedSearches","deleteList","itmId","cancelLoading","SavedSearchModeContext","SavedSearchModeContextController","showNotificationLink","canEdit","collectionView","saveNotification","removeNotification","editSavedSearch","deleteSavedSearch","showAddToCollection","editCollection","createCollection","deleteCollection","CollectionModeContext","CollectionModeContextController","CollectionEditor","CollectionEditorController","saveCollection","savedCollection","cpyCollection","CollectionListing","CollectionListingController","loadCollections","collectionQuery","isToggleMode","addToCollection","selectedCollection","addToPostsSet","String","toggleCollection","sets","postInCollection","collectionClickHandler","createNewCollection","searchCollections","onDone","selectedPostObjects","resolveCollection","resolveSavedSearch","abstract","squash","component","PostViewNouiController","$controller","ActivityController","startOf","createdAfter","createdBefore","toDateString","endOf","setDateRange","currentInterval","editableInterval","saveFilters","cancelChangeFilters","loggedIn","timeSince","seconds","getPostsForPagination","firspost_timestamp","start_timestamp","ActivityBarChartController","chart","xAxis","axisLabel","groupByOptions","yAxis","height","margin","bottom","x","showValues","showControls","valueFormat","transitionDuration","tickPadding","axisLabelDistance","tickFormat","tooltip","contentGenerator","forceY","barColor","scale","category20","range","noData","ActivityTimeChartController","yAxisLabelCumulative","yAxisLabel","xAxisLabel","timelineAttribute","max","updateAxisLabel","cumulative","showCumulative","series","point","TargetedSurveyTableController","targetedSurveyStatsByForm","totalMessagesSent","totalResponseRecipients","noSurveys","total_response_recipients","CrowdsourcedSurveyTableController","crowdsourcedSurveyStatsByForm","totalAll","totalWeb","totalEmail","totalSms","totalTwitter","unstructuredStats","total_by_data_source","web","sms","twitter","group_by","stat","deleteDataImport","csv","setStatus","selectedStatus","setStatusOption","statusOption","isStatusOption","isStatusSelected","setSelectedForm","selectedForm","isSelectedForm","cancelImport","stepOneComplete","form_id","points","titleAttr","descAttr","titleLabel","descLabel","required_fields","required_fields_map","hasRequiredTask","loadStepTwo","maps_to","invert","remapColumns","duplicateVars","countBy","allKeys","checkForDuplicates","allDuplicatesAreEmpty","duplicates","missing","fields","toArray","field","checkRequiredFields","validateCSV","fixed","updateAndImport","stepTwoComplete","csvEnabled","HdxDetails","HdxDetailsController","$stateParams","HxlLicenseEndpoint","HxlOrganisationsEndpoint","HxlMetadataEndpoint","exportJob","uploadToHdx","metadata","export_job_id","organisation_id","organisation","organisation_name","hxl_meta_data_id","showProgress","licenses","organisations","SurveyEditor","SurveyEditorController","getInterimId","currentInterimId","saving_survey","changeAttributePriority","increment","changeTaskPriority","canReorderTask","moveTaskUp","moveTaskDown","isFirstTask","isLastTask","deleteTask","isString","duplicateSection","dup","switchTab","openTaskModal","addNewTask","openAttributeModal","activeTask","openAttributeEditModal","editAttribute","addNewAttribute","getNewAttributePriority","moveAttributeUp","moveAttributeDown","isFirstAttribute","isLastAttribute","deleteAttribute","saveSurvey","removeInterimIds","admin","roles_allowed","saveRoles","isNaN","toggleTaskRequired","toggleAttributeRequired","toggleTaskPublic","changeTaskLabel","section","tab","old_tab","tab_history","old_tab_li","tab_li","loadRoleData","onlyOptional","anonymiseReportersEnabled","location_precision","pow","require_approval","availableForms","availableCategories","forms_limit","hasOptions","removeOption","addOption","newTask","newAttribute","createNewAttribute","availableAttrTypes","Editor","labelError","editor","previewStyle","editorHeight","initialEditType","toolbarItems","usageStatistics","setValue","instructions","style","getValue","attributeLabel","canDisplay","canMakePrivate","canDisableCaption","TargetedQuestionDirective","TargetedQuestionLink","charactersRemaining","removeError","questionError","questionMessage","handleDragEnd","$evalAsync","updateMapPreview","handleMoveEnd","getPrecision","patternDigitsOnly","patternFloat","minZoom","maxZoom","minObfuscation","maxObfuscation","updatePrecision","current_precision","updateMapPreviewLayer","eachLayer","TileLayer","locationPrecisionEnabled","getCenter","getMinZoom","getMaxZoom","ApiKeyEndpoint","formTemplate","SystemLanguage","isPrivateEnabled","api_key","userSavedSettings","generateApiKey","newSystemLanguage","userLanguage","usersFiltersForm","$rollbackViewValue","refreshView","rolesEnabled","whereToNext","saving_role","$resolve","saveRole","checkIfLastAdmin","admins","deleteRole","webhooks","webhooksEnabled","event_types","entity_types","formEnabled","webhook","toggleFormAssociation","saveWebhook","getFormAttributes","post_key","provider_id","source_field_key","destination_field_key","deleteWebhook","tierNames","dataExportTitle","dataExportDescription","userSettingsEnabled","hxlEnabled","updateSettings","setting","config_key","config_value","hdxSettings","hdx_api_key","hxlApiKeySet","hxlMaintainerSet","tempMaintainerId","hdx_maintainer_id","goToHdxView","saveKey","tmpSetting","api","tempApiKey","changeKey","changeId","cancelMaintainerSet","cancelApiKeySet","settings","exportAll","showFields","selectFields","selectedFields","exportSelected","displayedForms","getForms","attachAttributes","loadingFeature","hxlApiKey","newData","$anchorScroll","addAnother","nbAttributes","getSelectedFields","fieldError","createHxlLabel","selectedTag","tag_name","selectedHxlAttributes","hxl_attribute","selectHxlAttribute","needsMatchedAttribute","hxl_label","opposite_attribute_str","addGeoMatchedAttribute","selectTag","exportData","sendToHDX","formattedIds","hxlData","formAttribute","form_attribute_id","hxl_tag_id","hxlAttribute","hxlAttributeName","hxlAttr","hxl_attributes","objWithAttr","hxl_attribute_id","formatIds","hxlAttributeSelected","formsWithTags","refreshForms","deleteSurvey","allCategories","deleteCategories","tagId","isToggled","toggleCategory","idx","checkAndNotifyAboutManipulateOwnUser","selectedUsers","toggleUser","translationKey","currentUserId","addUser","deleteUsers","getUsersForPagination","filterRole","changeRole","role_name","itemsPerPageChanged","pagination","usersResponse","filteredRole","passwordShown","saving_user","userSavedUser","limitError","showPassword","deleteUser","available_providers","formsSubmitted","panelVisible","savedProviders","allowedTypeMapping","field_type","attribute_type","saveProviderSettings","addSavedProvider","tierMap","newPlan","activeTab","msgAll","cloudDomain","deploymentsDomain","subdomain","apiDomain"],"mappings":"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P,eAAkB,0BAClB,KAAQ,KACR,KAAQ,UACR,SAAY,S,6BCrBhC1xB,EAAOD,QAAU,CACb,mBACA,OACA,IACA,SACJ,SACI4xB,EACAlhB,EACA9J,EACAI,GAGA,IAAI6qB,EAAW,CACXC,YAAaF,EAAiBG,aAC9BC,KAAM,IAGNC,EAAc,CAEdC,gBAAiB,SAAUC,GACvB,IAAIC,EAAe,GACfC,EAAeF,EAAYhlB,MAAM,KAcrC,OATAvG,EAAE0E,KAAK+mB,EAAc,SAAUC,GAC3B,IAAIC,EAAcV,EAASS,GAAS5N,UAAY,IAAMmN,EAASS,GAASE,gBACxE5rB,EAAE0E,KAAKumB,EAASS,GAASG,MAAO,SAAUzhB,GACtCohB,EAAatzB,KACTyzB,EAAcvhB,OAKnBohB,IAIf,OAAO1hB,EAAKub,uBAAuBgG,M,6BCvCvChyB,EAAOD,QAAU,CACb,OACA,KACJ,SACI0Q,EACArJ,GA4iBA,MAziBuB,CACnB0qB,WAAY,WACR,MAAO,CAGHrN,UAAW,KACX8N,gBAAiB,MACjBC,MAAO,CACL,SACA,SACA,UACA,aACA,SACA,WACA,WACA,aACA,WACA,KACA,MACA,OACA,cACA,UACA,OACA,OACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,OACA,OACA,OACA,WACA,aACA,YACA,MACA,WACA,aACA,WACA,WACA,MACA,MACA,aACA,WACA,aACA,SACA,eACA,MACA,sBACA,sBACA,uBACA,oBACA,KACA,UACA,cACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,iBACA,QACA,SACA,WACA,cACA,UACA,QACA,iBACA,eACA,OACA,YACA,SACA,MACA,OACA,UACA,YACA,WACA,aACA,UACA,YACA,cACA,OACA,aACA,OACA,QACA,UACA,YACA,WACA,UACA,eACA,WACA,OACA,aACA,aACA,WACA,aACA,kBACA,SACA,WACA,cACA,qBACA,uBACA,gBACA,uBACA,MACA,YACA,aACA,MACA,SACA,cACA,iBACA,eACA,cACA,eACA,eACA,eACA,aACA,eACA,iBACA,oBACA,eACA,eACA,cACA,aACA,OACA,SACA,OACA,oBACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,cACA,gBACA,UACA,WACA,UACA,QACA,OACA,QACA,OACA,QACA,QACA,iBACA,QACA,QACA,aACA,QACA,UACA,UACA,OACA,QACA,QACA,OACA,cACA,cACA,MACA,aACA,WACA,SACA,OACA,QACA,UACA,aACA,WACA,YACA,YACA,aACA,cACA,aACA,iBACA,OACA,QACA,SACA,eACA,aACA,iBACA,OACA,aACA,QACA,aACA,mBACA,QACA,eACA,eACA,iBACA,SACA,eACA,QACA,SACA,eACA,QACA,UACA,cACA,cACA,cACA,gBACA,MACA,SACA,gBACA,kBACA,QACA,eACA,QACA,YACA,YACA,QACA,OACA,OACA,cACA,cACA,gBACA,YACA,QACA,eACA,SACA,WACA,kBACA,aACA,cACA,SACA,UACA,UACA,QACA,YACA,UACA,OACA,SACA,MACA,aACA,SACA,eACA,cACA,OACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,gBACA,UACA,WACA,SACA,UACA,UACA,UACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,gBACA,UACA,QACA,SACA,WACA,OACA,YACA,kBACA,iBACA,cACA,SACA,WACA,QACA,UACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,QACA,UACA,OACA,SACA,QACA,MACA,WACA,aACA,SACA,aACA,WACA,SACA,OACA,QACA,eACA,cACA,aACA,YACA,UACA,aACA,OACA,SACA,eACA,iBACA,UACA,MACA,MACA,SACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,SACA,MACA,QACA,QACA,SACA,SACA,MACA,eACA,MACA,MACA,MACA,eACA,gBACA,aACA,cACA,OACA,QACA,eACA,YACA,UACA,OACA,MACA,SACA,OACA,SACA,YACA,cACA,UACA,WACA,OACA,SACA,SACA,SACA,OACA,OACA,WACA,UACA,UACA,UACA,YACA,YACA,QACA,SACA,cACA,eACA,OACA,WACA,gBACA,YACA,cACA,QACA,cACA,aACA,KACA,WACA,UACA,YACA,OACA,SACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,aACA,aACA,aACA,cACA,WACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,cACA,cACA,eACA,YACA,kBACA,kBACA,mBACA,gBACA,WACA,WACA,QACA,SACA,gBACA,eACA,UACA,QACA,OACA,cACA,gBACA,gBACA,eACA,OACA,eACA,MACA,UACA,YACA,QACA,UACA,iBACA,YACA,mBACA,OACA,YACA,OACA,WACA,UACA,SACA,SACA,WACA,kBACA,SACA,aACA,KACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,cACA,qBACA,gBACA,cACA,QACA,YACA,UACA,SACA,WACA,SACA,gBACA,WACA,kBACA,QACA,SACA,WACA,SACA,YACA,SACA,aACA,iBACA,YACA,mBACA,KACA,KACA,QACA,SACA,gBACA,SACA,QACA,QACA,aACA,aACA,UACA,iBACA,iBACA,QACA,eACA,cACA,qBACA,gBACA,SACA,SACA,gBACA,SACA,UACA,iBACA,eACA,OACA,KACA,SACA,QACA,SACA,UACA,YACA,OACA,cACA,QACA,OACA,UACA,iBACA,YACA,WACA,aACA,SACA,cACA,iB,6BCxiBlB,SAASC,EAAiBttB,EAAYiC,GAClC,IAAIgf,EAAehf,EAAGsT,QAClB2L,EAAgBjf,EAAGsT,QACnBgY,GAAS,EAEb,MAAO,CACHpM,KAAM5c,EACNA,aAAcA,EACdI,MAAO6oB,EACPA,cAAeA,EACf/M,SAkBJ,WACI,OAAO8M,GAlBPnM,OAqBJ,SAAgBzX,EAAU0L,GACtB,IA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","file":"app.7b9f5a9d833c267bb2a3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t0: 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"2\":\"vendors~rtl\"}[chunkId]||chunkId) + \".\" + {\"2\":\"a7a4e34912f9c6073a8c\",\"3\":\"f0b8ef7a09ca6762d4b0\",\"4\":\"3edc2840b5b1e43194e4\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"2\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"\" + ({\"2\":\"vendors~rtl\"}[chunkId]||chunkId) + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([229,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = \"<p ng-repeat=\\\"error in errors\\\">\\n    {{error}}\\n</p>\\n\";","module.exports = [\n    '$scope',\n    '$translate',\n    '$rootScope',\n    '$location',\n    'RoleEndpoint',\n    'PermissionEndpoint',\nfunction (\n    $scope,\n    $translate,\n    $rootScope,\n    $location,\n    RoleEndpoint,\n    PermissionEndpoint\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    $translate('tool.manage_roles').then(function (title) {\n        $scope.title = title;\n        $scope.$emit('setPageTitle', title);\n    });\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n}];\n","module.exports = [\n    '$scope',\n    '$translate',\n    '$rootScope',\n    '$location',\n    'WebhookEndpoint',\nfunction (\n    $scope,\n    $translate,\n    $rootScope,\n    $location,\n    WebhookEndpoint\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    $translate('tool.manage_webhooks').then(function (title) {\n        $scope.title = title;\n        $scope.$emit('setPageTitle', title);\n    });\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n}];\n","module.exports = PasswordResetConfirmController;\n\nPasswordResetConfirmController.$inject = ['$rootScope', 'PasswordReset', '$location', '$transition$'];\nfunction PasswordResetConfirmController($rootScope, PasswordReset, $location, $transition$) {\n    var $scope = $rootScope.$new();\n    $scope.token = $transition$.params().token;\n\n    PasswordReset.openResetConfirm($scope);\n    $location.url('/');\n}\n","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$transition$',\nfunction (\n    $scope,\n    $rootScope,\n    $transition$\n) {\n    $scope.surveyId = $transition$.params().id;\n    $scope.actionType = $transition$.params().action;\n}];\n","module.exports = \"<survey-editor survey-id='surveyId' action-type='actionType'></survey-editor>\\n\";","import { isValidNumber, formatNumber, parse } from 'libphonenumber-js';\n// re-route if feature flag is not enabled\nmodule.exports = [\n    '$scope',\n    'Features',\n    '$state',\n    '_',\n    'ModalService',\n    'Sortable',\n    'ConfigEndpoint',\n    'Notify',\n    'FormEndpoint',\n    'FormStageEndpoint',\n    'FormAttributeEndpoint',\n    'FormStatsEndpoint',\n    '$q',\n    'PostFilters',\n    'LoadingProgress',\n    '$transition$',\n    'CountryCodeEndpoint',\n    '$translate',\n    'FormContactEndpoint',\n    'SurveyNotify',\nfunction (\n    $scope,\n    Features,\n    $state,\n    _,\n    ModalService,\n    Sortable,\n    ConfigEndpoint,\n    Notify,\n    FormEndpoint,\n    FormStageEndpoint,\n    FormAttributeEndpoint,\n    FormStatsEndpoint,\n    $q,\n    PostFilters,\n    LoadingProgress,\n    $transition$,\n    CountryCodeEndpoint,\n    $translate,\n    FormContactEndpoint,\n    SurveyNotify\n) {\n    $scope.isActiveStep = isActiveStep;\n    $scope.isStepComplete = isStepComplete;\n    $scope.completeStepOne = completeStepOne;\n    $scope.completeStepTwo = completeStepTwo;\n    $scope.completeStepThree = completeStepThree;\n    $scope.openQuestionModal = openQuestionModal;\n    $scope.checkForDuplicate = checkForDuplicate;\n    $scope.addNewQuestion = addNewQuestion;\n    $scope.deleteQuestion = deleteQuestion;\n    $scope.cancel = cancel;\n    $scope.publish = publish;\n    $scope.getPublishDescription = getPublishDescription;\n    $scope.previousStep = previousStep;\n    $scope.activeStep = 1;\n    $scope.stepOneWarning = false;\n    $scope.stepTwoWarning = false;\n    $scope.stepThreeWarning = false;\n    $scope.publish = publish;\n    $scope.previousStep = previousStep;\n    $scope.activeStep = 1;\n    $scope.selectedCountry;\n    $scope.textBoxNumbers = '';\n    $scope.validatedNumbers = [];\n    $scope.badCount = 0;\n    $scope.recipientCount = 0;\n    $scope.resetNumbers = resetNumbers;\n    $scope.finalNumbers = {\n            goodNumbers: [],\n            goodNumbersString: '',\n            badNumbersString: '',\n            repeatCount: 0,\n            storageObj: {},\n            badNumberCount: 0\n        };\n    $scope.runValidations = runValidations;\n    $scope.isLoading = LoadingProgress.getLoadingState;\n    $scope.goToDataView = goToDataView;\n    $scope.getCountryCodes = getCountryCodes;\n    $scope.countriesList = [];\n    $scope.getFormStats = getFormStats;\n    $scope.totalResponses = 0;\n    $scope.totalRecipients = 0;\n    $scope.totalSent = 0;\n    $scope.totalPending = 0;\n    $scope.default_attributes = [\n        {\n            cardinality: 0,\n            input: 'text',\n            label: 'Title',\n            priority: 1,\n            required: true,\n            type: 'title',\n            options: [],\n            config: {},\n            form_stage_id: null\n        },\n        {\n            cardinality: 0,\n            input: 'text',\n            label: 'Description',\n            priority: 2,\n            required: true,\n            type: 'description',\n            options: [],\n            config: {},\n            form_stage_id: null\n        }\n    ];\n\n    Features.loadFeatures()\n           .then(() => {\n            $scope.targetedSurveysEnabled = Features.isFeatureEnabled('targeted-surveys');\n            // reroute if feature-flag is not turned on\n            if (!$scope.targetedSurveysEnabled) {\n                $state.go('settings.surveys.create');\n            }\n        });\n    $scope.getCountryCodes();\n\n    $scope.surveyId = $transition$.params().id;\n    if ($scope.surveyId) {\n        //if we come here from the survey-list, we show the summary of the survey\n        // WARNING: TODO: Once we can get hold of the stats about responses and number of sms sent, we need to request them\n        $scope.activeStep = 4;\n        FormEndpoint.get({id: $scope.surveyId}).$promise.then((result) => {\n            $scope.survey = result;\n            FormAttributeEndpoint.query({formId: $scope.surveyId}).$promise.then((result) => {\n                $scope.survey.attributes = result;\n            });\n        });\n        getFormStats();\n    } else {\n        // Initializes a new survey-object\n        $scope.survey =  {\n                color: null,\n                everyone_can_create: false,\n                hide_author: true,\n                targeted_survey: 1\n            };\n    }\n\n    // needed for Sortablejs and drag-drop in step 3\n    let el = document.getElementById('listWithHandle');\n    if (el) {\n        Sortable.create(el, {\n            handle: '.list-handle',\n            animation: 150,\n            onEnd: changeOrder\n        });\n    }\n\n    function isActiveStep(step) {\n        return $scope.activeStep === step;\n    }\n\n    function isStepComplete(step) {\n        return step.$valid;\n    }\n\n    function changeOrder(evt) {\n        var items = evt.to.children;\n        _.each(items, function (item, index) {\n            _.each($scope.survey.attributes, function (question) {\n                if (question.label === item.getAttribute('data')) {\n                    question.priority = index + 1;\n                }\n            });\n        });\n    }\n\n    function completeStepOne() {\n        if (isStepComplete($scope.targetedSurvey.stepOne)) {\n            $scope.activeStep = 2;\n            $scope.stepOneWarning = false;\n        } else {\n            $scope.stepOneWarning = true;\n        }\n    }\n\n    function runValidations(numbers) {\n        $scope.finalNumbers.badNumbersString = '';\n        $scope.finalNumbers.badNumberCount = 0;\n        let numbersArray = numbers.split(',');\n        numbersArray.forEach((entry) => {\n            let number = entry.replace(/\\s/g, '');\n            if (!isValidNumber(number, $scope.selectedCountry.country_code) && number.length) {\n                $scope.finalNumbers.badNumbersString = $scope.finalNumbers.badNumbersString + number + ',';\n                $scope.finalNumbers.badNumberCount = $scope.finalNumbers.badNumberCount + 1;\n            } else if (isValidNumber(number, $scope.selectedCountry.country_code) && number.length) {\n                // parse() isn't as complete as isValidNumber(), but formatNumber() needs parsed data\n                //  so with this lib, we have to do _all_ of these things to get to E164\n                let parsedResult = parse(number, $scope.selectedCountry.country_code);\n                number = formatNumber(parsedResult, 'E.164');\n                if ($scope.finalNumbers.storageObj[number]) {\n                    $scope.finalNumbers.repeatCount = $scope.finalNumbers.repeatCount + 1;\n                } else {\n                    $scope.finalNumbers.storageObj[number] = number;\n                    $scope.finalNumbers.goodNumbers.push(number);\n                    $scope.finalNumbers.goodNumbersString = $scope.finalNumbers.goodNumbersString + number + ',';\n                }\n            }\n        });\n    }\n\n    function completeStepTwo() {\n        if (isStepComplete($scope.targetedSurvey.stepTwo) && $scope.selectedCountry !== undefined && $scope.selectedCountry !== null) {\n            $scope.stepTwoWarning = false;\n            runValidations($scope.textBoxNumbers);\n            if ($scope.finalNumbers.badNumbersString.length) {\n                $scope.textBoxNumbers = $scope.finalNumbers.badNumbersString.slice(0, -1);\n            } else {\n                $scope.textBoxNumbers = $scope.finalNumbers.goodNumbersString.slice(0, -1);\n                $scope.recipientCount = $scope.finalNumbers.goodNumbers.length;\n                $scope.activeStep = 3;\n            }\n        } else {\n            $scope.stepTwoWarning = true;\n        }\n    }\n\n    function resetNumbers() {\n        $scope.finalNumbers = {\n            goodNumbers: [],\n            goodNumbersString: '',\n            badNumbersString: '',\n            repeatCount: 0,\n            storageObj: {},\n            badNumberCount: 0\n        };\n    }\n\n    function completeStepThree() {\n        if ($scope.survey.attributes !== undefined && $scope.survey.attributes.length) {\n            $scope.stepThreeWarning = false;\n            $scope.activeStep = 4;\n            $scope.total_sms_messages = $scope.survey.attributes.length * $scope.finalNumbers.goodNumbers.length;\n        } else {\n            $scope.stepThreeWarning = true;\n        }\n    }\n\n    function openQuestionModal(question) {\n        $scope.stepThreeWarning = false;\n        if (question) {\n            $scope.editQuestion = question;\n            // copying label, question-property is used to avoid the label-text to update while writing in the modal-window\n            $scope.editQuestion.question = angular.copy($scope.editQuestion.label);\n        } else {\n            $scope.editQuestion = {newQuestion: true};\n        }\n\n        let modalTitle = question ? 'survey.targeted_survey.edit_title' : 'survey.targeted_survey.new_question_title';\n        ModalService.openTemplate('<targeted-question></targeted-question>', modalTitle, null, $scope, true, true);\n    }\n\n    function checkForDuplicate() {\n        let exists = _.filter($scope.survey.attributes, function (question) {\n            return $scope.editQuestion.question === question.label;\n        });\n        return exists.length !== 0;\n    }\n\n    function addNewQuestion() {\n        ModalService.close();\n        if (!$scope.survey.attributes) {\n            $scope.survey.attributes = [];\n        }\n\n        $scope.editQuestion.input = 'textarea';\n        $scope.editQuestion.type = 'text';\n\n        // This is to avoid the 2-way binding and the label to update while writing in the modal\n        $scope.editQuestion.label = angular.copy($scope.editQuestion.question);\n\n        // This is to avoid adding same question twice and we don't have any unique id-s for the questions yet\n        if ($scope.editQuestion.newQuestion) {\n            $scope.editQuestion.priority = getPriority($scope.survey.attributes);\n            delete $scope.editQuestion.newQuestion;\n            $scope.survey.attributes.push($scope.editQuestion);\n        }\n    }\n\n    function getPriority(step) {\n        return step && step.length > 0 ? _.last(step).priority + 1 : 1;\n    }\n\n    function deleteQuestion() {\n        ModalService.close();\n        if (!$scope.editQuestion.newQuestion) {\n            $scope.survey.attributes = _.filter($scope.survey.attributes, function (question) {\n                return question.label !== $scope.editQuestion.label;\n            });\n        }\n    }\n    function cancel() {\n        ModalService.close();\n    }\n    function goToDataView(id) {\n        // redirecting to data-view, function used in the notification-window and in the summary-view\n        PostFilters.setFilter('form', [id]);\n        $state.go('posts.data');\n    }\n\n    function saveContacts(id) {\n        FormContactEndpoint.save({formId: id, contacts: $scope.textBoxNumbers, country_code: $scope.selectedCountry.country_code}).$promise.then(function (response) {\n            // Ensure that title and description are not taken into consideration when counting number of messages to send\n            let messages = $scope.finalNumbers.goodNumbers.length * ($scope.survey.attributes.length - 2);\n            let notifyMessage = messages === 1 ? 'survey.targeted_survey.publish_notification_one' : 'survey.targeted_survey.publish_notification_many';\n            Notify.notifyAction(notifyMessage, {messages}, false, 'thumb-up', 'circle-icon confirmation', {callback: goToDataView, text: 'survey.targeted_survey.notification_button', callbackArg: id, actionClass: 'button button-alpha'});\n            $state.go('settings.surveys', {}, { reload: true });\n        }, function (err) {\n            let errors = ['survey.targeted_survey.error_contacts '];\n            _.each(err.data.errors, (error) => {\n                // if the number-validation fails in the api, we show the user which numbers failed.\n                if (error.source) {\n                    errors.push(error.source.pointer + ' ');\n                }\n                Notify.errors(errors);\n            });\n        });\n    }\n\n\n    function saveFormStageAttributes(id) {\n\n        var attributes = $scope.default_attributes.concat($scope.survey.attributes);\n        let task = {\n            attributes: attributes,\n            formId: id,\n            is_public: true,\n            label: 'Post',\n            priority: 0,\n            required: false,\n            show_when_published: true,\n            task_is_internal_only: false,\n            type: 'post',\n            // attaching id to survey in case something goes wrong further down in the save-chain, then we dont want to save the survey again, just update it\n            id: $scope.survey.stageId\n        };\n\n        FormStageEndpoint\n            .saveCache(task)\n            .$promise\n            .then(function (savedTask) {\n                $scope.survey.stageId = savedTask.id;\n                let questions = [];\n                _.each(attributes, function (question) {\n                        question.form_stage_id = savedTask.id;\n                        question.formId = id;\n                        questions.push(FormAttributeEndpoint\n                            .saveCache(question)\n                            .$promise);\n                    });\n                $q.all(questions).then(function (saved) {\n                    // saving the attributes with id to survey\n                    $scope.survey.attributes = saved;\n                    // once we have saved the survey and its attributes (the questions) we save the contacts\n                    saveContacts(id);\n                }, function (err) {\n                        Notify.error('survey.targeted_survey.error_message');\n                    });\n            }, function (err) {\n            Notify.error('survey.targeted_survey.error_message');\n        });\n    }\n\n    function saveTargetedSurvey() {\n        FormEndpoint.saveCache($scope.survey)\n        .$promise\n        .then(function (savedSurvey) {\n            // attaching id to survey in case something goes wrong further down, then we dont want to save the survey again, just update it\n            $scope.survey.id = savedSurvey.id;\n            saveFormStageAttributes(savedSurvey.id);\n        }, function (err) {\n            Notify.error('survey.targeted_survey.error_message');\n        });\n    }\n\n    function publish() {\n        Notify.confirmModal('Are you sure you want to send this SMS survey?', null, getPublishDescription(), `{questions: ${$scope.survey.attributes.length}, numbers: ${$scope.finalNumbers.goodNumbers.length}, total_sms_messages: ${$scope.total_sms_messages}}`, 'publish').then(function () {\n            saveTargetedSurvey();\n        });\n    }\n\n    function getPublishDescription() {\n        if ($scope.isActiveStep(4) && !$scope.surveyId) {\n            if ($scope.survey.attributes.length === 1 && $scope.finalNumbers.goodNumbers.length === 1) {\n                return 'survey.targeted_survey.publish_description_one_number_one_question';\n            } else if ($scope.survey.attributes.length === 1) {\n                return 'survey.targeted_survey.publish_description_one_question';\n            } else if ($scope.finalNumbers.goodNumbers.length === 1) {\n                return 'survey.targeted_survey.publish_description_one_number';\n            } else {\n                return 'survey.targeted_survey.publish_description_many';\n            }\n        }\n        return 'survey.targeted_survey.published_people';\n    }\n\n    function previousStep() {\n        $scope.activeStep = $scope.activeStep - 1;\n    }\n\n    function getCountryCodes() {\n        CountryCodeEndpoint.query().$promise.then((countryList) => {\n            _.each(countryList, (country) => {\n                country.country_name = $translate.instant('countries.' + country.country_name);\n                $scope.countriesList.push(country);\n            });\n        });\n    }\n\n    function getFormStats() {\n        let recipientRequest = FormContactEndpoint.query({formId: $scope.surveyId}).$promise;\n        let responsesRequest = FormStatsEndpoint.query({formId: $scope.surveyId}).$promise;\n        $q.all([recipientRequest, responsesRequest]).then((results) => {\n            $scope.recipientCount = results[0].length;\n            $scope.totalResponses = results[1].total_responses;\n            $scope.totalRecipients = results[1].total_recipients;\n            $scope.totalSent = results[1].total_messages_sent;\n            $scope.totalPending = results[1].total_messages_pending;\n        });\n    }\n}];\n","module.exports = \"<layout-class layout=\\\"b\\\"></layout-class>\\n<div class=\\\"mode-context init\\\" dropdown auto-close=\\\"disabled\\\">\\n    <header class=\\\"mode-context-header\\\">\\n        <ol class=\\\"breadcrumbs\\\">\\n            <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n            <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n            <li><a href=\\\"/settings/surveys\\\" translate>app.surveys</a></li>\\n        </ol>\\n        <h1 class=\\\"mode-context-title\\\">Surveys</h1>\\n        <a ui-sref=\\\"settings.surveys.create\\\" ng-hide=\\\"surveyId\\\">< <span translate=\\\"settings.send_crowdsourced\\\"></span></a>\\n    </header>\\n\\n    <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n        <span class=\\\"label hidden\\\">Show more/less</span>\\n    </span>\\n\\n    <div class=\\\"mode-context-body\\\">\\n    </div>\\n</div>\\n\\n<main role=\\\"main\\\">\\n    <div class=\\\"toolbar\\\">\\n    </div>\\n    <div class=\\\"progress-bar\\\" ng-show=\\\"isLoading()\\\">\\n      <span>\\n          ..\\n      </span>\\n    </div>\\n\\n    <div class=\\\"main-col\\\">\\n        <form name=\\\"targetedSurvey\\\">\\n            <div ng-show=\\\"targetedSurveysEnabled\\\" class=\\\"form-sheet\\\">\\n                <div class=\\\"form-sheet-summary\\\">\\n                    <h2 class=\\\"form-sheet-title\\\" translate=\\\"survey.targeted_survey.title\\\" ng-hide=\\\"surveyId\\\">Create a new targeted survey</h2>\\n                    <p translate=\\\"survey.targeted_survey.description\\\" ng-hide=\\\"surveyId\\\">Send questions via SMS to a list of those phone numbers.</p>\\n                    <h2 class=\\\"form-sheet-title\\\" translate=\\\"survey.targeted_survey.targeted_survey\\\" ng-hide=\\\"!surveyId\\\">Targeted Survey</h2>\\n                    <p translate=\\\"survey.targeted_survey.targeted_survey_desc\\\" ng-hide=\\\"!surveyId\\\">We sent this survey via SMS</p>\\n                </div>\\n\\n                <div class=\\\"stepper\\\">\\n\\n                    <ng-form name=\\\"stepOne\\\">\\n                        <div class=\\\"stepper-item\\\" ng-class=\\\"{'active': isActiveStep(1), 'disabled': !isActiveStep(1)}\\\">\\n                            <h2 class=\\\"stepper-heading\\\" data-accordion-trigger>\\n                                <span class=\\\"stepper-badge\\\">1</span>\\n                                <span translate=\\\"survey.targeted_survey.name_title\\\">Name your survey</span>\\n                            </h2>\\n\\n                            <div class=\\\"form-field\\\" ng-show=\\\"!isActiveStep(1)\\\">\\n                                <h2 class=form-label translate=\\\"survey.targeted_survey.name\\\">Survey Name</h2>\\n                                <p>{{survey.name}}</p>\\n                            </div>\\n\\n                            <div class=\\\"form-field required\\\"\\n                                ng-class=\\\"{\\n                                        'error': stepOne.name.$invalid && targetedSurvey.stepOne.name.$dirty,\\n                                        'success': !targetedSurvey.stepOne.name.$invalid && targetedSurvey.stepOne.name.$dirty\\n                                        }\\\"\\n                                ng-show=\\\"isActiveStep(1)\\\"\\n                            >\\n                                <label for=\\\"name\\\" translate=\\\"survey.targeted_survey.name\\\">Survey name</label>\\n                                <p ng-show=\\\"stepOneWarning && !targetedSurvey.stepOne.name.$dirty\\\" class=\\\"alert error\\\" translate=\\\"survey.targeted_survey.name_warning\\\">You must give your survey a name.</p>\\n                                <input type=\\\"text\\\" name=\\\"name\\\"  ng-minlength=\\\"2\\\" ng-maxlength=\\\"255\\\" ng-model=\\\"survey.name\\\" ng-required=\\\"true\\\" placeholder=\\\"Name...\\\"></input>\\n                                <div\\n                                    class=\\\"alert error\\\"\\n                                    ng-show=\\\"targetedSurvey.stepOne.name.$dirty\\\"\\n                                    ng-repeat=\\\"(error, value) in targetedSurvey.stepOne.name.$error\\\"\\n                                >\\n                                    <svg class=\\\"iconic\\\">\\n                                        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                                    </svg>\\n                                    <p translate=\\\"{{'notify.form.validation.name.' + error}}\\\"></p>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-field required\\\" ng-show=\\\"isActiveStep(1)\\\">\\n                                <label for=\\\"description\\\" translate=\\\"survey.targeted_survey.description_title\\\">Survey description</label>\\n                                <p ng-show=\\\"stepOneWarning && !targetedSurvey.stepOne.description.$dirty\\\" class=\\\"alert error\\\" translate=\\\"survey.targeted_survey.description_warning\\\">You must give your survey a description.</p>\\n                                <textarea name=\\\"description\\\" ng-model=\\\"survey.description\\\" ng-required=\\\"true\\\" placeholder=\\\"Describe your survey...\\\"></textarea>\\n                                <div\\n                                    class=\\\"alert error\\\"\\n                                    ng-show=\\\"targetedSurvey.stepOne.description.$dirty\\\"\\n                                    ng-repeat=\\\"(error, value) in targetedSurvey.stepOne.description.$error\\\"\\n                                >\\n                                    <svg class=\\\"iconic\\\">\\n                                        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                                    </svg>\\n                                    <p translate=\\\"{{'notify.form.validation.description.' + error}}\\\"></p>\\n                                </div>\\n                            </div>\\n\\n                            <div ng-hide=\\\"isActiveStep(1)\\\">\\n                                <h2 class=form-label translate=\\\"survey.targeted_survey.description_title\\\">Survey Description</h2>\\n                                <p>{{survey.description}}</p>\\n                            </div>\\n\\n                            <div ng-show=\\\"isActiveStep(1)\\\">\\n                                <div class=\\\"form-field\\\">\\n                                    <div class=\\\"button-group\\\">\\n                                        <button class=\\\"button-alpha\\\"  ng-click=\\\"completeStepOne()\\\" formnovalidate translate=\\\"settings.continue\\\">Continue</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </ng-form>\\n\\n                    <ng-form name=\\\"stepTwo\\\">\\n                        <div class=\\\"stepper-item\\\" ng-class=\\\"{'active': isActiveStep(2), 'disabled': !isActiveStep(2)}\\\">\\n                            <h2 class=\\\"stepper-heading\\\">\\n                                <span class=\\\"stepper-badge\\\">2</span>\\n                                <span translate=\\\"survey.targeted_survey.audience_title\\\">Choose your audience</span>\\n                            </h2>\\n                            <span ng-show=\\\"!surveyId\\\">\\n                                <p ng-show=\\\"!isActiveStep(2) && recipientCount > 1\\\" translate=\\\"survey.targeted_survey.send_to_people\\\" translate-values=\\\"{recipientCount: recipientCount}\\\">Send this survey to {{recipientCount}} people via SMS.</p>\\n                                <p ng-show=\\\"!isActiveStep(2) && recipientCount === 1\\\" translate=\\\"survey.targeted_survey.send_to_person\\\" translate-values=\\\"{recipientCount: recipientCount}\\\">Send this survey to {{recipientCount}} person via SMS.</p>\\n                            </span>\\n                            <span ng-show=\\\"surveyId && recipientCount > 0\\\">\\n                                <p ng-show=\\\"!isActiveStep(2) && recipientCount > 1\\\" translate=\\\"survey.targeted_survey.send_to_people\\\" translate-values=\\\"{recipientCount: recipientCount}\\\">Send this survey to {{recipientCount}} people via SMS.</p>\\n                                <p ng-show=\\\"!isActiveStep(2) && recipientCount === 1\\\" translate=\\\"survey.targeted_survey.send_to_person\\\" translate-values=\\\"{recipientCount: recipientCount}\\\">Send this survey to {{recipientCount}} person via SMS.</p>\\n                            </span>\\n                            <div ng-show=\\\"isActiveStep(2)\\\">\\n                                <div class=\\\"form-field\\\" ng-show=\\\"countriesList.length > 0\\\">\\n                                    <label for=\\\"country-code\\\" class=\\\"required\\\" translate=\\\"survey.targeted_survey.country_code\\\">\\n                                        Country code\\n                                    </label>\\n                                    <div class=\\\"alert error\\\" ng-show=\\\"stepTwoWarning && (selectedCountry === undefined || selectedCountry === null)\\\" >\\n                                    <p translate=\\\"survey.targeted_survey.country_code_error\\\">You must select a country.</p>\\n                                </div>\\n                                <div class=\\\"custom-select\\\">\\n                                    <select id=\\\"country-code\\\" ng-options=\\\"country as (country.country_name + ' ' + country.dial_code) for country in countriesList\\\" ng-model=\\\"selectedCountry\\\"\\n                                    ><option selected value='' ng-required=\\\"true\\\" translate=\\\"survey.targeted_survey.select_country\\\">Select Country</option></select>\\n                                </div>\\n                                </div>\\n\\n                                <div class=\\\"form-field\\\" ng-show=\\\"countriesList.length < 1\\\">\\n                                    <label for=\\\"loading-country-code\\\" class=\\\"required\\\" translate=\\\"survey.targeted_survey.country_code\\\">\\n                                        Country code\\n                                    </label>\\n                                    <button id=\\\"loading-country-code\\\" type=\\\"button\\\" class=\\\"button button-beta\\\">\\n                                        <div class=\\\"loading\\\">\\n                                            <div class=\\\"line\\\"></div>\\n                                            <div class=\\\"line\\\"></div>\\n                                            <div class=\\\"line\\\"></div>\\n                                        </div>\\n                                        <span class=\\\"button-label\\\" translate>Loading countries</span>\\n                                    </button>\\n                                </div>\\n\\n                                <div class=\\\"form-field\\\">\\n                                    <label class=\\\"required\\\" required translate=\\\"survey.targeted_survey.phone_numbers\\\">Phone numbers</label>\\n                                    <p translate=\\\"survey.targeted_survey.phone_number_instructions\\\">Please type in the phone numbers you'd like to contact. You must place a comma between each phone number.</p>\\n\\n                                    <div class=\\\"alert error\\\" ng-show=\\\"stepTwoWarning && targetedSurvey.stepTwo.textBoxNumbers.$invalid && !finalNumbers.goodNumbers.length || finalNumbers.repeatCount > 0 || finalNumbers.badNumberCount > 0\\\">\\n                                        <p ng-show=\\\"stepTwoWarning && targetedSurvey.stepTwo.textBoxNumbers.$invalid && !finalNumbers.goodNumbers.length\\\" translate=\\\"survey.targeted_survey.phone_number_warning\\\">You must enter at least 1 phone number.</p>\\n                                        <p ng-show=\\\"finalNumbers.repeatCount > 1\\\" translate=\\\"survey.targeted_survey.multi_repeat_alert\\\" translate-values=\\\"{repeatCount: finalNumbers.repeatCount}\\\">We removed a total of {{finalNumbers.repeatCount}} repeat numbers from your list.</p>\\n                                        <p  ng-show=\\\"finalNumbers.repeatCount === 1\\\" translate=\\\"survey.targeted_survey.one_repeat_alert\\\" translate-values=\\\"{repeatCount: finalNumbers.repeatCount}\\\">We removed a total of {{finalNumbers.repeatCount}} repeat number from your list.</p>\\n                                        <p ng-show=\\\"finalNumbers.badNumberCount > 1\\\" translate=\\\"survey.targeted_survey.multi_number_error\\\" translate-values=\\\"{total: finalNumbers.goodNumbers.length + finalNumbers.badNumberCount + finalNumbers.repeatCount, bad: finalNumbers.badNumberCount}\\\">Of the {{finalNumbers.goodNumbers.length + finalNumbers.badNumberCount + finalNumbers.repeatCount}} phone numbers you entered, we noticed problems with {{finalNumbers.badNumberCount}} of them. Please correct the phone numbers below and continue. Numbers must match the selected country's formatting rules.</p>\\n                                        <p ng-show=\\\"finalNumbers.badNumberCount === 1\\\" translate=\\\"survey.targeted_survey.one_number_error\\\" translate-values=\\\"{total: finalNumbers.goodNumbers.length + finalNumbers.badNumberCount + finalNumbers.repeatCount, bad: finalNumbers.badNumberCount}\\\">Of the {{finalNumbers.goodNumbers.length + finalNumbers.badNumberCount + finalNumbers.repeatCount}} phone numbers you entered, we noticed problems with {{finalNumbers.badNumberCount}} of them. Please correct the phone number below and continue. Numbers must match the selected country's formatting rules.</p>\\n                                    </div>\\n                                    <textarea name=\\\"textBoxNumbers\\\" ng-model=\\\"textBoxNumbers\\\" ng-required=\\\"!finalNumbers.goodNumbers.length\\\" placeholder=\\\"e.g. 1234567890, 9876543210...\\\"></textarea>\\n                                    <div ng-show=\\\"finalNumbers.goodNumbers.length && finalNumbers.badNumberCount > 0\\\">\\n                                        <p ng-if=\\\"finalNumbers.goodNumbers.length > 1\\\" translate=\\\"survey.targeted_survey.multi_numbers_good\\\" translate-values=\\\"{good_numbers: finalNumbers.goodNumbers.length}\\\">These {{finalNumbers.goodNumbers.length}} numbers look fine.</p>\\n                                        <p ng-if=\\\"finalNumbers.goodNumbers.length === 1\\\" translate=\\\"survey.targeted_survey.one_number_good\\\" translate-values=\\\"{good_numbers: finalNumbers.goodNumbers.length}\\\">This {{finalNumbers.goodNumbers.length}} number looks fine.</p>\\n                                        <textarea readonly>{{finalNumbers.goodNumbersString.slice(-1) === ',' ? finalNumbers.goodNumbersString.slice(0, -1) : finalNumbers.goodNumbersString}}</textarea>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-field\\\">\\n                                    <div class=\\\"button-group\\\">\\n                                        <button class=\\\"button-alpha\\\" ng-click=\\\"completeStepTwo()\\\" formnovalidate translate=\\\"settings.continue\\\">Continue</button>\\n                                        <button class=\\\"button\\\" ng-click=\\\"previousStep()\\\" translate=\\\"nav.back\\\">Back</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </ng-form>\\n\\n                    <ng-form name=\\\"stepThree\\\">\\n                        <div class=\\\"stepper-item\\\" ng-class=\\\"{'active': isActiveStep(3), 'disabled': !isActiveStep(3)}\\\">\\n                            <h2 class=\\\"stepper-heading\\\">\\n                            <span class=\\\"stepper-badge\\\">3</span>\\n                            <span translate=\\\"survey.targeted_survey.add_questions_title\\\">Add your questions</span>\\n                            </h2>\\n\\n                            <div class=\\\"alert\\\" ng-show=\\\"isActiveStep(3)\\\">\\n                                <p translate=\\\"survey.targeted_survey.add_questions_description\\\">We will send each question as a separate SMS. After someone responds, we will send the next question in the survey.</p>\\n                            </div>\\n\\n                            <div class=\\\"alert error\\\" ng-show=\\\"stepThreeWarning && (survey.attributes === undefined || !survey.attributes.length)\\\">\\n                                <p  translate=\\\"survey.targeted_survey.question_error\\\">You must add at least one question.</p>\\n                            </div>\\n\\n                            <div class=\\\"form-field\\\" ng-show=\\\"isActiveStep(3)\\\">\\n                                <ul id=\\\"listWithHandle\\\" class=\\\"sortble-list\\\">\\n                                    <li class=\\\"sortable-list-item\\\" ng-repeat=\\\"question in survey.attributes\\\" data={{question.label}} ng-hide=\\\"question.type === 'title' || question.type === 'description'\\\">\\n                                        <span class=\\\"list-handle\\\">\\n                                            <svg class=\\\"iconic\\\">\\n                                                 <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#grid-four-up\\\"></use>\\n                                            </svg>\\n                                        </span>\\n                                        <a class=\\\"list-handle\\\" ng-click=\\\"openQuestionModal(question)\\\">{{question.label}}</a>\\n                                    </li>\\n                                </ul>\\n\\n                                <a ng-show=\\\"survey.attributes.length\\\" ng-click=\\\"openQuestionModal(null)\\\" translate=\\\"survey.targeted_survey.add_another\\\">Add another question...</a>\\n                                <a ng-hide=\\\"survey.attributes.length\\\" ng-click=\\\"openQuestionModal(null)\\\" translate=\\\"survey.targeted_survey.add_a_question\\\">Add a question...</a>\\n                            </div>\\n                            <div ng-hide=\\\"isActiveStep(3)\\\">\\n                                    <p ng-repeat=\\\"question in survey.attributes | orderBy: 'priority'\\\" ng-hide=\\\"question.type === 'title' || question.type === 'description'\\\">{{question.label}}</p>\\n                            </div>\\n\\n\\n                            <div ng-show=\\\"isActiveStep(3)\\\">\\n                                <div class=\\\"form-field\\\">\\n                                    <div class=\\\"button-group\\\">\\n                                        <button class=\\\"button-alpha\\\" ng-click=\\\"completeStepThree()\\\" translate=\\\"settings.continue\\\">Continue</button>\\n                                        <button class=\\\"button\\\" ng-click=\\\"previousStep(); resetNumbers()\\\">Back</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </ng-form>\\n\\n                    <ng-form name=\\\"stepFour\\\">\\n                        <div class=\\\"stepper-item\\\" ng-class=\\\"{'active': isActiveStep(4), 'disabled': !isActiveStep(4)}\\\">\\n                            <h2 class=\\\"stepper-heading\\\">\\n                                <span class=\\\"stepper-badge\\\">4</span>\\n                                <span translate=\\\"survey.targeted_survey.publish\\\"></span>\\n                            </h2>\\n                                <!-- WARNING! Add actual responses once we get them from API -->\\n                                <p ng-show=\\\"surveyId && isActiveStep(4) && totalRecipients > 0\\\">\\n                                    <span ng-show=\\\"totalPending !== 1\\\" translate=\\\"survey.targeted_survey.pending_messages\\\" translate-values=\\\"{totalPending: totalPending}\\\"></span>\\n                                    <span ng-show=\\\"totalPending === 1\\\" translate=\\\"survey.targeted_survey.pending_message\\\" translate-values=\\\"{totalPending: totalPending}\\\"></span>\\n                                    <span ng-show=\\\"totalSent !== 1\\\" translate=\\\"survey.targeted_survey.sent_messages\\\" translate-values=\\\"{totalSent: totalSent}\\\"></span>\\n                                    <span ng-show=\\\"totalSent === 1\\\" translate=\\\"survey.targeted_survey.sent_message\\\" translate-values=\\\"{totalSent: totalSent}\\\"></span>\\n                                    <span ng-show=\\\"totalResponses !== 1\\\" translate=\\\"survey.targeted_survey.received_responses\\\" translate-values=\\\"{responses: totalResponses}\\\"></span>\\n                                    <span ng-show=\\\"totalResponses === 1\\\" translate=\\\"survey.targeted_survey.received_response\\\" translate-values=\\\"{responses: totalResponses}\\\"></span>\\n                                    <span ng-show=\\\"totalRecipients === 1\\\" translate=\\\"survey.targeted_survey.recipient_count\\\" translate-values=\\\"{recipients: totalRecipients}\\\"></span>\\n                                    <span ng-show=\\\"totalRecipients !== 1\\\" translate=\\\"survey.targeted_survey.recipients_count\\\" translate-values=\\\"{recipients: totalRecipients}\\\"></span>\\n                                </p>\\n                            <div class=\\\"alert\\\" ng-show=\\\"isActiveStep(4) && !surveyId\\\">\\n                                <p translate={{getPublishDescription()}} translate-values=\\\"{questions: survey.attributes.length, numbers:finalNumbers.goodNumbers.length, total_sms_messages: total_sms_messages}\\\"></p>\\n                                <p ng-show=\\\"!surveyId\\\" translate=\\\"survey.targeted_survey.send_to_old_number_warning\\\"></p>\\n                            </div>\\n\\n                            <div class=\\\"form-field switch checked\\\" ng-show=\\\"isActiveStep(4) && !surveyId\\\">\\n                                <label for=\\\"switch4\\\" translate=\\\"survey.require_review\\\"></label>\\n                                    <p ng-show=\\\"targetedSurvey.require_review\\\" translate=\\\"survey.require_review_desc\\\"></p>\\n                                    <div class=\\\"toggle-switch\\\">\\n                                        <input class=\\\"tgl\\\" id=\\\"switch4\\\" type=\\\"checkbox\\\" ng-model=\\\"survey.require_approval\\\">\\n                                        <label class=\\\"tgl-btn\\\" for=\\\"switch4\\\"></label>\\n                                    </div>\\n                            </div>\\n\\n                            <div class=\\\"form-field switch checked\\\" ng-show=\\\"isActiveStep(4) && !surveyId\\\">\\n                                <label for=\\\"switch5\\\" translate=\\\"survey.targeted_survey.hide_responders\\\"></label>\\n                                    <p ng-show=\\\"targetedSurvey.hide_responders\\\" translate=\\\"survey.targeted_survey.hide_responders_desc\\\"></p>\\n                                    <div class=\\\"toggle-switch\\\">\\n                                        <input class=\\\"tgl\\\" id=\\\"switch5\\\" type=\\\"checkbox\\\" ng-model=\\\"survey.hide_author\\\">\\n                                        <label class=\\\"tgl-btn\\\" for=\\\"switch5\\\"></label>\\n                                    </div>\\n                            </div>\\n\\n                            <div class=\\\"button-group\\\" ng-show=\\\"isActiveStep(4) && !surveyId\\\">\\n                                <button class=\\\"button-alpha\\\" ng-disabled=\\\"!isStepComplete(targetedSurvey.stepFour)\\\" ng-click=\\\"publish()\\\" translate=\\\"survey.targeted_survey.publish\\\"></button>\\n                                <button class=\\\"button\\\" ng-click=\\\"previousStep()\\\" translate=\\\"nav.back\\\"></button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-field button-group\\\" ng-show=\\\"isActiveStep(4) && surveyId\\\">\\n                            <button class=\\\"button-alpha\\\" ng-click=\\\"goToDataView(surveyId)\\\">View responses</button>\\n                        </div>\\n                    </ng-form>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</main>\\n\";","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$translate',\n    '$location',\n    'RoleEndpoint',\n    'TagEndpoint',\n    'FormEndpoint',\n    'Notify',\n    '_',\n    'Util',\n    '$transition$',\n    '$q',\n    '$state',\nfunction (\n    $scope,\n    $rootScope,\n    $translate,\n    $location,\n    RoleEndpoint,\n    TagEndpoint,\n    FormEndpoint,\n    Notify,\n    _,\n    Util,\n    $transition$,\n    $q,\n    $state\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    // Set initial category properties and page title\n    if ($location.path() === '/settings/categories/create') {\n        // Set initial category properties\n        $scope.category = {\n            type: 'category',\n            icon: 'tag',\n            color: '',\n            parent_id: null,\n            parent_id_original: null\n        };\n        // Allow parent category selector\n        $scope.isParent = false;\n        // Translate and set add category page title\n        $translate('category.add_tag').then(function (title) {\n            $scope.title = title;\n            $scope.$emit('setPageTitle', title);\n        });\n    } else {\n        // Get and set initial category properties\n        getCategory();\n        // Translate and set edit category page title\n        $translate('category.edit_tag').then(function (title) {\n            $scope.title = title;\n            $rootScope.$emit('setPageTitle', title);\n        });\n    }\n\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n    $scope.addParent = addParent;\n    $scope.deleteCategory = deleteCategory;\n    $scope.getParentName = getParentName;\n    $scope.saveCategory = saveCategory;\n\n    $scope.cancel = cancel;\n\n    $scope.processing = false;\n    $scope.save = $translate.instant('app.save');\n    $scope.saving = $translate.instant('app.saving');\n\n    activate();\n\n    function activate() {\n        getRoles();\n        getParentCategories();\n    }\n\n    function getRoles() {\n        RoleEndpoint.query().$promise.then(function (roles) {\n            $scope.roles = roles;\n        });\n    }\n\n    function getParentCategories() {\n        TagEndpoint.queryFresh({ level: 'parent' }).$promise.then(function (tags) {\n            // Remove current tag to avoid circular reference\n            $scope.parents = _.filter(tags, function (tag) {\n                return tag.id !== parseInt($transition$.params().id);\n            });\n        });\n    }\n\n    function getCategory() {\n        TagEndpoint.getFresh({ id: $transition$.params().id }).$promise.then(function (tag) {\n            $scope.category = tag;\n            // Normalize parent category\n            if ($scope.category.parent) {\n                $scope.category.parent_id = $scope.category.parent.id;\n                $scope.category.parent_id_original = $scope.category.parent.id;\n                delete $scope.category.parent;\n            }\n            if ($scope.category.children && $scope.category.children.length) {\n                $scope.isParent = true;\n            }\n        });\n    }\n\n    function addParent(id) {\n        return TagEndpoint.getFresh({id: id});\n    }\n\n    function getParentName() {\n        var parentName = 'Nothing';\n        if ($scope.category && $scope.parents) {\n            $scope.parents.forEach(function (parent) {\n                if (parent.id === $scope.category.parent_id) {\n                    parentName = parent.tag;\n                }\n            });\n        }\n        return parentName;\n    }\n\n    function saveCategory(category) {\n        // Set processing to disable user actions\n        $scope.processing = true;\n\n        //Ensure slug is updated to tag\n        category.slug = category.tag;\n\n        // If child category with new parent\n        if (category.parent_id && category.parent_id !== category.parent_id_original) {\n            let parent = _.findWhere($scope.parents, { id: category.parent_id });\n            // apply new permissions to child category\n            category.role = parent.role;\n        }\n\n        // Save category\n        $q.when(\n            TagEndpoint\n            .saveCache(category)\n            .$promise\n        )\n        .then(function (result) {\n            // If parent category, apply parent category permisions to child categories\n            if (result.children && result.children.length) {\n                return updateChildrenPermissions(result);\n            }\n        })\n        .then(function () {\n            // Display success message\n            Notify.notify(\n                'notify.category.save_success',\n                { name: $scope.category.tag }\n            );\n            // Redirect to categories list\n            $state.go('settings.categories', {}, { reload: true });\n        })\n        // Catch and handle errors\n        .catch(handleResponseErrors);\n    }\n\n    function updateChildrenPermissions(category) {\n        var promises = [];\n        _.each(category.children, function (child) {\n            promises.push(\n              TagEndpoint\n              .saveCache({ id: child.id, role: category.role })\n              .$promise\n            );\n        });\n        return $q.all(promises);\n    }\n\n    function deleteCategory(category) {\n        Notify.confirmDelete(\n            'notify.category.destroy_confirm',\n            'notify.category.destroy_confirm_desc'\n        ).then(function () {\n            return TagEndpoint\n            .delete({ id: category.id })\n            .$promise\n            .then(function () {\n                Notify.notify('notify.category.destroy_success');\n                $location.url('/settings/categories');\n            });\n        })\n        .catch(handleResponseErrors);\n    }\n\n    function handleResponseErrors(errorResponse) {\n        $scope.processing = false;\n        Notify.apiErrors(errorResponse);\n    }\n\n    function cancel() {\n        $location.path('/settings/categories');\n    }\n\n}];\n","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n                <li><a href=\\\"/settings/categories\\\" translate>app.categories</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" ng-show=\\\"category.id\\\" translate>app.edit_category</h1>\\n            <h1 class=\\\"mode-context-title\\\" ng-show=\\\"!category.id\\\" translate>app.add_category</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n        <div class=\\\"mode-context-body\\\">\\n        </div>\\n    </div>\\n    <main role=\\\"main\\\">\\n        <!-- toolbar -->\\n        <div class=\\\"toolbar\\\">\\n            <div class=\\\"button-group\\\">\\n                <button type=\\\"button\\\" class=\\\"button-flat\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n                <button class=\\\"button-alpha\\\" type=\\\"button\\\" ng-click=\\\"saveCategory(category)\\\" type=\\\"submit\\\" ng-disabled=\\\"form.$invalid\\\" ng-if=\\\"!processing\\\">\\n                {{save}}</button>\\n                <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  disabled ng-if=\\\"processing\\\">{{saving}}\\n                  <div class=\\\"loading\\\">\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                  </div>\\n                </button>\\n            </div>\\n        </div>\\n        <!-- end toolbar -->\\n\\n        <!-- start edit -->\\n\\n        <div class=\\\"full-col\\\">\\n          <form name=\\\"form\\\">\\n            <div class=\\\"form-sheet\\\">\\n              <!-- Title -->\\n              <div class=\\\"form-field\\\">\\n                <label translate>category.editor.name</label>\\n                <input type=\\\"text\\\" placeholder=\\\"{{'category.editor.name' | translate}}\\\" ng-minlength=\\\"2\\\" ng-maxlength=\\\"255\\\" ng-model=\\\"category.tag\\\" required>\\n              </div>\\n              <!-- Description -->\\n              <div class=\\\"form-field\\\">\\n                <label translate>category.editor.description</label>\\n                <textarea name=\\\"description\\\" data-min-rows='1' rows='1' ng-maxlength=\\\"150\\\" ng-model=\\\"category.description\\\"></textarea>\\n              </div>\\n              <!-- Parent/child-relations -->\\n              <fieldset\\n                class=\\\"custom-fieldset init\\\"\\n                dropdown\\n                ng-show=\\\"!isParent\\\"\\n              >\\n                <legend\\n                  class=\\\"dropdown-trigger init active\\\"\\n                  data-toggle=\\\"dropdown-menu\\\"\\n                  dropdown-toggle\\n                >\\n                  <span class=\\\"legend-label\\\" translate=\\\"app.this_category_is_child_to\\\" translate-values=\\\"{ parent: getParentName() }\\\">This category is a child to</span>\\n                  <svg class=\\\"iconic chevron\\\">\\n                  <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                  </svg>\\n                </legend>\\n                <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                  <div class=\\\"form-field radio\\\">\\n                      <label for=\\\"parent_label-nothing\\\">\\n                          <input\\n                            type=\\\"radio\\\"\\n                            name=\\\"parent_label\\\"\\n                            id=\\\"parent_label-nothing\\\"\\n                            ng-value=\\\"null\\\"\\n                            ng-checked=\\\"category.parent_id === null\\\"\\n                            ng-model=\\\"category.parent_id\\\"\\n                            />\\n                          <span translate=\\\"app.nothing\\\">Nothing</span>\\n                      </label>\\n                  </div>\\n\\n                  <div class=\\\"form-field radio\\\" ng-repeat=\\\"parent in parents\\\">\\n                      <label for=\\\"parent_label-{{parent.id}}\\\">\\n                          <input\\n                            type=\\\"radio\\\"\\n                            name=\\\"parent_label\\\"\\n                            id=\\\"parent_label-{{parent.id}}\\\"\\n                            ng-checked=\\\"parent.id === category.parent_id\\\"\\n                            ng-value=\\\"parent.id\\\"\\n                            ng-model=\\\"category.parent_id\\\"\\n                          />\\n                          <bdi>{{parent.tag}}</bdi>\\n                      </label>\\n                  </div>\\n                </div>\\n              </fieldset>\\n              <!-- Who can see and add -->\\n              <role-selector model=\\\"category\\\" title=\\\"'app.who_can_see_this_category'\\\" ng-show=\\\"!category.parent_id\\\"></role-selector>\\n              <div class=\\\"form-field\\\" ng-show=\\\"category.parent_id\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#people\\\"></use>\\n                </svg>\\n                <span translate>category.child_permissions</span>\\n              </div>\\n            </div>\\n          </form>\\n          <div class=\\\"form-sheet\\\" ng-show=\\\"category.id\\\">\\n             <div class=\\\"form-sheet-summary\\\">\\n                 <h3 class=\\\"form-sheet-title\\\" translate>category.delete_this_category</h3>\\n             </div>\\n\\n             <div class=\\\"form-field\\\">\\n                 <p translate>category.delete_category_desc</p>\\n\\n                 <button class=\\\"button-destructive\\\" ng-click=\\\"deleteCategory(category)\\\">\\n                     <svg class=\\\"iconic\\\">\\n                         <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                     </svg>\\n                     <span class=\\\"button-label\\\" translate>category.delete_category</span>\\n                 </button>\\n             </div>\\n\\n          </div>\\n        </div>\\n    </main>\\n</div>\\n\";","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n                <li><a href=\\\"/settings/users\\\" translate>app.users</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" ng-show=\\\"user.id\\\" translate>app.edit_user</h1>\\n            <h1 class=\\\"mode-context-title\\\" ng-show=\\\"!user.id\\\" translate>app.add_user</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <div custom-users-editor class=\\\"main-col\\\">\\n\\n            <!-- toolbar -->\\n            <div class=\\\"toolbar\\\">\\n                <div class=\\\"button-group\\\">\\n                    <button type=\\\"button\\\" class=\\\"button-flat\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n                    <button class=\\\"button-alpha\\\" type=\\\"button\\\" ng-click=\\\"saveUser(user)\\\" type=\\\"submit\\\" ng-disabled=\\\"form.$invalid\\\" ng-if=\\\"!saving_user\\\">{{save}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  disabled ng-if=\\\"saving_user\\\">{{saving}}\\n                        <div class=\\\"loading\\\">\\n                            <div class=\\\"line\\\"></div>\\n                            <div class=\\\"line\\\"></div>\\n                            <div class=\\\"line\\\"></div>\\n                        </div>\\n                    </button>\\n                </div>\\n            </div>\\n            <!-- end toolbar -->\\n\\n            <form name=\\\"form\\\">\\n                <div class=\\\"form-sheet\\\">\\n                    <div class=\\\"form-field\\\" ng-class=\\\"{ 'error': form.full_name.$invalid && form.full_name.$dirty }\\\">\\n                        <label translate>user.full_name</label>\\n                        <input type=\\\"text\\\" placeholder=\\\"{{'user_create.full_name' | translate}}\\\" ng-maxlength=\\\"150\\\" ng-model=\\\"user.realname\\\" name=\\\"full_name\\\" required>\\n                        <div ng-repeat=\\\"(error, value) in form.full_name.$error\\\"\\n                            ng-show=\\\"form.full_name.$dirty\\\"\\n                            class=\\\"alert error\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                            <p translate=\\\"{{'user.valid.full_name.' + error}}\\\" translate-default=\\\"{{error}}\\\"></p>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-field\\\" ng-class=\\\"{ 'error': form.email.$invalid && form.email.$dirty }\\\">\\n                        <label class=\\\"hidden\\\" translate>user.email</label>\\n                        <input type=\\\"email\\\" placeholder=\\\"{{'user_create.email' | translate}}\\\" ng-maxlength=\\\"150\\\" ng-model=\\\"user.email\\\" name=\\\"email\\\" required>\\n                        <div ng-repeat=\\\"(error, value) in form.email.$error\\\"\\n                            ng-show=\\\"form.email.$dirty\\\"\\n                            class=\\\"alert error\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                            <p translate=\\\"{{'user.valid.email.' + error}}\\\" translate-default=\\\"{{error}}\\\"></p>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-field\\\" ng-class=\\\"{ 'error': form.password.$invalid && form.password.$dirty }\\\">\\n                        <label class=\\\"hidden\\\" translate>user.password</label>\\n\\n                        <a class=\\\"button button-flat\\\" ng-show=\\\"!passwordShown\\\" ng-click=\\\"showPassword()\\\" translate>user.update_password</a>\\n\\n                        <input type=\\\"password\\\" ng-show=\\\"passwordShown\\\" placeholder=\\\"{{'user.password' | translate}}\\\"  ng-minlength=\\\"7\\\" ng-maxlength=\\\"72\\\" ng-model=\\\"user.password\\\" name=\\\"password\\\" ng-required=\\\"!user.id\\\">\\n                        <div ng-repeat=\\\"(error, value) in form.password.$error\\\"\\n                            ng-show=\\\"form.password.$dirty\\\"\\n                            class=\\\"alert error\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                            <p translate=\\\"{{'user.valid.password.' + error}}\\\" translate-default=\\\"{{error}}\\\"></p>\\n                        </div>\\n                    </div>\\n\\n                    <fieldset class=\\\"custom-fieldset init\\\" dropdown>\\n                        <legend class=\\\"dropdown-trigger init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n                            <span class=\\\"legend-label\\\" translate>\\n                                user.role\\n                            </span>\\n                            <span class=\\\"legend-label\\\" ng-show=\\\"user.role\\\">\\n                                {{ roles[user.role].display_name}}\\n                            </span>\\n                            <svg class=\\\"iconic chevron\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                            </svg>\\n                        </legend>\\n                        <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                            <div class=\\\"form-field radio\\\" ng-repeat=\\\"role in roles\\\">\\n                                <input type=\\\"radio\\\" id=\\\"role{{role.id}}\\\" name=\\\"role\\\"\\n                                    ng-model=\\\"user.role\\\"\\n                                    ng-value=\\\"role.name\\\"\\n                                    required\\n                                >\\n                                <label for=\\\"role{{role.id}}\\\">\\n                                    {{role.display_name}}\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </fieldset>\\n\\n                </div>\\n\\n                <div class=\\\"form-sheet\\\" ng-show=\\\"user.id && user.contacts.length\\\">\\n                    <div class=\\\"form-sheet-summary\\\">\\n                        <h3 class=\\\"form-sheet-title\\\" translate>Contacts</h3>\\n                    </div>\\n                    <div class=\\\"form-field\\\" ng-repeat=\\\"contact in user.contacts\\\">\\n                        <div class=\\\"form-field-addon\\\" style=\\\"text-transform: capitalize\\\">\\n                            <span class=\\\"addon before\\\">{{contact.type}}</span>\\n                            <input type=\\\"text\\\" value=\\\"{{contact.contact}}\\\" disabled=\\\"\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-sheet\\\" ng-show=\\\"user.id\\\">\\n                   <div class=\\\"form-sheet-summary\\\">\\n                       <h3 class=\\\"form-sheet-title\\\" translate>user.delete_user</h3>\\n                   </div>\\n\\n                   <div class=\\\"form-field\\\">\\n                       <p translate>user.delete_user_desc</p>\\n\\n                       <button class=\\\"button-destructive\\\" ng-click=\\\"deleteUser(user)\\\">\\n                           <svg class=\\\"iconic\\\">\\n                               <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                           </svg>\\n                           <span class=\\\"button-label\\\" translate>user.delete_user</span>\\n                       </button>\\n                   </div>\\n                </div>\\n            </form>\\n\\n        </div>\\n\\n    </main>\\n</div>\\n\";","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n                <li><a href=\\\"/settings/roles\\\" translate>app.roles</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" ng-show=\\\"role.id\\\" translate>app.edit_role</h1>\\n            <h1 class=\\\"mode-context-title\\\" ng-show=\\\"!role.id\\\" translate>app.add_role</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <div custom-roles-editor class=\\\"main-col\\\">\\n\\n            <!-- toolbar -->\\n            <div class=\\\"toolbar\\\">\\n                <div class=\\\"button-group\\\">\\n                    <button type=\\\"button\\\" class=\\\"button-flat\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n                    <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  ng-if=\\\"!saving_role\\\"  ng-click=\\\"saveRole(role)\\\">{{save}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  disabled ng-if=\\\"saving_role\\\">{{saving}}\\n                      <div class=\\\"loading\\\">\\n                          <div class=\\\"line\\\"></div>\\n                          <div class=\\\"line\\\"></div>\\n                          <div class=\\\"line\\\"></div>\\n                      </div>\\n                  </button>\\n                </div>\\n            </div>\\n            <!-- end toolbar -->\\n\\n            <form>\\n                <div class=\\\"form-sheet\\\">\\n                   <div class=\\\"form-field\\\">\\n                       <label translate>role.name</label>\\n                       <input type=\\\"text\\\" placeholder=\\\"{{'role.name' | translate}}\\\" ng-minlength=\\\"3\\\" ng-maxlength=\\\"150\\\" ng-model=\\\"role.display_name\\\" required>\\n                   </div>\\n\\n                    <div class=\\\"form-field\\\">\\n                        <label translate>role.description</label>\\n                        <textarea name=\\\"description\\\" data-min-rows='1' rows='1' ng-maxlength=\\\"150\\\" ng-model=\\\"role.description\\\"></textarea>\\n                    </div>\\n\\n                   <fieldset>\\n                       <legend translate>role.permissions</legend>\\n                       <p translate>settings.roles.roles_description</p>\\n\\n                       <div class=\\\"alert\\\" ng-hide=\\\"permissions.length\\\">\\n                           <p ng-hide=\\\"permissions.length\\\"><em translate>empty.permission</em></p>\\n                       </div>\\n\\n                       <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"permission in permissions\\\" ng-if=\\\"role.name == 'admin'\\\">\\n                           <label for=\\\"{{permission.id}}\\\">\\n                               <input id=\\\"{{permission.id}}\\\" type=\\\"checkbox\\\" disabled checked=\\\"checked\\\">\\n                               {{permission.name}}\\n                           </label>\\n                       </div>\\n\\n                       <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"permission in permissions\\\" ng-if=\\\"role.name != 'admin'\\\">\\n                           <label for=\\\"{{permission.id}}\\\">\\n                               <input id=\\\"{{permission.id}}\\\" type=\\\"checkbox\\\" value=\\\"permission.name\\\" checklist-model=\\\"role.permissions\\\" checklist-value=\\\"permission.name\\\">\\n                               {{permission.name}}\\n                           </label>\\n                       </div>\\n                   </fieldset>\\n                </div>\\n\\n                <div ng-if=\\\"!role.protected\\\" class=\\\"form-sheet\\\" ng-show=\\\"role.id\\\">\\n                   <div class=\\\"form-sheet-summary\\\">\\n                       <h3 class=\\\"form-sheet-title\\\" translate>role.delete_role</h3>\\n                   </div>\\n\\n                   <div class=\\\"form-field\\\">\\n                       <p translate>role.delete_role_desc</p>\\n\\n                       <button class=\\\"button-destructive\\\" ng-click=\\\"deleteRole(role)\\\">\\n                           <svg class=\\\"iconic\\\">\\n                               <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                           </svg>\\n                           <span class=\\\"button-label\\\" translate>role.delete_role</span>\\n                       </button>\\n                   </div>\\n\\n                </div>\\n            </form>\\n\\n        </div>\\n\\n    </main>\\n</div>\\n\";","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n                <li><a href=\\\"/settings/webhooks\\\" translate>app.webhooks</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" ng-show=\\\"webhook.id\\\" translate>app.edit_webhook</h1>\\n            <h1 class=\\\"mode-context-title\\\" ng-show=\\\"!webhook.id\\\" translate>app.add_webhook</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <div custom-webhooks-editor class=\\\"main-col\\\">\\n\\n            <!-- toolbar -->\\n            <div class=\\\"toolbar\\\">\\n                <div class=\\\"button-group\\\">\\n                    <button type=\\\"button\\\" class=\\\"button-flat\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n\\n                    <button class=\\\"button-alpha\\\" type=\\\"button\\\" ng-click=\\\"saveWebhook(webhook)\\\" type=\\\"submit\\\" ng-disabled=\\\"form.$invalid\\\" ng-if=\\\"!processing\\\">{{save}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  disabled ng-if=\\\"processing\\\">{{saving}}\\n                    <div class=\\\"loading\\\">\\n                        <div class=\\\"line\\\"></div>\\n                        <div class=\\\"line\\\"></div>\\n                        <div class=\\\"line\\\"></div>\\n                    </div>\\n                </button>\\n\\n                </div>\\n            </div>\\n            <!-- end toolbar -->\\n\\n            <form name=\\\"form\\\">\\n                <div class=\\\"form-sheet\\\">\\n                   <div class=\\\"form-field\\\">\\n                       <label translate>webhook.name</label>\\n                       <input type=\\\"text\\\" placeholder=\\\"{{'webhook.name' | translate}}\\\" ng-minlength=\\\"3\\\" ng-maxlength=\\\"150\\\" ng-model=\\\"webhook.name\\\" required>\\n                   </div>\\n\\n                   <div class=\\\"form-field\\\">\\n                       <label translate>webhook.shared_secret</label>\\n                       <textarea name=\\\"description\\\" data-min-rows='1' rows='1' ng-model=\\\"webhook.shared_secret\\\" required></textarea>\\n                   </div>\\n\\n                   <div class=\\\"form-field\\\">\\n                       <label translate>webhook.url</label>\\n                       <input type=\\\"text\\\" placeholder=\\\"{{'webhook.url' | translate}}\\\" ng-model=\\\"webhook.url\\\" required>\\n                   </div>\\n\\n                   <div class=\\\"form-field\\\">\\n                       <label translate>webhook.event_type</label>\\n                       <div class=\\\"custom-select\\\">\\n                         <select ng-model=\\\"webhook.event_type\\\" required>\\n                             <option ng-repeat=\\\"type in event_types\\\" value=\\\"{{type}}\\\">{{type}}</option>\\n                         </select>\\n                      </div>\\n                   </div>\\n\\n                   <div class=\\\"form-field\\\">\\n                       <label translate>webhook.entity_type</label>\\n                       <div class=\\\"custom-select\\\">\\n                         <select ng-model=\\\"webhook.entity_type\\\" required>\\n                             <option ng-repeat=\\\"type in entity_types\\\" value=\\\"{{type}}\\\">{{type}}</option>\\n                         </select>\\n                      </div>\\n                   </div>\\n                   <div class=\\\"form-field switch\\\">\\n                       <label translate=\\\"settings.webhooks.enable_source_destination\\\">Specify survey</label>\\n                       <div class=\\\"toggle-switch\\\">\\n                           <input class=\\\"tgl\\\" id=\\\"{{provider.id}}_form_enable\\\" type=\\\"checkbox\\\" ng-checked=\\\"formEnabled\\\" ng-click=\\\"toggleFormAssociation()\\\">\\n                           <label class=\\\"tgl-btn\\\" for=\\\"{{provider.id}}_form_enable\\\"></label>\\n                      </div>\\n                      <div data-fieldgroup-target=\\\"import_to_survey-survey\\\" class=\\\"init active\\\">\\n                        <p data-fieldgroup-target=\\\"hide-author-message\\\" class=\\\"init\\\" ng-class=\\\"{'active' : formEnabled}\\\" translate-values=\\\"{ provider: provider.name }\\\" translate=\\\"\\\" >\\n                          <em translate=\\\"settings.webhooks.enable_source_destination_desc\\\">\\n                            This webhook will only be applied to Surveys of the selected type.\\n                          </em>\\n                        </p>\\n\\n                        <fieldset ng-show=\\\"formEnabled\\\" class=\\\"custom-fieldset init\\\" dropdown auto-close=\\\"outsideClick\\\">\\n                            <legend class=\\\"dropdown-trigger init\\\" dropdown-toggle>\\n                              <span class=\\\"legend-label\\\">\\n                                <span tranlate=\\\"webhooks.use_webhook_for\\\">\\n                                  Use webhook for\\n                                </span>\\n                                <span class=\\\"custom-fieldset-value\\\" ng-show=\\\"!selectedForm\\\" translate=\\\"data_import.which_survey\\\">\\n                                  which survey?\\n                                </span>\\n                                <span class=\\\"custom-fieldset-value\\\" ng-show=\\\"selectedForm\\\">\\n                                  {{selectedForm.name}}\\n                                </span>\\n                              </span>\\n                              <svg class=\\\"iconic chevron\\\">\\n                                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                              </svg>\\n                            </legend>\\n\\n                            <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                              <div class=\\\"form-field radio\\\"\\n                                 ng-repeat=\\\"form in forms\\\"\\n                                 ng-class=\\\"{'checked' : webhook.form.id  === form.id}\\\"\\n                                 ng-click=\\\"setSelectedForm(form)\\\">\\n                                 <input\\n                                    id=\\\"import-to-{{form.id}}\\\"\\n                                    name=\\\"import-to\\\"\\n                                    ng-checked=\\\"{{webhook.form_id === form.id}}\\\"\\n                                    type=\\\"radio\\\">\\n                                <label for=\\\"import-to-{{form.id}}\\\">\\n                                    {{form.name}}\\n                                </label>\\n                              </div>\\n                            </div>\\n                        </fieldset>\\n\\n                        <fieldset data-fieldgroup-target=\\\"import_to_survey-fields\\\" class=\\\"init active\\\" ng-show=\\\"selectedForm && formEnabled\\\">\\n                            <legend translate=\\\"survey.choose_survey_field\\\">Choose the source and destination fields</legend>\\n                            <p translate=\\\"survey.choose_survey_field_desc\\\">The webhook will specify, when sending Posts to the remote API, which field should be considered the source and which the destination. The webhook support pages describe this functionality in greater detail. </p>\\n                            <table>\\n                                <thead>\\n                                    <tr>\\n                                      <th>Type</th>\\n                                      <th translate=\\\"survey.survey_field\\\">Survey field</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr>\\n                                      <td>\\n                                        <span>\\n                                          Source\\n                                        </span>\\n                                      </td><td>\\n                                          <div class=\\\"custom-select\\\">\\n                                              <select ng-model=\\\"webhook.source_field_key\\\">\\n                                                 <option\\n                                                   ng-repeat=\\\"attribute in selectedForm.attributes\\\"\\n                                                   value=\\\"{{attribute.post_key}}\\\"\\n                                                   label=\\\"{{attribute.label}}\\\"\\n                                                   ng-class=\\\"{'required' : attribute.required}\\\">\\n                                              </select>\\n                                          </div>\\n                                      </td>\\n                                    </tr>\\n                                    <tr>\\n                                      <td>\\n                                        <span translate=\\\"settings.webhooks.destination\\\">\\n                                          Destination\\n                                        </span>\\n                                      </td><td>\\n                                          <div class=\\\"custom-select\\\">\\n                                              <select ng-model=\\\"webhook.destination_field_key\\\">\\n                                                 <option\\n                                                   ng-repeat=\\\"attribute in selectedForm.attributes\\\"\\n                                                   value=\\\"{{attribute.post_key}}\\\"\\n                                                   label=\\\"{{attribute.label}}\\\"\\n                                                   ng-class=\\\"{'required' : attribute.required}\\\">\\n                                              </select>\\n                                          </div>\\n                                      </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </fieldset>\\n                      </div>\\n                   </div>\\n                </div>\\n\\n                <div ng-if=\\\"!webhook.protected\\\" class=\\\"form-sheet\\\" ng-show=\\\"webhook.id\\\">\\n                   <div class=\\\"form-sheet-summary\\\">\\n                       <h3 class=\\\"form-sheet-title\\\" translate>webhook.delete_webhook</h3>\\n                   </div>\\n\\n                   <div class=\\\"form-field\\\">\\n                       <p translate>webhook.delete_webhook_desc</p>\\n\\n                       <button class=\\\"button-destructive\\\" ng-click=\\\"deleteWebhook(webhook)\\\">\\n                           <svg class=\\\"iconic\\\">\\n                               <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                           </svg>\\n                           <span class=\\\"button-label\\\" translate>webhook.delete_webhook</span>\\n                       </button>\\n                   </div>\\n\\n                </div>\\n            </form>\\n\\n        </div>\\n\\n    </main>\\n</div>\\n\";","require('./app');\nrequire('angular-lazy-bootstrap/src/bootstrap.js');\n\n// Load site config THEN bootstrap the app\nangular.lazy()\n    .resolve(['$q', '$http', function ($q, $http) {\n        if (!window.ushahidi.verifier) {\n            return $http.get(window.ushahidi.apiUrl + '/config')\n            .then(function (response) {\n                window.ushahidi.bootstrapConfig = response.data.results;\n            });\n        }\n    }])\n    .loading(function () {\n        // Show loading\n        angular.element(document.getElementById('bootstrap-loading')).removeClass('hidden');\n    })\n    .error(function (error) {\n        // Show error\n        try {\n            error.data.errors[0].message &&\n            angular.element(document.getElementById('bootstrap-error-message')).html(error.data.errors[0].message);\n        } finally {\n            angular.element(document.getElementById('bootstrap-error')).removeClass('hidden');\n        }\n    })\n    .done(function () {\n        // Hide loading\n        angular.element(document.getElementById('bootstrap-loading')).addClass('hidden');\n    })\n    .bootstrap(document, ['app'], {\n        strictDi: true\n    });\n","require('angular');\nrequire('@uirouter/angularjs');\nrequire('angular-resource');\nrequire('angular-translate');\nrequire('angular-translate-loader-static-files');\nrequire('angular-ui-bootstrap');\nrequire('angular-datepicker/build/angular-datepicker');\nrequire('angular-sanitize');\nrequire('angular-elastic');\nrequire('angular-filter');\nrequire('angular-local-storage');\nrequire('checklist-model');\nrequire('ngGeolocation/ngGeolocation');\nrequire('ng-showdown');\nwindow.d3 = require('d3'); // Required for nvd3\nrequire('./common/wrapper/nvd3-wrapper');\nrequire('angular-nvd3/src/angular-nvd3');\nrequire('angular-cache');\nrequire('angular-linkify');\nrequire('ngtweet');\n\n// Load ushahidi modules\nrequire('./common/common-module.js');\nrequire('./main/main-module.js');\nrequire('./settings/settings.module.js');\nimport ravenModule from './common/raven/raven';\n\n// Load platform-pattern-library CSS\nrequire('ushahidi-platform-pattern-library/assets/fonts/Lato/css/fonts.css');\nrequire('ushahidi-platform-pattern-library/assets/css/style.min.css');\nrequire('../sass/vendor.scss');\n\n// Make sure we have a window.ushahidi object\nwindow.ushahidi = window.ushahidi || {};\n\n// this 'environment variable' will be set within the gulpfile\nvar backendUrl = window.ushahidi.backendUrl = (window.ushahidi.backendUrl || BACKEND_URL).replace(/\\/$/, ''),\n    intercomAppId = window.ushahidi.intercomAppId = window.ushahidi.intercomAppId || '',\n    ushDisableChecks = (window.ushahidi.ushDisableChecks || USH_DISABLE_CHECKS),\n    verifier = window.ushahidi.verifier = (window.ushahidi.verifier || VERIFIER),\n    appStoreId = window.ushahidi.appStoreId = window.ushahidi.appStoreId || '',\n    apiUrl = window.ushahidi.apiUrl = backendUrl + '/api/v3',\n    claimedAnonymousScopes = [\n        'posts',\n        'country_codes',\n        'media',\n        'forms',\n        'api',\n        'tags',\n        'savedsearches',\n        'sets',\n        'users',\n        'stats',\n        'layers',\n        'config',\n        'messages',\n        'notifications',\n        'webhooks',\n        'contacts',\n        'roles',\n        'permissions',\n        'csv'\n    ];\n\nangular.module('app',\n    [\n        'checklist-model',\n        'monospaced.elastic',\n        'ui.router',\n        'ngResource',\n        'LocalStorageModule',\n        'pascalprecht.translate',\n        'ui.bootstrap.pagination',\n        'angular-datepicker',\n        'angular.filter',\n        'ng-showdown',\n        'ngGeolocation',\n        'nvd3',\n        'angular-cache',\n        'linkify',\n        ravenModule,\n        'ushahidi.common',\n        'ushahidi.main',\n        'ushahidi.settings',\n        'ui.bootstrap.dropdown',\n        'ngtweet'\n    ])\n\n    .constant('CONST', {\n        BACKEND_URL              : backendUrl,\n        API_URL                  : apiUrl,\n        INTERCOM_APP_ID          : intercomAppId,\n        APP_STORE_ID             : appStoreId,\n        VERIFIER                 : verifier,\n        DEFAULT_LOCALE           : 'en_US',\n        OAUTH_CLIENT_ID          : 'ushahidiui',\n        OAUTH_CLIENT_SECRET      : '35e7f0bca957836d05ca0492211b0ac707671261',\n        CLAIMED_ANONYMOUS_SCOPES : claimedAnonymousScopes,\n        CLAIMED_USER_SCOPES      : ['*'],\n        MAPBOX_API_KEY           : window.ushahidi.mapboxApiKey || 'pk.eyJ1IjoidXNoYWhpZGkiLCJhIjoiY2lxaXUzeHBvMDdndmZ0bmVmOWoyMzN6NiJ9.CX56ZmZJv0aUsxvH5huJBw', // Default OSS mapbox api key\n        USH_DISABLE_CHECKS       : ushDisableChecks,\n        TOS_RELEASE_DATE         : new Date(window.ushahidi.tosReleaseDate).toJSON() ? new Date(window.ushahidi.tosReleaseDate) : false, // Date in UTC\n        EXPORT_POLLING_INTERVAL  : window.ushahidi.export_polling_interval || 30000\n    })\n    .config(['$compileProvider', function ($compileProvider) {\n        $compileProvider.debugInfoEnabled(false);\n    }])\n    .config(['$locationProvider', function ($locationProvider) {\n        $locationProvider.html5Mode(true).hashPrefix('!');\n    }])\n    .config(function ($urlRouterProvider, $urlMatcherFactoryProvider) {\n        $urlRouterProvider.when('', '/views/map');\n        $urlRouterProvider.when('/', '/views/map');\n        // if the path doesn't match any of the urls you configured\n        // otherwise will take care of routing the user to the specified url\n        $urlRouterProvider.otherwise('/404');\n        $urlMatcherFactoryProvider.strictMode(false);\n    })\n    .config(['$showdownProvider', function ($showdownProvider) {\n        $showdownProvider.setOption('simplifiedAutoLink', true);\n        $showdownProvider.setOption('excludeTrailingPunctuationFromURLs', true);\n        $showdownProvider.setOption('openLinksInNewWindow', true);\n        $showdownProvider.setOption('tasklists', true);\n        $showdownProvider.setOption('sanitize', true);\n    }])\n\n    .factory('_', function () {\n        return require('underscore/underscore');\n    })\n    .factory('d3', function () {\n        return window.d3;\n    })\n    .factory('URI', function () {\n        return require('URIjs/src/URI.js');\n    })\n    .factory('Leaflet', function () {\n        var L = require('leaflet');\n        // Load leaflet plugins here too\n        require('imports-loader?L=leaflet!leaflet.markercluster');\n        require('imports-loader?L=leaflet!leaflet.locatecontrol/src/L.Control.Locate');\n        return L;\n    })\n    .factory('moment', function () {\n        return require('moment');\n    })\n    .factory('BootstrapConfig', ['_', function (_) {\n        return window.ushahidi.bootstrapConfig ?\n            _.indexBy(window.ushahidi.bootstrapConfig, 'id') :\n            { map: {}, site: {}, features: {} };\n    }])\n    .factory('Sortable', function () {\n        return require('sortablejs/Sortable');\n    })\n    .factory('Editor', function () {\n        return require('tui-editor');\n    })\n    // inject the router instance into a `run` block by name\n    //.run(['$uiRouter', '$trace', '$location', function ($uiRouter, $trace, $location) {\n    //     // * uncomment this to enable the visualizer *\n    //     let Visualizer = require('@uirouter/visualizer').Visualizer;\n    //     let pluginInstance = $uiRouter.plugin(Visualizer);\n    //     $trace.enable('TRANSITION');\n    // }])\n    .run(['$rootScope', 'LoadingProgress', '$transitions', '$uiRouter', function ($rootScope, LoadingProgress, $transitions, $uiRouter) {\n        // this handles the loading-state app-wide\n        LoadingProgress.watchTransitions();\n        if (window.ushahidi.gaEnabled) {\n            $transitions.onSuccess({}, function (transition) {\n                window.ga('send', 'pageview',  $uiRouter.urlRouter.location);\n            });\n        }\n    }])\n    .run(['DemoDeploymentService', function (DemoDeploymentService) {\n        angular.element(document.getElementById('bootstrap-app')).removeClass('hidden');\n        angular.element(document.getElementById('bootstrap-loading')).addClass('hidden');\n        DemoDeploymentService.demoCheck();\n    }])\n    .run(['VerifierService', function (VerifierService) {\n        VerifierService.debugModeCheck();\n    }]);\n","import angular from 'angular';\nimport ravenService from './raven.service';\n\nconst ravenUrl = window.ushahidi.ravenUrl || false;\nlet ravenModule;\n// Load raven if configured\nif (ravenUrl) {\n    let Raven = require('raven-js');\n\n    Raven\n        .config(ravenUrl, {\n            release: GIT_COMMIT,\n            environment: window.ushahidi.environment || ENVIRONMENT,\n            tags: {\n                git_commit: GIT_COMMIT\n            },\n            sanitizeKeys: [/Authorization/i, /password/i, /accessToken/i, /api_key/i, /client_secret/i],\n            dataCallback: (data) => {\n                // Replace stringified sensitive info\n                if (data.message) {\n                    data.message = data.message.replace(/\"(Authorization|client_secret|password|accessToken)\":\"(.*?)\"/, '\"$1\":\"****\"');\n                }\n\n                if (data.fingerprint) {\n                    data.fingerprint.forEach((value, index) => {\n                        data.fingerprint[index] = value.replace(/\"(Authorization|client_secret|password|accessToken)\":\"(.*?)\"/, '\"$1\":\"****\"');\n                    });\n                }\n\n                if (data.breadcrumbs && data.breadcrumbs.values) {\n                    data.breadcrumbs.values.forEach((value, index) => {\n                        if (value.message) {\n                            data.breadcrumbs.values[index].message = value.message.replace(/\"(Authorization|client_secret|password|accessToken)\":\"(.*?)\"/, '\"$1\":\"****\"');\n                        }\n                    });\n                }\n            }\n        })\n        .addPlugin(require('raven-js/plugins/angular'), angular)\n        .install();\n\n    ravenModule = angular.module('app.raven', [\n        'ngRaven'\n    ])\n\n    .factory('Raven', () => {\n        return Raven;\n    })\n\n    .service({\n        ravenService\n    })\n\n    .run(['ravenService', (ravenService) => {\n        if (ravenUrl) {\n            ravenService.init();\n        }\n    }])\n\n    .name;\n\n} else {\n    ravenModule = angular.module('app.raven', []).name;\n}\n\nexport default ravenModule;\n","class RavenService {\n    constructor($rootScope, Session, Raven) {\n        'ngInject';\n        this.$rootScope = $rootScope;\n        this.Session = Session;\n        this.Raven = Raven;\n    }\n\n    init() {\n        this.$rootScope.$on('event:authentication:login:succeeded', this.handleLogin.bind(this));\n        this.$rootScope.$on('event:authentication:logout:succeeded', this.handleLogout.bind(this));\n\n        if (this.Session.getSessionDataEntry('userId')) {\n            this.handleLogin();\n        }\n    }\n\n    handleLogin() {\n        if (this.Session.getSessionDataEntry('userId')) {\n            this.Raven.setUserContext({\n                id: this.Session.getSessionDataEntry('userId')\n            });\n        } else {\n            this.Raven.setUserContext({});\n        }\n    }\n\n    handleLogout() {\n        this.Raven.setUserContext({});\n    }\n\n}\n\nexport default RavenService;\n","require('nvd3/src/core');\nrequire('nvd3/src/dom');\nrequire('nvd3/src/interactiveLayer');\nrequire('nvd3/src/tooltip');\nrequire('nvd3/src/utils');\n// Models\n// Uncomment as needed\nrequire('nvd3/src/models/axis');\n// require('nvd3/src/models/boxPlot');\n// require('nvd3/src/models/boxPlotChart');\n// require('nvd3/src/models/bullet');\n// require('nvd3/src/models/bulletChart');\n// require('nvd3/src/models/candlestickBar');\n// require('nvd3/src/models/cumulativeLineChart');\n// require('nvd3/src/models/discreteBar');\n// require('nvd3/src/models/discreteBarChart');\n// require('nvd3/src/models/distribution');\n// require('nvd3/src/models/forceDirectedGraph');\n// require('nvd3/src/models/furiousLegend');\n// require('nvd3/src/models/historicalBar');\n// require('nvd3/src/models/historicalBarChart');\nrequire('nvd3/src/models/legend');\nrequire('nvd3/src/models/line');\nrequire('nvd3/src/models/lineChart');\n// require('nvd3/src/models/linePlusBarChart');\n// require('nvd3/src/models/lineWithFocusChart');\n// require('nvd3/src/models/multiBar');\n// require('nvd3/src/models/multiBarChart');\nrequire('nvd3/src/models/multiBarHorizontal');\nrequire('nvd3/src/models/multiBarHorizontalChart');\n// require('nvd3/src/models/multiChart');\n// require('nvd3/src/models/ohlcBar');\n// require('nvd3/src/models/parallelCoordinates');\n// require('nvd3/src/models/pie');\n// require('nvd3/src/models/pieChart');\nrequire('nvd3/src/models/scatter');\n// require('nvd3/src/models/scatterChart');\n// require('nvd3/src/models/sparkline');\n// require('nvd3/src/models/sparklinePlus');\n// require('nvd3/src/models/stackedArea');\n// require('nvd3/src/models/stackedAreaChart');\n// require('nvd3/src/models/sunburst');\n// require('nvd3/src/models/sunburstChart');\n","angular.module('ushahidi.common', [\n    'ushahidi.common.adaptive-input',\n    'ushahidi.common.dropdown',\n    'ushahidi.common.modal',\n    'ushahidi.common.custom-on-change',\n    'ushahidi.user-profile'\n])\n\n// Authentication\n.service('Authentication', require('./auth/authentication.service.js'))\n.service('Registration', require('./auth/registration.service.js'))\n.service('Session', require('./auth/session.service.js'))\n.service('PasswordReset', require('./auth/password-reset.service.js'))\n.service('TermsOfService', require('./auth/tos.service.js'))\n.service('DemoDeploymentService', require('./auth/demo-deployment.service.js'))\n.directive('login', require('./auth/login.directive.js'))\n.directive('register', require('./auth/register.directive.js'))\n.directive('passwordReset', require('./auth/password-reset.directive.js'))\n.directive('passwordResetConfirm', require('./auth/password-reset-confirm.directive.js'))\n.directive('termsOfService', require('./auth/tos.directive.js'))\n.directive('demoDeployment', require('./auth/demo-deployment.directive.js'))\n.config(require('./auth/authentication-interceptor.config.js'))\n.run(require('./auth/authentication-events.run.js'))\n\n// Notifications\n.service('Notify', require('./notifications/notify.service.js'))\n.service('SliderService', require('./notifications/slider.service.js'))\n.service('DemoSliderService', require('./notifications/demo-slider.service.js'))\n.directive('ushSlider', require('./notifications/slider.directive.js'))\n.directive('ushDemoSlider', require('./notifications/demo-slider.directive.js'))\n\n// API Endpoint wrappers\n.service('ApiKeyEndpoint', require('./services/endpoints/apikey.js'))\n.service('ConfigEndpoint', require('./services/endpoints/config.js'))\n.service('UserEndpoint', require('./services/endpoints/user-endpoint.js'))\n.service('UserSettingsEndpoint', require('./services/endpoints/user-settings.js'))\n.service('FormEndpoint', require('./services/endpoints/form.js'))\n.service('FormAttributeEndpoint', require('./services/endpoints/form-attributes.js'))\n.service('FormRoleEndpoint', require('./services/endpoints/form-roles.js'))\n.service('FormStageEndpoint', require('./services/endpoints/form-stages.js'))\n.service('FormStatsEndpoint', require('./services/endpoints/form-stats-endpoint.js'))\n.service('FormContactEndpoint', require('./services/endpoints/form-contact.js'))\n.service('TagEndpoint', require('./services/endpoints/tag.js'))\n.service('RoleEndpoint', require('./services/endpoints/role.js'))\n.service('WebhookEndpoint', require('./services/endpoints/webhooks.js'))\n.service('PermissionEndpoint', require('./services/endpoints/permission.js'))\n.service('DataProviderEndpoint', require('./services/endpoints/data-providers.js'))\n.service('MediaEndpoint', require('./services/endpoints/MediaEndpoint.js'))\n.service('MessageEndpoint', require('./services/endpoints/message.js'))\n.service('PostEndpoint', require('./services/endpoints/post-endpoint.js'))\n.service('PostLockEndpoint', require('./services/endpoints/post-lock-endpoint.js'))\n.service('CollectionEndpoint', require('./services/endpoints/collection.js'))\n.service('SavedSearchEndpoint', require('./services/endpoints/savedsearch.js'))\n.service('DataImportEndpoint', require('./services/endpoints/data-import.js'))\n.service('ContactEndpoint', require('./services/endpoints/contact.js'))\n.service('NotificationEndpoint', require('./services/endpoints/notification.js'))\n.service('TermsOfServiceEndpoint', require('./services/endpoints/terms-of-service-endpoint.js'))\n.service('ExportJobEndpoint', require('./services/endpoints/export-jobs.js'))\n.service('CountryCodeEndpoint', require('./services/endpoints/country-code-endpoint.js'))\n.service('HxlTagEndpoint', require('./services/endpoints/hxl-tag-endpoint.js'))\n.service('HxlLicenseEndpoint', require('./services/endpoints/hxl-license-endpoint.js'))\n.service('HxlMetadataEndpoint', require('./services/endpoints/hxl-metadata-endpoint.js'))\n.service('HxlOrganisationsEndpoint', require('./services/endpoints/hxl-organisations-endpoint.js'))\n// Other services\n.service('ViewHelper', require('./services/view-helper.js'))\n.service('Features', require('./services/features.js'))\n.service('Util', require('./services/util.js'))\n.service('Maps', require('./services/maps.js'))\n.service('Geocoding', require('./services/geocoding.js'))\n.service('Languages', require('./services/languages.js'))\n.service('IconManager', require('./services/icon-manager.js'))\n.service('FontAwesomeIcons', require('./services/endpoints/FontAwesomeIcons.js'))\n.service('MainsheetService', require('./services/mainsheet.service.js'))\n.service('ModalService', require('./services/modal.service.js'))\n.service('TranslationService', require('./services/translation.service.js'))\n.controller('navigation', require('./controllers/navigation.js'))\n.controller('PageMetadata', require('./controllers/page-metadata.js'))\n.controller('intercom', require('./controllers/intercom.js'))\n.service('LoadingProgress', require('./services/loadingProgress.service.js'))\n.service('DataExport', require('./services/data-export.service.js'))\n.service('HxlExport', require('./services/hxl-export.service.js'))\n.service('DataImport', require('./services/data-import.service.js'))\n.service('VerifierService', require('./verifier/verifier.service.js'))\n// Global directives\n.directive('publishSelector', require('./directives/publish-selector.js'))\n\n.directive('listingToolbar', require('./directives/list-toolbar.js'))\n.directive('iconPicker', require('./directives/iconpicker.js'))\n\n.directive('colorPicker', require('./directives/color-picker.js'))\n.directive('firstTimeConfig', require('./directives/first-time-config.js'))\n.directive('ushMainsheetContainer', require('./directives/mainsheet-container.directive.js'))\n.directive('ushModalContainer', require('./directives/modal-container.directive.js'))\n.directive('modalBody', require('./directives/modal-body.directive.js'))\n.directive('layoutClass', require('./directives/layout-class.directive.js'))\n.directive('embedOnly', require('./directives/embed-only.directive.js'))\n.directive('ushLogo', require('./directives/ush-logo.directive.js'))\n.directive('filterSearchbar', require('./directives/filter-system/filter-searchbar.js'))\n.directive('filterRole', require('./directives/filter-system/filter-role.js'))\n.directive('overflowToggle', require('./directives/filter-system/overflow-toggle.js'))\n.directive('focus', require('./directives/focus.js'))\n.directive('modeBar', require('./directives/mode-bar/mode-bar.directive.js'))\n.directive('fileUpload', require('./directives/file-upload.directive.js'))\n.directive('roleSelector', require('./directives/role-selector.directive.js'))\n.directive('addCategory', require('./directives/add-category.directive.js'))\n.directive('categorySelector', require('./directives/category-selector.directive.js'))\n.directive('languageSwitch', require('./directives/language-switch.directive.js'))\n.directive('loadingDots', require('./directives/loading-dots.directive.js'))\n// Event actions\n.constant('EVENT', {\n    ACTIONS : {\n        EDIT : 'edit',\n        DELETE : 'delete'\n    }\n})\n.factory('loading', require('./factories/loading.interceptor-factory.js'))\n.config(require('./configs/loading.interceptor-config.js'))\n.config(require('./configs/locale-config.js'))\n.run(require('./configs/ui-bootstrap-template-decorators.js'))\n.config(require('./configs/cache-config.js'))\n\n.config(require('./common-routes.js'))\n\n.run(require('./global/event-handlers.js'))\n// Use language settings from config\n.run(require('./global/language-settings.js'))\n\n.run(['$templateCache', function ($templateCache) {\n    $templateCache.put('common/directives/mode-bar/ushahidi-logo.html', require('./directives/mode-bar/ushahidi-logo.html'));\n}])\n.factory('Verifier', function () {\n    return require('./verifier/verifier.js');\n})\n;\n\n// Load submodules\nrequire('./directives/adaptive-input.js');\nrequire('./directives/dropdown.js');\nrequire('./directives/modal.js');\nrequire('./directives/custom-on-change.js');\nrequire('./user-profile/user-profile-module.js');\n","module.exports = [\n    '$rootScope',\n    '$http',\n    '$q',\n    'Util',\n    'CONST',\n    'Session',\n    'RoleEndpoint',\n    'UserEndpoint',\n    'PostLockEndpoint',\n    '_',\n    'ModalService',\nfunction (\n    $rootScope,\n    $http,\n    $q,\n    Util,\n    CONST,\n    Session,\n    RoleEndpoint,\n    UserEndpoint,\n    PostLockEndpoint,\n    _,\n    ModalService\n) {\n\n    // check whether we have initially an valid access_token and assume that, if yes, we are still loggedin\n    let loginStatus = false;\n    if (!!Session.getSessionDataEntry('accessToken') &&\n        Session.getSessionDataEntry('grantType') === 'password' &&\n        !!Session.getSessionDataEntry('userId')\n    ) {\n        // If the access token is expired\n        if (Session.getSessionDataEntry('accessTokenExpires') <= Math.floor(Date.now() / 1000)) {\n            // Clear any login state\n            setToLogoutState();\n        } else {\n            // Otherwise mark as logged in\n            loginStatus = true;\n        }\n    }\n\n    function setToLoginState(userData) {\n        Session.setSessionDataEntries({\n            userId: userData.id,\n            realname: userData.realname,\n            email: userData.email,\n            role: userData.role,\n            permissions: userData.permissions,\n            gravatar: userData.gravatar,\n            language: userData.language\n        });\n        loginStatus = true;\n    }\n\n    function continueLogout(silent) {\n        setToLogoutState();\n        if (!silent) {\n            $rootScope.$broadcast('event:authentication:logout:succeeded');\n        }\n    }\n\n    function setToLogoutState() {\n        Session.clearSessionData();\n        UserEndpoint.invalidateCache();\n        loginStatus = false;\n    }\n\n    return {\n\n        login: function (username, password) {\n            var payload = {\n                username: username,\n                password: password,\n                grant_type: 'password',\n                client_id: CONST.OAUTH_CLIENT_ID,\n                client_secret: CONST.OAUTH_CLIENT_SECRET,\n                scope: CONST.CLAIMED_USER_SCOPES.join(' ')\n            },\n\n            deferred = $q.defer(),\n\n            handleRequestError = function () {\n                deferred.reject();\n                setToLogoutState();\n                $rootScope.$broadcast('event:authentication:login:failed');\n            },\n\n            handleRequestSuccess = function (authResponse) {\n                var accessToken = authResponse.data.access_token;\n                Session.setSessionDataEntry('accessToken', accessToken);\n                if (authResponse.data.expires_in) {\n                    Session.setSessionDataEntry('accessTokenExpires', Math.floor(Date.now() / 1000) + authResponse.data.expires_in);\n                } else if (authResponse.data.expires) {\n                    Session.setSessionDataEntry('accessTokenExpires', authResponse.data.expires);\n                }\n                Session.setSessionDataEntry('grantType', 'password');\n\n                $http.get(Util.apiUrl('/users/me')).then(\n                    function (userDataResponse) {\n                        RoleEndpoint.query({name: userDataResponse.data.role}).$promise\n                        .then(function (results) {\n                            userDataResponse.data.permissions = !_.isEmpty(results) ? results[0].permissions : [];\n                            return userDataResponse;\n                        })\n                        .catch(function (errors) {\n                            userDataResponse.data.permissions = [];\n                            return userDataResponse;\n                        })\n                        .finally(function () {\n                            setToLoginState(userDataResponse.data);\n                            $rootScope.$broadcast('event:authentication:login:succeeded');\n                            deferred.resolve();\n                        });\n                    }, handleRequestError);\n            };\n\n            $http.post(Util.url('/oauth/token'), payload).then(handleRequestSuccess, handleRequestError);\n\n            return deferred.promise;\n        },\n\n        logout: function (silent) {\n            //TODO: ASK THE BACKEND TO DESTROY SESSION\n\n            // Release all locks owned by the user\n            // TODO: At present releasing locks should not prevent users from logging out\n            // in future this should be expanded to include an error state\n            // Though ultinately unlocking should be handled solely API side\n            if ($rootScope.hasPermission('Manage Posts')) {\n                PostLockEndpoint.unlock().$promise.finally(function () {\n                    continueLogout(silent);\n                });\n            } else {\n                continueLogout(silent);\n            }\n        },\n\n        getLoginStatus: function () {\n            return loginStatus;\n        },\n\n        openLogin: function () {\n\n            ModalService.openTemplate('<login></login>', 'nav.login', false, false, false, false);\n        }\n    };\n\n}];\n","module.exports = [\n    '$rootScope',\n    '$http',\n    '$q',\n    'Util',\n    '$location',\n    'ModalService',\nfunction (\n    $rootScope,\n    $http,\n    $q,\n    Util,\n    $location,\n    ModalService\n) {\n\n    return {\n\n        register: function (realname, email, password) {\n            var payload = {\n                realname: realname,\n                email: email,\n                password: password\n            },\n\n            deferred = $q.defer(),\n\n            handleRequestError = function (response) {\n                deferred.reject(response);\n                $rootScope.$broadcast('event:registration:register:failed');\n            },\n\n            handleRequestSuccess = function (response) {\n                $rootScope.$broadcast('event:registration:register:succeeded');\n                deferred.resolve(response);\n            };\n\n            $http.post(Util.apiUrl('/register'), payload).then(handleRequestSuccess, handleRequestError);\n\n            return deferred.promise;\n        },\n\n        openRegister: function () {\n            ModalService.openTemplate('<register></register>', 'nav.register', false, false, true, false);\n        }\n    };\n\n}];\n","module.exports = [\n    'localStorageService',\nfunction (\n    localStorageService\n) {\n\n    this.clearedSessionData = {\n        userId: undefined,\n        realname: undefined,\n        email: undefined,\n        accessToken: undefined,\n        accessTokenExpires: undefined,\n        grantType: undefined,\n        role: undefined,\n        permissions: undefined,\n        gravatar: undefined,\n        language: undefined\n    };\n\n    this.sessionData = angular.copy(this.clearedSessionData);\n\n    var that = this;\n\n    var loadSessionData = function () {\n        var newSessionData = {};\n        Object.keys(that.sessionData).forEach(function (key) {\n            newSessionData[key] = localStorageService.get(key);\n        });\n        that.sessionData = newSessionData;\n    };\n\n    var setSessionDataEntries = function (entries) {\n        Object.keys(entries).forEach(function (key) {\n            localStorageService.set(key, entries[key]);\n        });\n        var newSessionData = angular.extend({}, that.sessionData, entries);\n        that.sessionData = newSessionData;\n    };\n\n    var setSessionDataEntry = function (key, value) {\n        that.sessionData[key] = value;\n        localStorageService.set(key, value);\n    };\n\n    var getSessionDataEntry = function (key) {\n        return that.sessionData[key];\n    };\n\n    var getSessionData = function () {\n        return that.sessionData;\n    };\n\n    var clearSessionData = function () {\n        Object.keys(that.sessionData).forEach(function (key) {\n            localStorageService.remove(key);\n        });\n        that.sessionData = angular.copy(that.clearedSessionData);\n    };\n\n    // load already saved session data from earlierer session\n    // from local storage when session service is intialized loadSessionData();\n    loadSessionData();\n\n    return {\n        setSessionDataEntry: setSessionDataEntry,\n        setSessionDataEntries: setSessionDataEntries,\n        getSessionDataEntry: getSessionDataEntry,\n        getSessionData: getSessionData,\n        clearSessionData: clearSessionData\n    };\n}];\n","module.exports = [\n    '$http',\n    'Util',\n    'ModalService',\nfunction (\n    $http,\n    Util,\n    ModalService\n) {\n\n    return {\n\n        reset: function (email) {\n            var payload = {\n                email: email\n            };\n\n            return $http.post(Util.apiUrl('/passwordreset'), payload);\n        },\n\n        resetConfirm: function (token, password) {\n            var payload = {\n                token: token,\n                password: password\n            };\n\n            return $http.post(Util.apiUrl('/passwordreset/confirm'), payload);\n        },\n\n        openReset: function () {\n            ModalService.openTemplate('<password-reset></password-reset>', 'nav.forgotyourpassword', false, false, true, false);\n        },\n\n        openResetConfirm: function (scope) {\n            ModalService.openTemplate('<password-reset-confirm></password-reset-confirm>', 'nav.resetpassword', false, scope, true, false);\n        }\n    };\n\n}];\n","module.exports = [\n    '$http',\n    'Util',\n    'ModalService',\n    'Session',\n    'TermsOfServiceEndpoint',\n    'CONST',\n    '$rootScope',\n    '$q',\n    'Notify',\n    'moment',\n\nfunction (\n    $http,\n    Util,\n    ModalService,\n    Session,\n    TermsOfServiceEndpoint,\n    CONST,\n    $rootScope,\n    $q,\n    Notify,\n    moment\n) {\n\n    return {\n\n        getTosEntry: function () {\n            // If no TOS date definied, just skip\n            if (!CONST.TOS_RELEASE_DATE) {\n                return $q.resolve(true);\n            }\n\n            return TermsOfServiceEndpoint.get()\n            .$promise.then(function (tosEntry) {\n                return tosCheck(tosEntry);\n            });\n        }\n    };\n\n    function tosCheck(tosEntry) {\n        var deferred = $q.defer();\n\n        // If the tos agreement date is after the to the release date, then resolve\n        // Otherwise (the tos agreement is before the release date or the user has never signed) We need to show the ToS modal\n        if (tosEntry.results.length && moment(tosEntry.results[0].agreement_date).isAfter(CONST.TOS_RELEASE_DATE)) {\n            deferred.resolve();\n        } else {\n            Notify.confirmTos().then(function () {\n                deferred.resolve();\n            }, function () {\n                deferred.reject();\n            });\n        }\n\n        return deferred.promise;\n    }\n}];\n\n","module.exports = [\n    'ConfigEndpoint',\n    'Notify',\nfunction (\n    ConfigEndpoint,\n    Notify\n) {\n    return {\n        demoCheck: function () {\n            ConfigEndpoint.get({id: 'site'}).$promise.then(function (site) {\n                if (site.tier === 'demo_1') {\n                    Notify.demo();\n                }\n            });\n        }\n    };\n}];\n\n","module.exports = Login;\n\nLogin.$inject = [];\nfunction Login() {\n    return {\n        restrict: 'E',\n        scope: {},\n        controller: LoginController,\n        template: require('./login.html')\n    };\n}\nLoginController.$inject = [\n    '$scope',\n    'Authentication',\n    'PasswordReset',\n    '$location',\n    'ConfigEndpoint',\n    'ModalService'\n];\nfunction LoginController(\n    $scope,\n    Authentication,\n    PasswordReset,\n    $location,\n    ConfigEndpoint,\n    ModalService\n) {\n    $scope.email = '';\n    $scope.password = '';\n    $scope.failed = false;\n    $scope.processing = false;\n    $scope.loginSubmit = loginSubmit;\n    $scope.cancel = cancel;\n    $scope.forgotPassword = forgotPassword;\n    $scope.showCancel = false;\n\n    activate();\n\n    function activate() {\n        // If we're already logged in\n        if (Authentication.getLoginStatus()) {\n            $scope.$parent.closeModal();\n        }\n\n        ConfigEndpoint.get({id: 'site'}, function (site) {\n            $scope.showCancel = !site.private;\n        });\n    }\n\n    function clearLoginForm() {\n        $scope.failed = true;\n        $scope.processing = false;\n        $scope.email = '';\n        $scope.password = '';\n    }\n\n    function cancel() {\n        clearLoginForm();\n        $scope.$parent.closeModal();\n    }\n\n    function finishedLogin() {\n        $scope.failed = false;\n        $scope.processing = false;\n        $scope.$parent.closeModal();\n    }\n\n    function loginSubmit(email, password) {\n        $scope.processing = true;\n\n        Authentication\n            .login(email, password)\n            .then(finishedLogin, clearLoginForm);\n    }\n\n    function forgotPassword() {\n        PasswordReset.openReset();\n    }\n\n}\n","module.exports = \"<form ng-submit=\\\"loginSubmit(email, password)\\\" name=\\\"loginForm\\\">\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"alert error login-failed\\\" role=\\\"alert\\\" ng-show=\\\"failed\\\">\\n            <p translate>notify.login.failed</p>\\n        </div>\\n\\n        <div class=\\\"form-field\\\">\\n            <label for=\\\"email\\\" translate>user.email</label>\\n            <input type=\\\"text\\\" id=\\\"email\\\" ng-model=\\\"email\\\" ng-disabled=\\\"processing\\\" placeholder=\\\"name@domain.com\\\" required>\\n        </div>\\n\\n        <div class=\\\"form-field\\\">\\n            <label for=\\\"password\\\" translate>user.password</label>\\n            <input id=\\\"password\\\" type=\\\"password\\\" ng-model=\\\"password\\\" ng-disabled=\\\"processing\\\" required>\\n            <p><a ng-click=\\\"forgotPassword()\\\" translate>nav.forgotyourpassword</a></p>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-actions\\\">\\n        <div class=\\\"form-field\\\">\\n            <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancel()\\\" ng-show=\\\"showCancel\\\" translate=\\\"app.cancel\\\">Cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"button-alpha\\\" ng-disabled=\\\"loginForm.$invalid || processing\\\" translate=\\\"nav.login\\\">Login</button>\\n        </div>\\n    </div>\\n</form>\\n\";","module.exports = RegisterDirective;\n\nRegisterDirective.$inject = [];\nfunction RegisterDirective() {\n    return {\n        restrict: 'E',\n        scope: {},\n        controller: RegisterController,\n        template: require('./register.html')\n    };\n}\nRegisterController.$inject = [\n    '$scope',\n    '$translate',\n    'Authentication',\n    'Registration',\n    'Notify'\n];\nfunction RegisterController(\n    $scope,\n    $translate,\n    Authentication,\n    Registration,\n    Notify\n) {\n    $scope.failed = false;\n    $scope.processing = false;\n    $scope.realname = '';\n    $scope.email = '';\n    $scope.password = '';\n\n    $scope.registerSubmit = registerSubmit;\n    $scope.cancel = cancel;\n\n    activate();\n\n    function activate() {\n        // If we're already logged in\n        if (Authentication.getLoginStatus()) {\n            $scope.$parent.closeModal();\n        }\n    }\n\n    function registerSubmit() {\n        $scope.processing = true;\n\n        Registration\n            .register($scope.realname, $scope.email, $scope.password)\n            .then(registerSuccess, registerFailed);\n    }\n\n    function registerSuccess() {\n        $scope.failed = false;\n        $scope.processing = false;\n\n        Notify.success('notify.register.success');\n        Authentication.openLogin();\n    }\n\n    function registerFailed(errorResponse) {\n        $scope.failed = true;\n        $scope.processing = false;\n\n        angular.forEach(errorResponse.data.errors, function (error) {\n            if (!error.source || !error.source.pointer) {\n                return;\n            }\n\n            // @todo parse jsonpath properly\n            var index = error.source.pointer.replace('/', '');\n            if ($scope.form[index]) {\n                $scope.form[index].$setValidity(error.title, false);\n                // Clear validation on next change\n                $scope.form[index].$validators[error.title] = function () {\n                    return true;\n                };\n            }\n        });\n\n        Notify.apiErrors(errorResponse);\n    }\n\n    function cancel() {\n        $scope.$parent.closeModal();\n    }\n}\n","module.exports = \"<form name=\\\"form\\\" ng-submit=\\\"registerSubmit()\\\">\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"alert error register-failed\\\" role=\\\"alert\\\" ng-show=\\\"failed\\\">\\n            <p translate>notify.register.failed</p>\\n        </div>\\n        <div class=\\\"form-field\\\" ng-class=\\\"{ 'error': form.full_name.$invalid && form.full_name.$dirty, 'success': form.full_name.$valid }\\\">\\n            <label class=\\\"input-label\\\"\\n                for=\\\"full_name\\\" translate>user.full_name</label>\\n            <input id=\\\"full_name\\\" name=\\\"full_name\\\" type=\\\"text\\\"\\n                ng-disabled=\\\"state.processing\\\"\\n                placeholder=\\\"{{ 'user_create.full_name'|translate }}\\\"\\n                ng-maxlength=\\\"150\\\"\\n                ng-model=\\\"realname\\\"\\n                required>\\n            <div ng-repeat=\\\"(error, value) in form.full_name.$error\\\"\\n                ng-show=\\\"form.full_name.$dirty\\\"\\n                class=\\\"alert error\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                </svg>\\n                <p translate=\\\"{{'user.valid.full_name.' + error}}\\\" translate-default=\\\"{{error}}\\\"></p>\\n            </div>\\n        </div>\\n        <div class=\\\"form-field\\\" ng-class=\\\"{ 'success': !form.email.$invalid && form.email.$dirty, 'error' : form.email.$invalid && form.email.$dirty}\\\">\\n            <label for=\\\"email\\\" class=\\\"input-label\\\" translate>user.email</label>\\n            <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\"\\n                ng-model=\\\"email\\\"\\n                ng-disabled=\\\"processing\\\"\\n                ng-maxlength=\\\"150\\\"\\n                required>\\n            <div ng-repeat=\\\"(error, value) in form.email.$error\\\"\\n                ng-show=\\\"form.email.$dirty\\\"\\n                class=\\\"alert error\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                </svg>\\n                <p translate=\\\"{{'user.valid.email.' + error}}\\\" translate-default=\\\"{{error}}\\\"></p>\\n            </div>\\n        </div>\\n        <div class=\\\"form-field\\\" ng-class=\\\"{ 'success': !form.password.$invalid && form.password.$dirty, 'error' : form.password.$invalid && form.password.$dirty}\\\">\\n            <label class=\\\"input-label\\\" for=\\\"password\\\" translate>user.password</label>\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\"\\n                ng-minlength=\\\"7\\\"\\n                ng-maxlength=\\\"72\\\"\\n                ng-model=\\\"password\\\"\\n                ng-disabled=\\\"processing\\\"\\n                required>\\n            <div ng-repeat=\\\"(error, value) in form.password.$error\\\"\\n                ng-show=\\\"form.password.$dirty\\\"\\n                class=\\\"alert error\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                </svg>\\n                <p translate=\\\"{{'user.valid.password.' + error}}\\\" translate-default=\\\"{{error}}\\\"></p>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n    <div class=\\\"modal-actions\\\">\\n        <div class=\\\"form-field\\\">\\n            <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancel()\\\" translate=\\\"app.cancel\\\">Cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"button-alpha\\\" ng-disabled=\\\"form.$invalid || processing\\\" translate=\\\"nav.register\\\">Sign up</button>\\n        </div>\\n    </div>\\n</form>\\n\";","module.exports = PasswordResetDirective;\n\nPasswordResetDirective.$inject = [];\nfunction PasswordResetDirective() {\n    return {\n        restrict: 'E',\n        scope: true,\n        controller: PasswordResetController,\n        template: require('./password-reset.html')\n    };\n}\nPasswordResetController.$inject = [\n    '$scope',\n    'PasswordReset',\n    'Authentication'\n];\nfunction PasswordResetController(\n    $scope,\n    PasswordReset,\n    Authentication\n) {\n    $scope.processing = false;\n    $scope.email = '';\n\n    $scope.submit = submit;\n    $scope.cancel = cancel;\n\n    activate();\n\n    function activate() {\n        // If we're already logged in\n        if (Authentication.getLoginStatus()) {\n            $scope.$parent.closeModal();\n        }\n    }\n\n    $scope.processing = false;\n\n    function resetDone() {\n        $scope.processing = false;\n        PasswordReset.openResetConfirm();\n    }\n\n    function submit() {\n        $scope.processing = true;\n\n        PasswordReset\n            .reset($scope.email)\n            .finally(resetDone);\n    }\n\n    function cancel() {\n        $scope.$parent.closeModal();\n    }\n}\n","module.exports = \"<div class=\\\"modal-body\\\">\\n    <form class=\\\"panel-body\\\" name=\\\"form\\\" ng-submit=\\\"submit()\\\">\\n        <p translate>user.passwordreset_instructions</p>\\n        <div class=\\\"form-field\\\">\\n            <label for=\\\"email\\\"\\n                class=\\\"input-label\\\"\\n                translate>\\n                user.email\\n            </label>\\n            <input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\"\\n                ng-model=\\\"email\\\"\\n                ng-disabled=\\\"processing\\\"\\n                required>\\n        </div>\\n        <div class=\\\"form-field\\\">\\n            <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancel()\\\" translate=\\\"app.cancel\\\">Cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"button-primary\\\"\\n                ng-disabled=\\\"form.$invalid || processing\\\">\\n                    <div class=\\\"loading\\\" ng-show=\\\"processing\\\"><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div></div>\\n                    <span translate>nav.resetmypassword</span>\\n            </button>\\n        </div>\\n    </form>\\n</div>\\n\";","module.exports = PasswordResetConfirmDirective;\n\nPasswordResetConfirmDirective.$inject = [];\nfunction PasswordResetConfirmDirective() {\n    return {\n        restrict: 'E',\n        scope: true,\n        controller: PasswordResetConfirmController,\n        template: require('./password-reset-confirm.html')\n    };\n}\nPasswordResetConfirmController.$inject = [\n    '$scope',\n    '$translate',\n    'PasswordReset',\n    'Authentication',\n    'Notify'\n];\nfunction PasswordResetConfirmController(\n    $scope,\n    $translate,\n    PasswordReset,\n    Authentication,\n    Notify\n) {\n    $scope.failed = false;\n    $scope.processing = false;\n    $scope.token = $scope.token || '';\n    $scope.hasToken = false;\n    $scope.password = '';\n\n    $scope.submit = submit;\n    $scope.cancel = cancel;\n\n    activate();\n\n    function activate() {\n        // If we're already logged in\n        if (Authentication.getLoginStatus()) {\n            $scope.$parent.closeModal();\n        }\n        $scope.hasToken = !!$scope.token;\n    }\n\n    function resetSuccess() {\n        $scope.processing = false;\n\n        Notify.notify('notify.passwordreset.success');\n        Authentication.openLogin();\n    }\n\n    function resetFailed(errorResponse) {\n        $scope.failed = true;\n        $scope.processing = false;\n\n        Notify.apiErrors(errorResponse);\n    }\n\n    function submit() {\n        $scope.processing = true;\n\n        PasswordReset\n            .resetConfirm($scope.token, $scope.password)\n            .then(resetSuccess, resetFailed);\n    }\n\n    function cancel() {\n        $scope.$parent.closeModal();\n    }\n}\n","module.exports = \"<div class=\\\"modal-body\\\">\\n    <form class=\\\"panel-body\\\" name=\\\"form\\\" ng-submit=\\\"submit()\\\">\\n        <div class=\\\"alert error register-failed\\\" ng-show=\\\"failed\\\">\\n            <p translate>notify.passwordreset.failed</p>\\n        </div>\\n        <div class=\\\"form-field\\\" ng-show=\\\"!hasToken\\\">\\n            <p translate>user.passwordreset_confirm_instructions</p>\\n            <label for=\\\"token\\\"\\n                class=\\\"input-label\\\"\\n                translate>\\n                user.token\\n            </label>\\n            <input type=\\\"text\\\" id=\\\"token\\\" name=\\\"token\\\"\\n                ng-model=\\\"token\\\"\\n                ng-disabled=\\\"processing\\\"\\n                required>\\n        </div>\\n        <div class=\\\"form-field\\\" ng-class=\\\"{ 'success': !form.password.$invalid && form.password.$dirty, 'error' : form.password.$invalid && form.password.$dirty}\\\" >\\n            <label class=\\\"input-label\\\" for=\\\"password\\\" translate>user.new_password</label>\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\"\\n                ng-minlength=\\\"7\\\"\\n                ng-maxlength=\\\"72\\\"\\n                ng-model=\\\"password\\\"\\n                ng-disabled=\\\"processing\\\"\\n                required>\\n            <div ng-repeat=\\\"(error, value) in form.password.$error\\\"\\n                ng-show=\\\"form.password.$dirty\\\"\\n                class=\\\"alert error\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                </svg>\\n                <p translate=\\\"{{'user.valid.password.' + error}}\\\" translate-default=\\\"{{error}}\\\"></p>\\n            </div>\\n        </div>\\n        <div class=\\\"form-field\\\">\\n            <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancel()\\\" translate=\\\"app.cancel\\\">Cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"button-primary\\\"\\n                ng-disabled=\\\"form.$invalid || processing\\\">\\n                    <div class=\\\"loading\\\" ng-show=\\\"processing\\\"><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div></div>\\n                    <span translate>nav.resetpassword</span>\\n            </button>\\n        </div>\\n    </form>\\n</div>\\n\";","module.exports = TermsOfServiceDirective;\n\nTermsOfServiceDirective.$inject = [];\nfunction TermsOfServiceDirective() {\n    return {\n        restrict: 'E',\n        scope: {},\n        controller: TosController,\n        template: require('./tos.html')\n    };\n}\n\nTosController.$inject = [\n    '$scope',\n    'Authentication',\n    'TermsOfService',\n    'ModalService',\n    'TermsOfServiceEndpoint',\n    'Session',\n    'CONST'\n];\nfunction TosController(\n    $scope,\n    Authentication,\n    TermsOfService,\n    ModalService,\n    TermsOfServiceEndpoint,\n    Session,\n    CONST\n) {\n    $scope.terms = {\n        accept: false\n    };\n\n    $scope.tosSubmit = function () {\n        if (!$scope.terms.accept) {\n            return;\n        }\n\n        TermsOfServiceEndpoint.save({tos_version_date: CONST.TOS_RELEASE_DATE})\n        .$promise.then(function (tosSessionData) {\n            // Don't really need this if, but it's just a backup so that you can't access the site if tos is not set properly\n            if (tosSessionData.agreement_date) {\n                $scope.$parent.confirm();\n            }\n        });\n    };\n}\n","module.exports = \"<div class=\\\"modal-body\\\">\\n    <form class=\\\"panel-body\\\" name=\\\"form\\\" ng-submit=\\\"tosSubmit()\\\">\\n    <h2 translate=\\\"terms_of_service.title\\\">Ushahidi Terms of Service</h2>\\n    <p translate=\\\"terms_of_service.terms_of_service\\\">We have updated our <a href=\\\"https://www.ushahidi.com/terms-of-service\\\" target=\\\"_blank\\\">Terms and Conditions</a> and <a href=\\\"https://www.ushahidi.com/privacy-policy\\\" target=\\\"_blank\\\">Privacy Policy</a>. Please review these documents carefully and accept the terms in order to continue to use Ushahidi's services.</p>\\n        <div class=\\\"form-field radio\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" ng-model=\\\"terms.accept\\\" ng-value=\\\"true\\\" required>\\n                <div translate=\\\"terms_of_service.agree\\\">I agree to Ushahidi's Terms of Service.</div>\\n            </label>\\n        </div>\\n        <div class=\\\"modal-actions\\\">\\n            <div class=\\\"form-field\\\">\\n                <button type=\\\"submit\\\" class=\\\"button-alpha\\\" ng-disabled=\\\"form.$invalid\\\" translate=\\\"terms_of_service.accept_and_continue\\\">Accept and Continue</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\";","module.exports = DemoDeploymentDirective;\n\nDemoDeploymentDirective.$inject = [];\nfunction DemoDeploymentDirective() {\n    return {\n        restrict: 'E',\n        scope: {},\n        controller: DemoDeploymentController,\n        template: require('./demo-deployment.html')\n    };\n}\n\nDemoDeploymentController.$inject = [\n    '$scope',\n    '$rootScope',\n    '$location',\n    'ConfigEndpoint',\n    'PostEndpoint',\n    'moment'\n];\nfunction DemoDeploymentController(\n    $scope,\n    $rootScope,\n    $location,\n    ConfigEndpoint,\n    PostEndpoint,\n    moment\n) {\n\n    var USHAHIDI = 'Ushahidi';\n\n    $scope.limitReached = false;\n    $scope.expired = false;\n    $scope.days_remaining = 30;\n    $scope.loggedin = $rootScope.loggedin;\n    $scope.upgrade = upgrade;\n    $scope.close = function close() {\n        $rootScope.toggleModalVisible(false, true);\n        $rootScope.$emit('demoslider:close');\n    };\n\n    activate();\n\n    function activate() {\n        ConfigEndpoint.get({id: 'site'}).$promise.then(function (site) {\n            $scope.site_name = site.name ? site.name : USHAHIDI;\n            var expiration_date = moment(site.expiration_date);\n            var extension_date = site.extension_date ? moment(site.extension_date) : null;\n            var now = moment();\n\n            $scope.expired = now > expiration_date;\n\n            if ($scope.expired) {\n                $scope.expired = now > extension_date;\n            }\n\n            $rootScope.$broadcast('demo:limitAvailability', $scope.expired, $scope.limitReached);\n\n            if (!$scope.expired) {\n                $scope.days_remaining = extension_date ? extension_date.diff(now, 'days') : expiration_date.diff(now, 'days');\n                PostEndpoint.stats().$promise.then(function (results) {\n                    if (results.totals[0]) {\n                        $scope.limitReached = results.totals[0].values[0].total >= 25;\n                        $rootScope.$broadcast('demo:limitAvailability', $scope.expired, $scope.limitReached);\n                    }\n                });\n            }\n        });\n    }\n\n    function upgrade() {\n        $location.path('settings/plans');\n    }\n}\n","module.exports = \"<div ng-if=\\\"loggedin\\\">\\n        <p ng-if=\\\"!expired && !limitReached\\\" translate-values=\\\"{days: days_remaining}\\\" translate=\\\"demo_warnings.user.not_expired\\\">\\n            You have X days left in your free trial. Upgrade now for unlimited posts and full access to Ushahidi.\\n        </p>\\n        <p ng-if=\\\"limitReached\\\" translate=\\\"demo_warnings.user.limit_reached\\\">\\n            Nice work! You have more than 25 posts. Upgrade now to see the rest of your posts or reach out to our team about a full-service enterprise partnership for your project.\\n        </p>\\n        <p ng-if=\\\"expired\\\" translate=\\\"demo_warnings.user.expired\\\">\\n            Your 30 day trial is over. Upgrade now to make the most of Ushahidi.\\n        </p>\\n        <div class=\\\"button-group\\\">\\n            <button class=\\\"button\\\" ui-sref=\\\"settings.plan\\\" translate=\\\"message.button.upgrade\\\">\\n                Upgrade now\\n            </button>\\n            <button ng-click=\\\"close()\\\" class=\\\"right\\\" translate=\\\"demo_warnings.close\\\">Close</button>\\n        </div>\\n</div>\\n\\n<div ng-if=\\\"!loggedin\\\" >\\n    <p ng-if=\\\"!expired && days_remaining > 0\\\" translate-values=\\\"{days: days_remaining, site_name: site_name}\\\" translate=\\\"demo_warnings.visitor.not_expired\\\">\\n        Deployment X is using a free trial of Ushahidi. You will only see the first 25 posts for the next X days.\\n    </p>\\n    <p ng-if=\\\"expired || days_remaining <= 0\\\" translate-values=\\\"{site_name: site_name}\\\" translate=\\\"demo_warnings.visitor.expired\\\">\\n        Deployment X is using a free trial of Ushahidi. You will only see the first 25 posts.\\n    </p>\\n    <button ng-click=\\\"close()\\\" translate=\\\"demo_warnings.close\\\">Close</button>\\n</div>\\n    \\n\";","module.exports = AuthInterceptorConfig;\n\nAuthInterceptorConfig.$inject = ['$provide', '$httpProvider'];\nfunction AuthInterceptorConfig($provide, $httpProvider) {\n    // register the interceptor as a service\n    $provide.factory('authInterceptor', AuthInterceptor);\n    $httpProvider.interceptors.push('authInterceptor');\n}\n\nAuthInterceptor.$inject = ['$rootScope', '$injector', '$q', 'CONST', 'Session', '_'];\nfunction AuthInterceptor($rootScope, $injector, $q, CONST, Session, _) {\n    var ongoingRequest = null;\n\n    return {\n        request: request,\n        responseError: responseError\n    };\n\n    function getClientCredsToken(config) {\n        var\n        deferred = $q.defer(),\n        payload = {\n            grant_type: 'client_credentials',\n            client_id: CONST.OAUTH_CLIENT_ID,\n            client_secret: CONST.OAUTH_CLIENT_SECRET,\n            scope: CONST.CLAIMED_ANONYMOUS_SCOPES.join(' ')\n        };\n\n        function handleRequestSuccess(authResponse) {\n            var accessToken = authResponse.data.access_token;\n            // Save access token\n            Session.setSessionDataEntry('accessToken', accessToken);\n            // Save token expires time\n            if (authResponse.data.expires_in) {\n                Session.setSessionDataEntry('accessTokenExpires', Math.floor(Date.now() / 1000) + authResponse.data.expires_in);\n            } else if (authResponse.data.expires) {\n                Session.setSessionDataEntry('accessTokenExpires', authResponse.data.expires);\n            }\n\n            Session.setSessionDataEntry('grantType', 'client_credentials');\n            // Add Authorization header\n            config.headers.Authorization = 'Bearer ' + accessToken;\n            deferred.resolve(config);\n        }\n\n        $injector.invoke(['$http', 'Util', function ($http, Util) {\n            // $http is already constructed at the time and you may\n            // use it, just as any other service registered in your\n            // app module and modules on which app depends on.\n            // http://stackoverflow.com/a/19954545/567126\n            $http.post(Util.url('/oauth/token'), payload).then(handleRequestSuccess, deferred.reject);\n        }]);\n\n        return deferred.promise;\n    }\n\n    function concurrentGetClientCredsToken(config) {\n        // concurrency-safe getClientCredsToken\n        // sends token request only if there's no ongoing request in this interceptor\n        // (otherwise N simultaneous queries will produce N token requests)\n        var deferred = $q.defer();\n\n        if (!ongoingRequest) {\n            ongoingRequest = getClientCredsToken(config);\n            ongoingRequest.then(deferred.resolve, deferred.reject);\n            ongoingRequest.finally(function () {\n                ongoingRequest = null;  // clean up\n            });\n        } else {\n            // In case another request is already ongoing, extract its\n            // authentication header once its resolved, and apply it to\n            // the request currently being intercepted\n            ongoingRequest.then(\n                function (otherConfig) {\n                    config.headers.Authorization = otherConfig.headers.Authorization;\n                    deferred.resolve(config);\n                }, deferred.reject\n            );\n        }\n\n        return deferred.promise;\n    }\n\n    function request(config) {\n        var deferred = $q.defer();\n\n        config.ignorable = shouldIgnoreAuthError(config);\n        // Revisit and possibly move out to own inceptor\n        config.headers['Accept-Language'] = Session.getSessionDataEntry('language') ? Session.getSessionDataEntry('language') : 'en-US';\n\n        if (config.url.indexOf(CONST.API_URL) === -1) {\n            deferred.resolve(config);\n            return deferred.promise;\n        }\n\n        var accessToken = Session.getSessionDataEntry('accessToken');\n        var accessTokenExpires = Session.getSessionDataEntry('accessTokenExpires');\n        var now = Math.floor(Date.now() / 1000);\n\n        if (accessToken !== undefined && accessToken !== null && accessTokenExpires > now) {\n            // if we already have a valid accessToken,\n            // we will set it straight ahead\n            // and resolve the promise for the config hash\n            config.headers.Authorization = 'Bearer ' + accessToken;\n\n        }\n        deferred.resolve(config);\n        return deferred.promise;\n    }\n\n    function responseError(rejection) {\n        var deferred = $q.defer();\n        // When a request is rejected there are\n        // a few possible reasons. If its a 401\n        // either our token expired, or we didn't have one.\n        if (rejection.status === 401 || rejection.status === 400) {\n            $injector.invoke(['Authentication', '$http', function (Authentication, $http) {\n                // Check if were were logged in\n                if (Authentication.getLoginStatus()) {\n                    // If we were, trigger an unauthorized\n                    // event and show the login page\n                    $rootScope.$broadcast('event:unauthorized');\n                    deferred.reject(rejection);\n                } else {\n                    // If we weren't logged in to start with\n                    // we probably just need to get a new token\n                    // (for some resources, of course,\n                    // this authorization level is not enough\n                    // and a 403 or 401 will be thrown\n                    // which results in showing the login page)\n\n                    // If this request was ignorable, ie ok to fail\n                    // just continue.\n                    if (rejection.config.ignorable) {\n                        deferred.reject(rejection);\n                        return deferred.promise;\n                    }\n\n                    concurrentGetClientCredsToken(rejection.config).then(\n                        function (config) {\n                            deferred.resolve($http(config));\n                        },\n                        deferred.reject\n                    );\n                }\n            }]);\n        // If its a 403 we've got a token, but it can't get us what we needed\n        } else if (rejection.status === 403) {\n            // In the short term, we will handle failures for\n            // associated entities - for example posts that contain unviewable tags -\n            // we will ignore the error. In future this will be rectified under issue:\n            // https://github.com/ushahidi/platform/issues/793\n            if (!rejection.config.ignorable) {\n                // Trigger a forbidden event and show an error page\n                $rootScope.$broadcast('event:forbidden');\n            }\n            deferred.reject(rejection);\n            // For anything else, just forward the rejection\n        } else {\n            deferred.reject(rejection);\n        }\n        return deferred.promise;\n    }\n\n    /**\n     * Returns true if url is ignorable, false if not\n     * @param config\n     */\n    function shouldIgnoreAuthError(config) {\n        var isIgnorable = false;\n        if (_.has(config, 'params') && config.params.ignore403) {\n            delete config.params.ignore403;\n            isIgnorable = true;\n        }\n        var i = 0;\n        var matchers = ['/oauth/token(/|$)', '/users(/|$)([0-9]+|$)', '/roles(/|$)'];\n        while (isIgnorable === false && i < matchers.length) {\n            isIgnorable = !!config.url.match(matchers[i]);\n            i++;\n        }\n        return isIgnorable;\n    }\n}\n","module.exports = AuthenticationEvents;\n\nAuthenticationEvents.$inject = ['$rootScope', '$location', 'Authentication', 'Session', '_', '$state', 'TermsOfService', 'Notify', 'PostFilters', 'DataExport', 'DataImport', 'DemoDeploymentService', 'VerifierService'];\nfunction AuthenticationEvents($rootScope, $location, Authentication, Session, _, $state, TermsOfService, Notify, PostFilters, DataExport, DataImport, DemoDeploymentService, VerifierService) {\n\n    let loginPath = null;\n    $rootScope.currentUser = null;\n    $rootScope.loggedin = false;\n\n    // todo: move to service\n    $rootScope.hasManagePermission = function () {\n        return $rootScope.isAdmin() ? true : ((($rootScope.currentUser || {}).permissions || {}).length > 0);\n    };\n\n    // todo: move to service\n    $rootScope.hasManageSettingsPermission = function () {\n        return $rootScope.isAdmin() ? true : (_.intersection(($rootScope.currentUser || {}).permissions, ['Manage Users', 'Manage Settings', 'Bulk Data Import and Export', 'Bulk Data Import']).length > 0);\n    };\n\n    // todo: move to service\n    $rootScope.hasPermission = function (permission) {\n        return $rootScope.isAdmin() ? true : _.contains(($rootScope.currentUser || {}).permissions, permission);\n    };\n\n    // todo: move to service\n    $rootScope.isAdmin = function () {\n        return (($rootScope.currentUser || {}).role === 'admin');\n    };\n\n    $rootScope.$on('event:authentication:login:succeeded', function () {\n        doLogin(loginPath);\n    });\n\n    $rootScope.$on('event:authentication:logout:succeeded', function () {\n        doLogout();\n    });\n\n    // Don't think this is needed. We should already be logged out before this event\n    // $rootScope.$on('event:authentication:login:failed', function () {\n    //     doLogout();\n    // });\n\n    $rootScope.$on('event:unauthorized', function () {\n        let currentUrl = $location.url();\n        if (currentUrl !== '/login') {\n            loginPath = currentUrl;\n        }\n        Authentication.logout(true);\n        doLogout();\n        Authentication.openLogin();\n    });\n\n    $rootScope.$on('event:forbidden', function () {\n        if (Authentication.getLoginStatus()) {\n            // We're logged in hit forbidden page\n            $location.url('/forbidden');\n        } else {\n            let currentUrl = $location.url();\n            // We're logged out, redirect to login\n            if (currentUrl !== '/login') {\n                loginPath = currentUrl;\n                // Show forbidden page until we're logged in\n                $location.url('/forbidden');\n            }\n            Authentication.openLogin();\n        }\n    });\n\n    activate();\n\n    function activate() {\n        if (Authentication.getLoginStatus()) {\n            doLogin(false, true);\n        }\n    }\n\n    function loadSessionData() {\n        $rootScope.currentUser = Session.getSessionData();\n    }\n\n    function loadExportJob() {\n        if ($rootScope.hasPermission('Bulk Data Import and Export') || $rootScope.hasPermission('Bulk Data Import')) {\n            DataExport.loadExportJob();\n        }\n    }\n\n    function loadImportJob() {\n        if ($rootScope.hasPermission('Bulk Data Import and Export') || $rootScope.hasPermission('Bulk Data Import')) {\n            DataImport.loadImportJob();\n        }\n    }\n\n    function doLogin(redirect, noReload) {\n        TermsOfService.getTosEntry()\n            .then(function () {\n                loadSessionData();\n                $rootScope.loggedin = true;\n                DemoDeploymentService.demoCheck();\n                VerifierService.debugModeCheck();\n\n\n                /**\n                 * adminUserSetup is called AFRTER the user has agreed to terms of service.\n                 * adminUserSetup is used to verify which user is logging in/logged in and opening a modal box\n                 * when there is an admin login with the 'admin' email instead of a proper email.\n                 * This is part of an effort to force admins to have proper emails and not use the default email/password combination that the\n                 * system had during the setup process.\n                 * references https://github.com/ushahidi/platform/issues/1714\n                 */\n                adminUserSetup();\n                loadExportJob();\n                loadImportJob();\n                PostFilters.resetDefaults();\n                if (redirect) {\n                    $location.url(redirect);\n                }\n                noReload || $state.reload(); // in favor of $route.reload();\n\n            });\n    }\n\n    function doLogout() {\n        $rootScope.currentUser = null;\n        $rootScope.loggedin = false;\n        DemoDeploymentService.demoCheck();\n        // we don't want to reload until after filters are correctly set with\n        // the backend default that the user would get when logged out\n        PostFilters.resetDefaults().then(function () {\n            $state.go($state.$current.name ? $state.$current : 'map', null, { reload: true });\n        });\n    }\n\n    function adminUserSetup() {\n        if ($rootScope.currentUser.email === 'admin' && $rootScope.isAdmin()) {\n            Notify.adminUserSetupModal();\n        }\n\n    }\n\n}\n","module.exports = Notify;\n\nvar scope;\nvar iconicSprite = require('ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg');\nNotify.$inject = ['_', '$q', '$rootScope', '$translate', 'SliderService', 'ModalService', 'DemoSliderService'];\nfunction Notify(_, $q, $rootScope, $translate, SliderService, ModalService, DemoSliderService) {\n    return {\n        notify: notify,\n        notifyAction,\n        notifyProgress: notifyProgress,\n        error: error,\n        errors: errors,\n        errorsPretranslated: errorsPretranslated,\n        apiErrors: apiErrors,\n        success: success,\n        confirm: confirm,\n        confirmModal: confirmModal,\n        confirmDelete: confirmDelete,\n        limit: limit,\n        confirmTos: confirmTos,\n        adminUserSetupModal: adminUserSetupModal,\n        infoModal: infoModal,\n        confirmLeave: confirmLeave,\n        demo: demo,\n        notifyPermanent: notifyPermanent\n    };\n\n    function notify(message, translateValues) {\n        function showSlider(message) {\n            SliderService.openTemplate('<p>' + message + '</p>');\n        }\n\n        $translate(message, translateValues).then(showSlider, showSlider);\n    }\n\n\n    function notifyPermanent(message, translateValues) {\n        function showSlider(message) {\n            SliderService.openTemplate('<p>' + message + '</p>', null, null, null, null);\n        }\n\n        $translate(message, translateValues).then(showSlider, showSlider);\n    }\n\n    function notifyProgress(message, translateValues) {\n        function showSlider(message) {\n            SliderService.openTemplate(message, null, null, null, false, true, true, true);\n        }\n\n        $translate(message, translateValues).then(showSlider, showSlider);\n    }\n\n    function notifyAction(message, translateValues, loading, icon, iconClass, action) {\n        var buttons, cancelButton, actionButton, scope;\n        // action is an object with the properties callback, text, actionClass and callbackArg\n        actionButton = '';\n        scope = getScope();\n        // closes the slider without action\n        scope.cancel = function () {\n            SliderService.close();\n        };\n        // html for the cancel-button\n        cancelButton = `<button class=\"button\" ng-click=\"$parent.cancel()\" translate=\"notify.export.confirmation\"></button>`;\n\n        // adding html for the action-button, if its supposed to be there\n        if (action) {\n            scope.actionCallback = action.callback;\n            actionButton = `<button class=\"${action.actionClass}\" ng-click=$parent.actionCallback(\"${action.callbackArg}\") translate=${action.text}></button>`;\n        }\n        // concatinating button and message html\n        buttons = `<div class=\"buttons-export\">${actionButton + cancelButton}</div>`;\n\n        function showSlider(successText) {\n            successText += buttons;\n            SliderService.openTemplate(successText, icon, iconClass, scope, false, false, false, loading);\n        }\n        // translates the text and shows the slider\n        $translate(message, translateValues).then(showSlider, showSlider);\n    }\n\n    function error(errorText, translateValues) {\n        function showSlider(errorText) {\n            SliderService.openTemplate('<p>' + errorText + '</p>', 'warning', 'error', null, false);\n        }\n        $translate(errorText, translateValues).then(showSlider, showSlider);\n    }\n\n    function errorsPretranslated(errorTexts) {\n        var scope = getScope();\n        scope.errors = errorTexts;\n        SliderService.openTemplate(require('./api-errors.html'), 'warning', 'error', scope, false);\n    }\n\n    function errors(errorTexts, translateValues) {\n        var scope = getScope();\n\n        $translate(errorTexts, translateValues).then(function (errors) {\n            scope.errors = errors;\n            SliderService.openTemplate(require('./api-errors.html'), 'warning', 'error', scope, false);\n        });\n    }\n\n    function apiErrors(errorResponse) {\n        var scope = getScope();\n        scope.errors = _.pluck(errorResponse.data && errorResponse.data.errors, 'message');\n        if (!scope.errors) {\n            return;\n        }\n\n        SliderService.openTemplate(require('./api-errors.html'), 'warning', 'error', scope, false);\n    }\n\n    function success(successText, translateValues) {\n        function showSlider(successText) {\n            SliderService.openTemplate('<p>' + successText + '</p>', 'thumb-up', 'confirmation');\n        }\n\n        $translate(successText, translateValues).then(showSlider, showSlider);\n    }\n\n    function confirm(confirmText, translateValues) {\n        var deferred = $q.defer();\n\n        var scope = getScope();\n        scope.cancel = function () {\n            deferred.reject();\n            SliderService.close();\n        };\n        scope.confirm = function () {\n            deferred.resolve();\n            SliderService.close();\n        };\n\n        function showSlider(confirmText) {\n            scope.confirmText = confirmText;\n            SliderService.openTemplate(\n                '<p>{{ confirmText }}</p>' +\n                '    <button class=\"button-flat\" ng-click=\"$parent.cancel()\" translate=\"message.button.cancel\">Cancel</button>' +\n                '    <button class=\"button-beta button-flat\" ng-click=\"$parent.confirm()\" translate=\"message.button.default\">OK</button>',\n            false, false, scope, false, false);\n        }\n\n        $translate(confirmText, translateValues).then(showSlider, showSlider);\n\n        return deferred.promise;\n    }\n\n    function confirmModal(confirmText, translateValues, description, descriptionValues, button, cancel) {\n        var deferred = $q.defer();\n\n        var scope = getScope();\n        scope.cancel = function () {\n            deferred.reject();\n            ModalService.close();\n        };\n        scope.confirm = function () {\n            deferred.resolve();\n            ModalService.close();\n        };\n\n        function showSlider(confirmText) {\n            scope.confirmText = confirmText;\n            let descriptionTemplate = '';\n            if (description && !descriptionValues) {\n                descriptionTemplate = `<p translate>${description}</p>`;\n            } else if (description && descriptionValues) {\n                descriptionTemplate = `<p translate=${description} translate-values=\"${descriptionValues}\"></p>`;\n            }\n            let buttonText = button ? button : 'message.button.default';\n            let cancelButtonText = cancel ? cancel : 'message.button.cancel';\n            let template = `<div class=\"form-field\">\n                                ${descriptionTemplate}\n                                <p><i translate>notify.default.proceed_warning</i></p>\n                                <button class=\"button\" ng-click=\"$parent.cancel()\" translate>${cancelButtonText}</button>\n                                <button class=\"button-alpha button-flat\" ng-click=\"$parent.confirm()\" translate>${buttonText}</button>\n                            </div>`;\n\n            ModalService.openTemplate(\n                template, confirmText, false, scope, false, false);\n        }\n\n        $translate(confirmText, translateValues).then(showSlider, showSlider);\n\n        return deferred.promise;\n    }\n\n    function infoModal(confirmText, translate) {\n        var scope = getScope();\n        scope.cancel = function () {\n            ModalService.close();\n        };\n        ModalService.openTemplate(\n                '<div class=\"form-field\">' +\n                '    <button class=\"button-alpha\" ng-click=\"$parent.cancel()\" translate=\"notify.generic.okay\">Ok</button>' +\n                '</div>', confirmText, false, scope, false, false);\n    }\n\n    function adminUserSetupModal() {\n        ModalService.openTemplate('<admin-user-setup><admin-user-setup/>', 'Change your email and password', false, false, false, false);\n    }\n\n    function demo() {\n        var scope = getScope();\n        DemoSliderService.openTemplate('<demo-deployment></demo-deployment>', 'star', false, scope, false);\n    }\n\n    function confirmTos() {\n        var deferred = $q.defer();\n        var scope = getScope();\n\n        scope.confirm = function () {\n            deferred.resolve();\n            ModalService.close();\n        };\n\n        ModalService.openTemplate('<terms-of-service></terms-of-service>', ' ', false, scope, false, false);\n\n        return deferred.promise;\n    }\n\n\n    function confirmDelete(confirmText, confirmWarningText, translateValues) {\n        var deferred = $q.defer();\n        var scope = getScope();\n\n        if (typeof confirmWarningText === 'object') {\n            translateValues = confirmWarningText;\n            confirmWarningText = false;\n        }\n\n        $translate(confirmText, translateValues).then(show, show);\n\n        function show(confirmText) {\n            scope.confirmText = confirmText;\n            scope.confirmWarningText = confirmWarningText || 'notify.default.proceed_warning';\n            // If modal is already open?\n            if (ModalService.getState()) {\n                scope.cancel = function () {\n                    deferred.reject();\n                    SliderService.close();\n                };\n                scope.confirm = function () {\n                    deferred.resolve();\n                    SliderService.close();\n                };\n                // Open in slider\n                SliderService.openTemplate(\n                    '<p>{{ confirmText }}</p>' +\n                    '<p><i translate=\"{{confirmWarningText}}\"></i></p>' +\n                    '    <button class=\"button-flat\" ng-click=\"$parent.cancel()\" translate=\"message.button.cancel\">Cancel</button>' +\n                    '    <button class=\"button-destructive button-flat\" ng-click=\"$parent.confirm()\">' +\n                    '    <svg class=\"iconic\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"' + iconicSprite + '#trash\"></use></svg>' +\n                    '    <span translate=\"app.delete\">Delete</span>' +\n                    '    </button>',\n                false, false, scope, false, false);\n            } else {\n                scope.cancel = function () {\n                    deferred.reject();\n                    ModalService.close();\n                };\n                scope.confirm = function () {\n                    deferred.resolve();\n                    ModalService.close();\n                };\n                // Otherwise confirm in modal\n                ModalService.openTemplate(\n                '<div class=\"form-field\">' +\n                '<p><i translate=\"{{confirmWarningText}}\"></i></p>' +\n                '    <button class=\"button-beta button-flat\" ng-click=\"cancel()\">Cancel</button>' +\n                '    <button class=\"button-destructive button-flat\" ng-click=\"confirm()\">' +\n                '    <svg class=\"iconic\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"' + iconicSprite + '#trash\"></use></svg>' +\n                '    <span translate=\"app.delete\">Delete</span>' +\n                '    </button>' +\n                '</div>', confirmText, false, scope, false, false);\n            }\n        }\n\n        return deferred.promise;\n    }\n\n    function confirmLeave(confirmText, translateValues) {\n        var deferred = $q.defer();\n        var scope = getScope();\n\n        scope.confirm = function () {\n            deferred.resolve();\n            ModalService.close();\n        };\n\n        scope.save = function () {\n            $rootScope.$broadcast('event:edit:post:data:mode:save');\n            $rootScope.$on('event:edit:post:data:mode:saveError', function () {\n                deferred.reject();\n                ModalService.close();\n            });\n            $rootScope.$on('event:edit:post:data:mode:saveSuccess', function () {\n                deferred.resolve();\n                ModalService.close();\n            });\n        };\n\n        ModalService.openTemplate(\n                '<div class=\"form-field\">' +\n                '<p><i translate>notify.post.leave_confirm_message</i></p>' +\n                '    <button class=\"button button-flat\" ng-click=\"confirm()\" translate>notify.post.leave_confirm</button>' +\n                '    <button class=\"button-alpha button-flat\" ng-click=\"save()\" translate>notify.generic.save</button>' +\n                '</div>', confirmText, false, scope, false, true);\n\n        return deferred.promise;\n    }\n\n    function limit(message, translateValues) {\n        var scope = getScope();\n\n        $translate(message, translateValues).then(showSlider, showSlider);\n\n        function showSlider(message) {\n            scope.message = message;\n            SliderService.openTemplate(require('./limit.html'), 'warning', 'error', scope, true, false);\n        }\n    }\n\n    function getScope() {\n        if (scope) {\n            scope.$destroy();\n        }\n        scope = $rootScope.$new();\n        return scope;\n    }\n}\n","module.exports = \"<p>{{ message }}</p>\\n<div class=\\\"form-field\\\">\\n    <a class=\\\"button button-beta button-flat\\\" ng-click=\\\"close()\\\" href=\\\"/settings/plan\\\" translate>limit.upgrade</a>\\n    <button class=\\\"button-flat message-trigger\\\" ng-click=\\\"close()\\\" translate=\\\"message.button.dismiss\\\">\\n        Dismiss\\n    </button>\\n</div>\\n\";","module.exports = SliderService;\n\nSliderService.$inject = ['$rootScope', '$q', '$templateRequest'];\nfunction SliderService($rootScope, $q, $templateRequest) {\n    var deferredOpen = $q.defer(),\n        deferredClose = $q.defer();\n\n    return {\n        open: openTemplate,\n        openTemplate: openTemplate,\n        close: close,\n        onOpen: onOpen,\n        onClose: onClose\n    };\n\n    function openTemplate(template, icon, iconClass, scope, closeOnTimeout, showCloseButton, closeOnNavigate, loading, type) {\n        deferredOpen.promise.then(function () {\n            $rootScope.$emit('slider:open', template, icon, iconClass, scope, closeOnTimeout, showCloseButton, closeOnNavigate, loading, type);\n        });\n    }\n\n    function close() {\n        deferredClose.promise.then(function () {\n            $rootScope.$emit('slider:close');\n        });\n    }\n\n    function onOpen(callback, scope) {\n        var handler = $rootScope.$on('slider:open', callback);\n        if (scope) {\n            scope.$on('$destroy', handler);\n        }\n        deferredOpen.resolve();\n    }\n\n    function onClose(callback, scope) {\n        var handler = $rootScope.$on('slider:close', callback);\n        if (scope) {\n            scope.$on('$destroy', handler);\n        }\n        deferredClose.resolve();\n    }\n}\n","module.exports = DemoSliderService;\n\nDemoSliderService.$inject = ['$rootScope', '$q', '$templateRequest'];\nfunction DemoSliderService($rootScope, $q, $templateRequest) {\n    var deferredOpen = $q.defer(),\n        deferredClose = $q.defer();\n\n    return {\n        open: openTemplate,\n        openTemplate: openTemplate,\n        close: close,\n        onOpen: onOpen,\n        onClose: onClose\n    };\n\n    function openTemplate(template, icon, iconClass, scope, closeOnTimeout, showCloseButton, closeOnNavigate, loading, type) {\n        deferredOpen.promise.then(function () {\n            $rootScope.$emit('demoslider:open', template, icon, iconClass, scope, closeOnTimeout, showCloseButton, closeOnNavigate, loading, type);\n            $rootScope.toggleModalVisible(true, true);\n        });\n    }\n\n    function close() {\n        $rootScope.toggleModalVisible(false, true);\n        deferredClose.promise.then(function () {\n            $rootScope.$emit('demoslider:close');\n        });\n    }\n\n    function onOpen(callback, scope) {\n        var handler = $rootScope.$on('demoslider:open', callback);\n        if (scope) {\n            scope.$on('$destroy', handler);\n        }\n        deferredOpen.resolve();\n    }\n\n    function onClose(callback, scope) {\n        var handler = $rootScope.$on('demoslider:close', callback);\n        if (scope) {\n            scope.$on('$destroy', handler);\n        }\n        deferredClose.resolve();\n    }\n}\n","/**\n * Ushahidi Angular Confirmation Message directive\n * Based on the Angular Bootstrap Modal directive\n */\nmodule.exports = Slider;\nSlider.$inject = ['$timeout', '$compile', 'SliderService', 'ModalService'];\nfunction Slider($timeout, $compile, SliderService, ModalService) {\n    return {\n        restrict: 'E',\n        template: require('./slider.html'),\n        scope: {\n            insideModal: '@?',\n            loading: '=?'\n        },\n        link: SliderLink\n    };\n\n    function SliderLink($scope, $element) {\n        $scope.classVisible = false;\n        $scope.icon = false;\n        $scope.iconClass = {};\n        $scope.showCloseButton = true;\n        $scope.closeOnNavigate = false;\n        // Callbacks\n        $scope.closeButtonClicked = closeButtonClicked;\n\n        var templateScope;\n        var closeTimeout = null;\n        var iconPath = require('ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg');\n        // content element\n        var sliderContent = $element.find('slider-content');\n\n        // Run clean up on scope destroy (probably never happens)\n        $scope.$on('$destroy', cleanUp);\n\n        // Close slider on navigation if feature enabled\n        $scope.$on('$locationChangeStart', navigateClose);\n\n        // Bind to modal service open/close events\n        SliderService.onOpen(open, $scope);\n        SliderService.onClose(close, $scope);\n\n        function open(ev, template, icon, iconClass, scope, closeOnTimeout, showCloseButton, closeOnNavigate, loading) {\n            $scope.loading = false;\n            // If we're inside a modal, modal must be open\n            if ((typeof $scope.insideModal !== 'undefined') !== ModalService.getState()) {\n                // Ignore, the other slider can open\n                return;\n            }\n\n            // Clean up any previous content\n            cleanUp();\n            // Create new scope and keep it to destroy when done with the\n            templateScope = scope ? scope.$new() : $scope.$new();\n\n            // Inject close function onto template scope\n            templateScope.close = close;\n\n            sliderContent.html(template);\n            $compile(sliderContent)(templateScope);\n\n            $scope.icon = icon ? iconPath + '#' + icon : icon;\n            $scope.iconClass = {};\n            if (iconClass) {\n                $scope.iconClass[iconClass] = true;\n            }\n\n            // If showCloseButton isn't passed, default to true\n            if (typeof showCloseButton === 'undefined') {\n                $scope.showCloseButton = true;\n            } else {\n                $scope.showCloseButton = showCloseButton;\n            }\n\n            // If closeOnNavigate isn't passed, default to false\n            if (typeof closeOnNavigate === 'undefined') {\n                $scope.closeOnNavigate = false;\n            } else {\n                $scope.closeOnNavigate = closeOnNavigate;\n            }\n\n            // Default closeOnTimeout to true\n            closeOnTimeout = (typeof closeOnTimeout !== 'undefined') ? closeOnTimeout : true;\n\n            // .. and finally open the slider!!\n            $scope.classVisible = true;\n            // Set timeout to close in 5s\n            if (closeOnTimeout) {\n                closeTimeout = $timeout(close, 5000);\n            }\n\n            if (loading) {\n                $scope.loading = true;\n            }\n        }\n\n        function close() {\n            // Removing this because it was causing slider to remain after closing modal (specifically on Share > Export to CSV)\n            // After code review, I believe it is unnecessary in platform. Can be restored if necessary. Talk to Carolyn or Will.\n            // If we're inside a modal *and* the modal isn't open\n            // if ($scope.insideModal && !ModalService.getState()) {\n            //     // Ignore, the other slider can open\n            //     return;\n            // }\n            // @todo fade out\n            $scope.classVisible = false;\n            cleanUp();\n        }\n\n        function cleanUp() {\n            if (templateScope) {\n                templateScope.$destroy();\n            }\n            if (closeTimeout) {\n                $timeout.cancel(closeTimeout);\n            }\n            sliderContent.html('');\n        }\n\n        function navigateClose() {\n            if ($scope.closeOnNavigate) {\n                close();\n            }\n        }\n\n        function closeButtonClicked(context) {\n            close();\n        }\n    }\n\n}\n","module.exports = \"\\n<div\\n    class=\\\"message\\\"\\n    ng-class=\\\"{'active': classVisible}\\\"\\n>\\n\\n    <div class='progress-bar' ng-if=\\\"loading\\\"><span>Loading...</span></div><br>\\n\\n    <div \\n        class=\\\"message-image\\\"\\n        ng-if=\\\"icon\\\"\\n        ng-class=\\\"iconClass\\\"\\n    >\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"{{ icon }}\\\"></use>\\n        </svg>\\n    </div>\\n\\n    <div\\n        class=\\\"message-body\\\"\\n    >\\n\\t\\t<slider-content></slider-content>\\n\\n        <button class=\\\"button-flat message-trigger\\\" ng-show=\\\"showCloseButton\\\" ng-click=\\\"closeButtonClicked()\\\" translate=\\\"message.button.dismiss\\\">\\n            Dismiss\\n        </button>\\n    </div>\\n</div>\\n\";","/**\n * Demo-bar visible for Demo-plans\n * Based on the Angular Bootstrap Modal directive\n */\nmodule.exports = DemoSlider;\nDemoSlider.$inject = ['$compile', 'DemoSliderService', '$rootScope', '$transitions'];\nfunction DemoSlider($compile, DemoSliderService, $rootScope, $transitions) {\n    return {\n        restrict: 'E',\n        template: require('./demo-slider.html'),\n        scope: {\n            loading: '=?'\n        },\n        link: DemoSliderLink\n    };\n\n    function DemoSliderLink($scope, $element) {\n        $scope.classVisible = false;\n        $scope.icon = false;\n        $scope.iconClass = {};\n        // Callbacks\n        $scope.expired = false;\n        $scope.limitReached = false;\n        $scope.upgrading = false;\n\n        $rootScope.$on('demo:limitAvailability', function (obj, expired, limitReached) {\n            $scope.expired = expired;\n            $scope.limitReached = limitReached;\n        });\n\n        var templateScope;\n        var iconPath = require('ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg');\n        // content element\n        var demoSliderContent = $element.find('demo-slider-content');\n\n        // Run clean up on scope destroy (probably never happens)\n        $scope.$on('$destroy', cleanUp);\n\n        // Bind to open/close events\n        DemoSliderService.onOpen(open, $scope);\n        DemoSliderService.onClose(close, $scope);\n\n        $transitions.onEnter({}, (transition, state) => {\n            const location = transition.targetState().$state();\n            $scope.upgrading = location.includes['settings.plan'] ? true : false;\n        });\n\n        function open(ev, template, icon, iconClass, scope, loading) {\n            $scope.loading = false;\n\n            // Clean up any previous content\n            cleanUp();\n            // Create new scope and keep it to destroy when done with the\n            templateScope = scope ? scope.$new() : $scope.$new();\n\n            // Inject close function onto template scope\n            templateScope.close = close;\n\n            demoSliderContent.html(template);\n            $compile(demoSliderContent)(templateScope);\n\n            $scope.icon = icon ? iconPath + '#' + icon : icon;\n            $scope.iconClass = {};\n            if (iconClass) {\n                $scope.iconClass[iconClass] = true;\n            }\n\n            // .. and finally open the slider!!\n            $scope.classVisible = true;\n\n            if (loading) {\n                $scope.loading = true;\n            }\n        }\n\n        function close() {\n            // @todo fade out\n            $scope.classVisible = false;\n            cleanUp();\n        }\n\n        function cleanUp() {\n            if (templateScope) {\n                templateScope.$destroy();\n            }\n            demoSliderContent.html('');\n        }\n    }\n}\n","module.exports = \"\\n<div\\n    class=\\\"message demo\\\"\\n    ng-class=\\\"{'active': classVisible && !upgrading}\\\"\\n>\\n\\n    <div\\n        class=\\\"message-image\\\"\\n        ng-if=\\\"icon\\\"\\n        ng-class=\\\"iconClass\\\"\\n    >\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"{{ icon }}\\\"></use>\\n        </svg>\\n    </div>\\n\\n    <div\\n        class=\\\"message-body\\\"\\n    >\\n\\n\\t\\t<demo-slider-content></demo-slider-content>\\n    </div>\\n\\n</div>\\n\";","module.exports = [\n    '$resource',\n    '$rootScope',\n    'Util',\nfunction (\n    $resource,\n    $rootScope,\n    Util\n) {\n\n    var ApiKeyEndpoint = $resource(Util.apiUrl('/apikeys/:id'), {\n            id: '@id'\n        }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            }\n        },\n        get: {\n            method: 'GET'\n        },\n        update: {\n            method: 'PUT'\n        }\n    });\n\n    return ApiKeyEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    '_',\n    'CacheFactory',\n    '$rootScope',\n    'UserEndpoint',\n    'Authentication',\n    'Session',\n    '$q',\nfunction (\n    $resource,\n    Util,\n    _,\n    CacheFactory,\n    $rootScope,\n    UserEndpoint,\n    Authentication,\n    Session,\n    $q\n) {\n    var cache;\n    if (!(cache = CacheFactory.get('configCache'))) {\n        cache = CacheFactory.createCache('configCache', { storageMode : 'memory' });\n    }\n    cache.removeExpired();\n\n    var ConfigEndpoint = $resource(Util.apiUrl('/config/:id'), {\n        'id': '@id'\n    }, {\n        get: {\n            method: 'GET',\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data);\n            },\n            cache: cache\n        },\n        update: {\n            method: 'PUT',\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data);\n            }\n        }\n    });\n\n    ConfigEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    ConfigEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/config/' + params.id));\n        return ConfigEndpoint.get(params);\n    };\n    /**\n     * saveCache is responsible for both creation and update of an entity\n     * the switch between update and save is determined based on the presence of\n     * the entity's id.\n     * When we get a full entity for edit we use getFresh to ensure it's the most\n     * up to date. Once the save takes place we need to invalidate the associated:w\n     *\n     * cache to ensure that the query - where appropriate - is cleared.\n     *\n     */\n    ConfigEndpoint.saveCache = function (item) {\n        var persist = item.id ? ConfigEndpoint.update : ConfigEndpoint.save;\n\n        cache.removeAll();\n        return persist(item);\n    };\n\n    return ConfigEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    '$rootScope',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    $rootScope,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('userCache'))) {\n        cache = CacheFactory.createCache('userCache');\n    }\n    cache.removeExpired();\n\n    var UserEndpoint = $resource(Util.apiUrl('/users/:id'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: false,\n            paramSerializer: '$httpParamSerializerJQLike',\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data);\n            },\n            cache: cache\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    UserEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/users/' + params.id));\n        return UserEndpoint.get(params);\n    };\n\n    UserEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    UserEndpoint.queryFresh = function (params) {\n        cache.removeAll();\n        return UserEndpoint.query(params);\n    };\n\n    UserEndpoint.saveCache = function (item) {\n        var persist = item.id ? UserEndpoint.update : UserEndpoint.save;\n        cache.removeAll();\n        return persist(item);\n    };\n\n    UserEndpoint.delete = function (item) {\n        cache.removeAll();\n        var result = UserEndpoint.deleteEntity(item);\n        return result;\n    };\n\n    return UserEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    '$rootScope',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    $rootScope,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('userSettingsCache'))) {\n        cache = CacheFactory.createCache('userSettingsCache');\n    }\n    cache.removeExpired();\n\n    var UserSettingsEndpoint = $resource(Util.apiUrl('/users/:id/settings/:keyId'), {\n        id: '@user_id',\n        keyId: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: false,\n            paramSerializer: '$httpParamSerializerJQLike',\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data);\n            },\n            cache: cache\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    UserSettingsEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/users/' + params.id + '/settings'));\n        return UserSettingsEndpoint.get(params);\n    };\n\n    UserSettingsEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    UserSettingsEndpoint.queryFresh = function (params) {\n        cache.removeAll();\n        return UserSettingsEndpoint.query(params);\n    };\n\n    UserSettingsEndpoint.saveCache = function (item) {\n        var persist = item.id ? UserSettingsEndpoint.update : UserSettingsEndpoint.save;\n        cache.removeAll();\n        return persist(item);\n    };\n\n    UserSettingsEndpoint.delete = function (item) {\n        cache.removeAll();\n        var result = UserSettingsEndpoint.deleteEntity(item);\n        return result;\n    };\n\n    return UserSettingsEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('formCache'))) {\n        cache = CacheFactory.createCache('formCache');\n    }\n    cache.removeExpired();\n\n    var FormEndpoint = $resource(Util.apiUrl('/forms/:id'), {\n            id: '@id'\n        }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            cache: cache,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            }\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    FormEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/forms/' + params.id));\n        return FormEndpoint.get(params);\n    };\n\n    FormEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    FormEndpoint.queryFresh = function () {\n        cache.removeAll();\n        return FormEndpoint.query();\n    };\n\n    FormEndpoint.saveCache = function (item) {\n        var persist = item.id ? FormEndpoint.update : FormEndpoint.save;\n        cache.removeAll();\n        var result = persist(item);\n        return result;\n    };\n\n    FormEndpoint.delete = function (item) {\n        cache.removeAll();\n        return FormEndpoint.deleteEntity(item);\n    };\n\n    return FormEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('attrCache'))) {\n        cache = CacheFactory.createCache('attrCache');\n    }\n    cache.removeExpired();\n\n    var FormAttributeEndpoint = $resource(Util.apiUrl('/forms/:formId/attributes/:id'), {\n        formId: '@formId',\n        id: '@id',\n        order: 'asc',\n        orderby: 'priority'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            },\n            cache: cache\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    FormAttributeEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/forms/' + params.formId + '/attributes/' + params.id));\n        return FormAttributeEndpoint.get(params);\n    };\n\n    FormAttributeEndpoint.queryFresh = function (params) {\n        cache.removeAll();\n        return FormAttributeEndpoint.query(params);\n    };\n\n    FormAttributeEndpoint.saveCache = function (item) {\n        var persist = item.id ? FormAttributeEndpoint.update : FormAttributeEndpoint.save;\n\n        cache.removeAll();\n        return persist(item);\n    };\n\n    FormAttributeEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    FormAttributeEndpoint.delete = function (item) {\n        cache.removeAll();\n        return FormAttributeEndpoint.deleteEntity(item);\n    };\n\n    return FormAttributeEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('formRoleCache'))) {\n        cache = CacheFactory.createCache('formRoleCache');\n    }\n    cache.removeExpired();\n\n    var FormRoleEndpoint = $resource(Util.apiUrl('/forms/:formId/roles/'), {\n        formId: '@formId',\n        order: 'asc',\n        orderby: 'role_id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            },\n            cache: cache\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        }\n    });\n\n    FormRoleEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/forms/' + params.formId + '/roles/'));\n        return FormRoleEndpoint.get(params);\n    };\n\n    FormRoleEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    FormRoleEndpoint.queryFresh = function (params) {\n        cache.removeAll();\n        return FormRoleEndpoint.query(params);\n    };\n\n    FormRoleEndpoint.saveCache = function (item) {\n        var persist = FormRoleEndpoint.update;\n        cache.removeAll();\n        var result = persist(item);\n        return result;\n    };\n\n    return FormRoleEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('stageCache'))) {\n        cache = CacheFactory.createCache('stageCache');\n    }\n    cache.removeExpired();\n\n    var FormStageEndpoint = $resource(Util.apiUrl('/forms/:formId/stages/:id'), {\n        formId: '@formId',\n        id: '@id',\n        order: 'asc',\n        orderby: 'priority'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            },\n            cache: cache\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    FormStageEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/forms/' + params.formId + '/stages/' + params.id));\n        return FormStageEndpoint.get(params);\n    };\n\n    FormStageEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    FormStageEndpoint.queryFresh = function (params) {\n        cache.removeAll();\n        return FormStageEndpoint.query(params);\n    };\n\n    FormStageEndpoint.saveCache = function (item) {\n        var persist = item.id ? FormStageEndpoint.update : FormStageEndpoint.save;\n        cache.removeAll();\n        var result = persist(item);\n        return result;\n    };\n\n    FormStageEndpoint.delete = function (item) {\n        cache.removeAll();\n        return FormStageEndpoint.deleteEntity(item);\n    };\n\n    return FormStageEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    'Util',\nfunction (\n    $resource,\n    Util\n) {\n\n    var FormStatsEndpoint = $resource(Util.apiUrl('/forms/:formId/stats/:extra'), {\n        formId: '@formId'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: false,\n            paramSerializer: '$httpParamSerializerJQLike',\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data);\n            }\n        },\n        get: {\n            method: 'GET'\n        }\n    });\n\n    return FormStatsEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('formContactCache'))) {\n        cache = CacheFactory.createCache('formContactCache');\n    }\n    cache.removeExpired();\n\n    var FormContactEndpoint = $resource(Util.apiUrl('/forms/:formId/contacts/'), {\n        formId: '@formId'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            cache: cache\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        }\n    });\n    return FormContactEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    '$rootScope',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    $rootScope,\n    Util,\n    CacheFactory\n) {\n    var cache;\n    if (!(cache = CacheFactory.get('tagCache'))) {\n        cache = CacheFactory.createCache('tagCache');\n    }\n    cache.removeExpired();\n\n    var TagEndpoint = $resource(Util.apiUrl('/tags/:id'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            cache: cache,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            }\n        },\n        update: {\n            method: 'PUT'\n        },\n        get: {\n            method: 'GET',\n            cache: cache,\n            params: {'ignore403': '@ignore403'}\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    TagEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/tags/' + params.id));\n        return TagEndpoint.get(params);\n    };\n\n    TagEndpoint.queryFresh = function (params) {\n        cache.removeAll();\n        return TagEndpoint.query(params);\n    };\n\n    TagEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    TagEndpoint.saveCache = function (item) {\n        var persist = item.id ? TagEndpoint.update : TagEndpoint.save;\n        cache.removeAll();\n        var result = persist(item);\n        return result;\n    };\n\n    TagEndpoint.delete = function (item) {\n        cache.removeAll();\n        var result = TagEndpoint.deleteEntity(item);\n        return result;\n    };\n\n\n    $rootScope.$on('event:authentication:logout:succeeded', function () {\n        TagEndpoint.queryFresh();\n    });\n    $rootScope.$on('event:authentication:login:succeeded', function () {\n        TagEndpoint.queryFresh();\n    });\n\n    return TagEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('roleCache'))) {\n        cache = CacheFactory.createCache('roleCache');\n    }\n    cache.removeExpired();\n\n    var RoleEndpoint = $resource(Util.apiUrl('/roles/:id'), {\n            id: '@id'\n        }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            }\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    RoleEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/roles/' + params.id));\n        return RoleEndpoint.get(params);\n    };\n\n    RoleEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    RoleEndpoint.queryFresh = function () {\n        cache.removeAll();\n        return RoleEndpoint.query();\n    };\n\n    RoleEndpoint.saveCache = function (item) {\n        var persist = item.id ? RoleEndpoint.update : RoleEndpoint.save;\n        cache.removeAll();\n        var result = persist(item);\n        return result;\n    };\n\n    RoleEndpoint.delete = function (item) {\n        cache.removeAll();\n        return RoleEndpoint.deleteEntity(item);\n    };\n\n    return RoleEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('webhookCache'))) {\n        cache = CacheFactory.createCache('webhookCache');\n    }\n    cache.removeExpired();\n\n    var WebhookEndpoint = $resource(Util.apiUrl('/webhooks/:id'), {\n            id: '@id'\n        }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            }\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    WebhookEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/webhooks/' + params.id));\n        return WebhookEndpoint.get(params);\n    };\n\n    WebhookEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    WebhookEndpoint.queryFresh = function () {\n        cache.removeAll();\n        return WebhookEndpoint.query();\n    };\n\n    WebhookEndpoint.saveCache = function (item) {\n        var persist = item.id ? WebhookEndpoint.update : WebhookEndpoint.save;\n        cache.removeAll();\n        var result = persist(item);\n        return result;\n    };\n\n    WebhookEndpoint.delete = function (item) {\n        cache.removeAll();\n        return WebhookEndpoint.deleteEntity(item);\n    };\n\n    return WebhookEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('permissionCache'))) {\n        cache = CacheFactory.createCache('permissionCache');\n    }\n    cache.removeExpired();\n\n    var PermissionEndpoint = $resource(Util.apiUrl('/permissions/:id'), {\n            id: '@id'\n        }, {\n        query: {\n            method: 'GET',\n            transpermissionResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            }\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        }\n    });\n\n    PermissionEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/permissions/' + params.id));\n        return PermissionEndpoint.get(params);\n    };\n\n    PermissionEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    PermissionEndpoint.queryFresh = function () {\n        cache.removeAll();\n        return PermissionEndpoint.query();\n    };\n\n    return PermissionEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    '$rootScope',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    $rootScope,\n    Util,\n    CacheFactory\n) {\n\n    var cache;\n\n    if (!(cache = CacheFactory.get('providerCache'))) {\n        cache = CacheFactory.createCache('providerCache');\n    }\n    cache.removeExpired();\n\n    var DataProviderEndpoint = $resource(Util.apiUrl('/dataproviders/:id'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: false,\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data);\n            },\n            cache: cache\n        },\n        get: {\n            method: 'GET',\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        },\n        options: {\n            method: 'OPTIONS'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    DataProviderEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/dataproviders/' + params.id));\n        return DataProviderEndpoint.get(params);\n    };\n\n    DataProviderEndpoint.queryFresh = function () {\n        cache.removeAll();\n        return DataProviderEndpoint.query();\n    };\n\n    DataProviderEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    DataProviderEndpoint.saveCache = function (item) {\n        var persist = item.id ? DataProviderEndpoint.update : DataProviderEndpoint.save;\n        cache.removeAll();\n        var result = persist(item);\n        return result;\n    };\n\n    DataProviderEndpoint.delete = function (item) {\n        cache.removeAll();\n        var result = DataProviderEndpoint.deleteEntity(item);\n        return result;\n    };\n\n\n    return DataProviderEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    '$rootScope',\n    'Util',\nfunction (\n    $resource,\n    $rootScope,\n    Util\n) {\n\n    var MediaEndpoint = $resource(Util.apiUrl('/media/:id'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            }\n        },\n        update: {\n            method: 'PUT'\n        }\n    });\n\n\n    return MediaEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\nfunction (\n    $resource,\n    Util\n) {\n\n    var MessageEndpoint = $resource(Util.apiUrl('/messages/:id'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data);\n            }\n        },\n        get: {\n            method: 'GET'\n        },\n        allInThread: {\n            method: 'GET',\n            params: {\n                contact: '@contact',\n                offset: '@offset',\n                limit: '@limit',\n                order: 'asc',\n                orderby: 'created'\n            },\n            isArray: false,\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data);\n            }\n        },\n        save: {\n            method: 'POST'\n        }\n    });\n\n    return MessageEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    '$rootScope',\n    'Util',\n    '_',\n    '$http',\nfunction (\n    $resource,\n    $rootScope,\n    Util,\n    _,\n    $http\n) {\n\n    var PostEndpoint = $resource(Util.apiUrl('/posts/:id/:extra'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: false,\n            paramSerializer: '$httpParamSerializerJQLike',\n            params: {\n                order: 'desc',\n                orderby: 'post_date'\n            },\n            transformResponse: [\n                $http.defaults.transformResponse[0],\n                (data) => {\n                    if (!data) {\n                        return data;\n                    }\n                    data.results = data.results.map(normalizePost);\n                    return data;\n                }\n            ]\n        },\n        get: {\n            method: 'GET',\n            transformResponse: [\n                $http.defaults.transformResponse[0],\n                function (data /*, header*/) {\n                    if (!data) {\n                        return data;\n                    }\n\n                    return normalizePost(data);\n                }\n            ]\n        },\n        save: {\n            method: 'POST',\n            transformResponse: [\n                $http.defaults.transformResponse[0],\n                function (data /*, header*/) {\n                    if (!data) {\n                        return data;\n                    }\n\n                    return normalizePost(data);\n                }\n            ]\n        },\n        update: {\n            method: 'PUT',\n            transformResponse: [\n                $http.defaults.transformResponse[0],\n                function (data /*, header*/) {\n                    if (!data) {\n                        return data;\n                    }\n\n                    return normalizePost(data);\n                }\n            ]\n        },\n        options: {\n            method: 'OPTIONS'\n        },\n        geojson: {\n            method: 'GET',\n            url: Util.apiUrl('/posts/:id/geojson'),\n            isArray: false,\n            paramSerializer: '$httpParamSerializerJQLike',\n            cancellable: true\n        },\n        stats: {\n            method: 'GET',\n            url: Util.apiUrl('/posts/:id/stats'),\n            isArray: false,\n            paramSerializer: '$httpParamSerializerJQLike'\n        },\n        collections: {\n            method: 'GET',\n            url: Util.apiUrl('/posts/:id/collections'),\n            isArray: true\n        }\n    });\n\n    PostEndpoint.export = function (filters) {\n        var config =  {\n            params: filters,\n            paramSerializer: '$httpParamSerializerJQLike',\n            responseType: 'arraybuffer'\n        };\n\n        return $http.get(Util.apiUrl('/posts/export'), config);\n    };\n\n    $rootScope.$on('event:authentication:logout:succeeded', function () {\n        PostEndpoint.query();\n    });\n\n    function normalizePost(post) {\n        // Ensure values is always an object\n        if (_.isArray(post.values)) {\n            post.values = _.object(post.values);\n        }\n        if (!_.isArray(post.published_to)) {\n            post.published_to = [];\n        }\n\n        return post;\n    }\n\n    return PostEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    '$rootScope',\n    'Util',\n    '_',\n    '$http',\nfunction (\n    $resource,\n    $rootScope,\n    Util,\n    _,\n    $http\n) {\n\n    var PostLockEndpoint = $resource(Util.apiUrl('/posts/:post_id/lock/'), {\n        post_id: '@post_id'\n    }, {\n        getLock: {\n            method: 'PUT'\n        },\n        unlockByPost: {\n            method: 'DELETE'\n        },\n        unlock: {\n            method: 'DELETE'\n        },\n        options: {\n            method: 'OPTIONS'\n        }\n    });\n\n    return PostLockEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    '_',\nfunction (\n    $resource,\n    Util,\n    _\n) {\n\n    // Force ordering by date created\n    var CollectionEndpoint = $resource(Util.apiUrl('/collections/:collectionId?orderby=:orderby'), {\n        collectionId: '@collectionId',\n        orderby: 'created',\n        order: 'DESC'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data).results;\n            }\n        },\n        get: {\n            method: 'GET'\n        },\n        update: {\n            method: 'PUT'\n        },\n        editableByMe: {\n            method: 'GET',\n            isArray: true,\n            // uncomment line below once implemented server-side\n            // for now, _.filter in the transformResponse function replaces the back-end implementation\n            //  url: Util.apiUrl('/collections?user_id=me'),\n            params : { editableBy : 'me' }, // Hack to differentiate cache key from full query\n            transformResponse: function (data /*, header*/) {\n                return _.filter(angular.fromJson(data).results, function (result) {\n                    return _.includes(result.allowed_privileges, 'update');\n                });\n            }\n        },\n        addPost: {\n            method: 'POST',\n            url: Util.apiUrl('/collections/:collectionId/posts')\n        },\n        removePost: {\n            method: 'DELETE',\n            url: Util.apiUrl('/collections/:collectionId/posts/:id')\n        },\n        delete: {\n            method: 'DELETE'\n        }\n    });\n\n    return CollectionEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    'Util',\nfunction (\n    $resource,\n    Util\n) {\n\n    var SavedSearchEndpoint = $resource(Util.apiUrl('/savedsearches/:id'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data).results;\n            }\n        },\n        get: {\n            method: 'GET'\n        },\n        update: {\n            method: 'PUT'\n        },\n        delete: {\n            method: 'DELETE'\n        }\n    });\n\n    return SavedSearchEndpoint;\n\n}];\n","module.exports = [\n    '$q',\n    '$http',\n    '$resource',\n    '$rootScope',\n    'Util',\n    'CacheFactory',\nfunction (\n    $q,\n    $http,\n    $resource,\n    $rootScope,\n    Util,\n    CacheFactory\n) {\n\n    var cache;\n    if (!(cache = CacheFactory.get('importJobCache'))) {\n        cache = CacheFactory.createCache('importJobCache');\n    }\n    cache.removeExpired();\n\n    var DataImportEndpoint = $resource(Util.apiUrl('/csv/:id/:action'), {\n        id: '@id',\n        action: '@action'\n    }, {\n        update: {\n            method: 'PUT'\n        },\n        delete: {\n            method: 'DELETE'\n        },\n        import: {\n            method: 'POST'\n        },\n        get: {\n            method: 'GET',\n            params: {'ignore403': '@ignore403'}\n        },\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            }\n        }\n    });\n\n    DataImportEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/csv/' + params.id));\n        return DataImportEndpoint.get(params);\n    };\n\n    DataImportEndpoint.queryFresh = function (params) {\n        cache.removeAll();\n        return DataImportEndpoint.query(params);\n    };\n\n    DataImportEndpoint.upload = function (formData) {\n        var dfd = $q.defer();\n        $http.post(\n            Util.apiUrl('/csv'),\n            formData,\n            {\n                headers: {\n                    'Content-Type': undefined\n                }\n            }\n        ).then(function (response) {\n            dfd.resolve(Util.transformResponse(response.data));\n        }, function (errorResponse) {\n            dfd.reject(errorResponse);\n        });\n        return dfd.promise;\n    };\n\n    return DataImportEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    '_',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    _,\n    CacheFactory\n) {\n    var cache;\n\n    if (!(cache = CacheFactory.get('userCache'))) {\n        cache = CacheFactory.createCache('userCache');\n    }\n    cache.removeExpired();\n\n    var ContactEndpoint = $resource(Util.apiUrl('/contacts/:id'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data).results;\n            },\n            cache: cache\n        },\n        get: {\n            method: 'GET',\n            params: {'ignore403': '@ignore403'},\n            cache: cache\n        },\n        update: {\n            method: 'PUT'\n        }\n    });\n\n    ContactEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/contacts/' + params.id));\n        return ContactEndpoint.get(params);\n    };\n\n    ContactEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    ContactEndpoint.queryFresh = function (params) {\n        cache.removeAll();\n        return ContactEndpoint.query(params);\n    };\n\n    ContactEndpoint.saveCache = function (item) {\n        var persist = item.id ? ContactEndpoint.update : ContactEndpoint.save;\n        cache.removeAll();\n        return persist(item);\n    };\n\n    ContactEndpoint.delete = function (item) {\n        cache.removeAll();\n        var result = ContactEndpoint.deleteEntity(item);\n        return result;\n    };\n\n    return ContactEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    'Util',\nfunction (\n    $resource,\n    Util\n) {\n\n    var NotificationEndpoint = $resource(Util.apiUrl('/notifications/:id'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            transformResponse: function (data /*, header*/) {\n                return angular.fromJson(data).results;\n            }\n        },\n        get: {\n            method: 'GET',\n            // Short term fix to handle boucing to login when unviewable\n            // notification is returned\n            params: {'ignore403': '@ignore403'}\n        },\n        update: {\n            method: 'PUT'\n        },\n        delete: {\n            method: 'DELETE'\n        }\n    });\n\n    return NotificationEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    'Util',\nfunction (\n    $resource,\n    Util\n) {\n\n    var TermsOfServiceEndpoint = $resource(Util.apiUrl('/tos/'), {\n\n    }, {\n        get: {\n            method: 'GET'\n        }\n    });\n\n    return TermsOfServiceEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    '$rootScope',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    $rootScope,\n    Util,\n    CacheFactory\n) {\n    var cache;\n    if (!(cache = CacheFactory.get('exportJobCache'))) {\n        cache = CacheFactory.createCache('exportJobCache');\n    }\n    cache.removeExpired();\n\n    var ExportJobEndpoint = $resource(Util.apiUrl('/exports/jobs/:id'), {\n        id: '@id'\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            cache: cache,\n            transformResponse: function (data /*, header*/) {\n                return Util.transformResponse(data).results;\n            }\n        },\n        update: {\n            method: 'PUT'\n        },\n        get: {\n            method: 'GET',\n            cache: cache,\n            params: {'ignore403': '@ignore403'}\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    ExportJobEndpoint.getFresh = function (params) {\n        cache.remove(Util.apiUrl('/exports/jobs/' + params.id));\n        return ExportJobEndpoint.get(params);\n    };\n\n    ExportJobEndpoint.queryFresh = function (params) {\n        cache.removeAll();\n        return ExportJobEndpoint.query(params);\n    };\n\n    ExportJobEndpoint.invalidateCache = function () {\n        return cache.removeAll();\n    };\n\n    ExportJobEndpoint.saveCache = function (item) {\n        var persist = item.id ? ExportJobEndpoint.update : ExportJobEndpoint.save;\n        cache.removeAll();\n        var result = persist(item);\n        return result;\n    };\n\n    ExportJobEndpoint.delete = function (item) {\n        cache.removeAll();\n        var result = ExportJobEndpoint.deleteEntity(item);\n        return result;\n    };\n\n    return ExportJobEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\n    'CacheFactory',\nfunction (\n    $resource,\n    Util,\n    CacheFactory\n) {\n    var cache;\n    if (!(cache = CacheFactory.get('countryCodes'))) {\n        cache = CacheFactory.createCache('countryCodes');\n    }\n    cache.removeExpired();\n\n    var CountryCodeEndpoint = $resource(Util.apiUrl('/country-codes/'), {\n    }, {\n        query: {\n            method: 'GET',\n            isArray: true,\n            cache: cache,\n            transformResponse: function (data) {\n                return Util.transformResponse(data).results;\n            }\n        }\n    });\n\n    return CountryCodeEndpoint;\n}];\n","module.exports = [\n    '$resource',\n    'Util',\nfunction (\n    $resource,\n    Util\n) {\n\n    var HxlTagEndpoint = $resource(Util.apiUrl('/hxl/tags'), {\n            id: '@id'\n        }, {\n        get: {\n            method: 'GET'\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    return HxlTagEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\nfunction (\n    $resource,\n    Util\n) {\n\n    var HxlLicenseEndpoint = $resource(Util.apiUrl('/hxl/licenses'), {\n            id: '@id'\n        }, {\n        get: {\n            method: 'GET'\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    return HxlLicenseEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\nfunction (\n    $resource,\n    Util\n) {\n\n    var HxlMetadataEndpoint = $resource(Util.apiUrl('/hxl/metadata'), {\n            id: '@id'\n        }, {\n        get: {\n            method: 'GET'\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    return HxlMetadataEndpoint;\n\n}];\n","module.exports = [\n    '$resource',\n    'Util',\nfunction (\n    $resource,\n    Util\n) {\n\n    var HxlOrganisationsEndpoint = $resource(Util.apiUrl('/hxl/organisations'), {\n            id: '@id'\n        }, {\n        get: {\n            method: 'GET'\n        },\n        update: {\n            method: 'PUT'\n        },\n        deleteEntity: {\n            method: 'DELETE'\n        }\n    });\n\n    return HxlOrganisationsEndpoint;\n\n}];\n","module.exports = [\n    '$translate',\nfunction (\n    $translate\n) {\n    var allViews = [\n        {\n            name: 'map',\n            display_name: $translate.instant('views.map')\n        },\n        {\n            name: 'data',\n            display_name: $translate.instant('views.data')\n        }\n    ];\n\n    function views() {\n        return allViews;\n    }\n\n    return {\n        views: views\n    };\n}];\n","module.exports = [\n    'ConfigEndpoint',\n    'Util',\n    '$q',\nfunction (\n    ConfigEndpoint,\n    Util,\n    $q\n) {\n\n    var Features = {\n        features: undefined,\n        loadFeatures: function () {\n            var deferred = $q.defer();\n            if (Features.features) {\n                deferred.resolve(Features.features);\n            } else {\n                ConfigEndpoint.getFresh({id: 'features'}).$promise.then(function (features) {\n                    Features.features = features;\n                    deferred.resolve(Features.features);\n                });\n            }\n            return deferred.promise;\n        },\n        isFeatureEnabled: function (feature) {\n            return Features.features[feature].enabled;\n        },\n        isViewEnabled: function (view) {\n            return Features.features.views[view];\n        },\n        getLimit: function (feature) {\n            return Features.features.limits[feature];\n        }\n    };\n\n    return Util.bindAllFunctionsToSelf(Features);\n}];\n","module.exports = [\n    '_',\n    'CONST',\n    '$window',\nfunction (\n    _,\n    CONST,\n    $window\n) {\n\n    var Util = {\n        currentUrl: function () {\n            return $window.location.href;\n        },\n        url: function (relative_url) {\n            return CONST.BACKEND_URL + relative_url;\n        },\n        apiUrl: function (relative_url) {\n            return CONST.API_URL + relative_url;\n        },\n        deploymentUrl: function (relative_url) {\n            var pattern = /^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^:\\/\\n]+)/g;\n            var deploymentUrl = pattern.exec(this.apiUrl(relative_url));\n            return deploymentUrl[0].replace('api.', '');\n        },\n        transformResponse: function (response, omitKeys) {\n            omitKeys = (omitKeys || []).concat(['allowed_methods']);\n            return _.omit(angular.fromJson(response), omitKeys);\n        },\n        // Generates a simple UUID for use on html tags when a unique ID is required\n        // Usually applicable where you want to be able to select an element by its ID\n        // but there is no id available\n        simpluUUID: function () {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n                return v.toString(16);\n            });\n        },\n        bindAllFunctionsToSelf: function (object) { // bind all functions on self to use self as their 'this' context\n            var functions = _.functions(object);\n            if (functions.length) {\n                _.bindAll.apply(_, [object].concat(functions));\n            }\n            return object;\n        },\n\n        /*\n         * This function returns a map of csv columns to post_type fields.\n         * It checks for the presences of the columns names in the set of attribute labels.\n         * If the column is not present the entry is set to undefined.\n         *\n         * The match is case insensistive.\n         */\n        autoMap: function (columns, attributes, mapSize) {\n            // Get set of labels\n            var attributeLabels = _.map(attributes, function (attribute) {\n                return attribute.label.toLowerCase();\n            });\n\n            // Create map of labels to attribute keys\n            var attributeKeys = _.pluck(attributes, 'key');\n            var attributeMap = _.object(attributeLabels, attributeKeys);\n\n            // Check if a column name appears in the set of labels, if it does set a mapping\n            // to the attribute, otherwise set the mapping to undefined.\n            return _.map(columns, function (item, index) {\n                var column = item.toLowerCase().trim();\n                return _.contains(attributeLabels, column) ? attributeMap[item] : undefined;\n            });\n        }\n    };\n\n    return Util.bindAllFunctionsToSelf(Util);\n\n}];\n","module.exports = Maps;\n\nMaps.$inject = ['ConfigEndpoint', 'Leaflet', '_', 'CONST'];\nfunction Maps(ConfigEndpoint, L, _, CONST) {\n    var layers = {\n        baselayers : {\n            satellite: {\n                name: 'Satellite',\n                url: 'https://api.tiles.mapbox.com/v4/{mapid}/{z}/{x}/{y}.png?access_token={apikey}',\n                layerOptions: {\n                    apikey: CONST.MAPBOX_API_KEY,\n                    mapid: 'mapbox.satellite',\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://www.mapbox.com/about/maps/\"\">Mapbox</a> | <a href=\"https://www.mapbox.com/feedback/\" target=\"_blank\">Improve the underlying map</a>'\n                }\n            },\n            streets: {\n                name: 'Streets',\n                url: 'https://api.tiles.mapbox.com/v4/{mapid}/{z}/{x}/{y}.png?access_token={apikey}',\n                layerOptions: {\n                    apikey: CONST.MAPBOX_API_KEY,\n                    mapid: 'mapbox.streets',\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://www.mapbox.com/about/maps/\"\">Mapbox</a> | <a href=\"https://www.mapbox.com/feedback/\" target=\"_blank\">Improve the underlying map</a>'\n                }\n            },\n            hOSM: {\n                name: 'Humanitarian',\n                url: '//{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',\n                layerOptions: {\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"http://hot.openstreetmap.org/\">Humanitarian OpenStreetMap</a> | <a href=\"https://www.mapbox.com/feedback/\" target=\"_blank\">Improve the underlying map</a>'\n                }\n            }\n        }\n    };\n\n    return {\n        createMap: createMap,\n        getLeafletConfig: getLeafletConfig,\n        getBaseLayers: getBaseLayers,\n        pointToLayer: pointToLayer,\n        getConfig: getConfig,\n        getLayer: getLayer,\n        pointIcon: pointIcon\n    };\n\n    function createMap(element) {\n        return getLeafletConfig().then(function (config) {\n            var map = L.map(element, config);\n\n            map.attributionControl.setPrefix(false);\n            map.zoomControl.setPosition('bottomleft');\n            map.setMaxBounds([[-90,-360],[90,360]]);\n            map.scrollWheelZoom.enable();\n            map.on('popupopen', function (e) {\n                var px = map.project(e.popup._latlng); // find the pixel location on the map where the popup anchor is\n                px.y -= e.popup._container.clientHeight / 2; // find the height of the popup container, divide by 2, subtract from the Y axis of marker location\n                map.panTo(map.unproject(px), {animate: true}); // pan to new center\n            });\n\n            // Add a layer control\n            // L.control.layers(getBaseLayersForControl(), {}).addTo(map);\n\n            return map;\n        });\n    }\n\n    function getLeafletConfig() {\n        return getConfig().then(function (config) {\n            var defaultLayer = layers.baselayers[config.default_view.baselayer];\n\n            return angular.extend(defaultConfig(),\n            {\n                layers: [L.tileLayer(defaultLayer.url, defaultLayer.layerOptions)],\n                center: [config.default_view.lat, config.default_view.lon],\n                zoom: config.default_view.zoom,\n                clustering: config.clustering\n            });\n        });\n    }\n\n    function getBaseLayers() {\n        return layers.baselayers;\n    }\n    /* eslint-disable */\n    function getBaseLayersForControl() {\n        return _.chain(layers.baselayers)\n        .values()\n        .indexBy('name')\n        .mapObject(function (layer) {\n            return L.tileLayer(layer.url, layer.layerOptions);\n        })\n        .value();\n    }\n    /* eslint-enable */\n\n    function getLayer(layerKey) {\n        var layer = layers.baselayers[layerKey];\n        return L.tileLayer(layer.url, layer.layerOptions);\n    }\n\n    function getConfig(fresh) {\n        return ConfigEndpoint[fresh ? 'getFresh' : 'get']({ id: 'map' }).$promise.then(function (config) {\n            // Handle legacy layers\n            if (config.default_view.baselayer === 'MapQuest') {\n                config.default_view.baselayer = 'streets';\n            }\n            if (config.default_view.baselayer === 'MapQuestAerial') {\n                config.default_view.baselayer = 'satellite';\n            }\n            return config;\n        });\n    }\n\n    function defaultConfig() {\n        return {\n            scrollWheelZoom: false,\n            center: [-1.2833, 36.8167], // Default to centered on Nairobi\n            zoom: 8,\n            layers: [L.tileLayer(layers.baselayers.streets.url, layers.baselayers.streets.layerOptions)]\n        };\n    }\n\n    function pointToLayer(feature, latlng) {\n        return L.marker(latlng, {\n            icon: pointIcon(feature.properties['marker-color'])\n        });\n    }\n\n    // Icon configuration\n    function pointIcon(color, size, className) {\n        // Test string to make sure that it does not contain injection\n        color = (color && /^[a-zA-Z0-9#]+$/.test(color)) ? color : '#959595';\n        size = size || [32, 32];\n        var iconicSprite = require('ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg');\n\n        return L.divIcon({\n            className: 'custom-map-marker ' + className,\n            html: '<svg class=\"iconic\" style=\"fill:' + color + ';\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"' + iconicSprite + '#map-marker\"></use></svg><span class=\"iconic-bg\" style=\"background-color:' + color + ';\"\"></span>',\n            iconSize: size,\n            iconAnchor: [size[0] / 2, size[1]],\n            popupAnchor: [0, 0 - size[1]]\n        });\n    }\n}\n","module.exports = [\n    '$q',\n    '$http',\n    '_',\nfunction (\n    $q,\n    $http,\n    _\n) {\n    return {\n        searchCoordinates: searchCoordinates,\n        searchAllInfo: searchAllInfo\n    };\n\n    function searchCoordinates(location_name) {\n        return build_query(location_name).then(function (results) {\n            if (results && results[0]) {\n                if (results[0].lat && results[0].lon) {\n                    return [parseFloat(results[0].lat), parseFloat(results[0].lon)];\n                }\n            }\n\n            return null;\n        });\n    }\n\n    function searchAllInfo(location_name) {\n        return build_query(location_name).then(function (results) {\n            if (results && results[0]) {\n                return results;\n            }\n            return null;\n        });\n    }\n\n    function build_query(location_name) {\n        if (window.googlePlaces) { /* google maps */\n            return google_places_search(location_name);\n        } else { /* osm nominatim */\n            return osm_geosearch(location_name);\n        }\n    }\n\n    function osm_geosearch(location_name) {\n        return $http({\n            method: 'GET',\n            url: '//nominatim.openstreetmap.org/search',\n            params: { q: location_name, format: 'json' }\n        }).then((response) => {\n            return response.data;\n        }, () => {\n            // noop\n        });\n    }\n\n    function google_places_search(location_name) {\n        var deferred = $q.defer();\n        window.googlePlaces.textSearch({ query: location_name }, function (results) {\n            deferred.resolve(\n                _.map(results, function (result) {\n                    return {\n                        display_name: result.name + ' - ' + result.formatted_address,\n                        lat: result.geometry.location.lat(),\n                        lon: result.geometry.location.lng()\n                    };\n                })\n            );\n        });\n        return deferred.promise;\n    }\n\n}];\n","module.exports = [\n    'Util',\n    '$http',\nfunction (\n    Util,\n    $http\n) {\n\n    // Get translated languages if they have been downloaded from https://www.transifex.com/api/2/languages\n    var languages = $http.get('locales/languages.json')\n        .then(function (response) {\n            return response.data.languages;\n        }, function () {\n            // fallback to en pulled from https://www.transifex.com/api/2/languages\n            // Language codes have _ replaced with -\n            return [\n                {\n                    'rtl': false,\n                    'pluralequation': 'language.pluralequation',\n                    'code': 'en',\n                    'name': 'English',\n                    'nplurals': 2\n                }\n            ];\n        });\n\n    return languages;\n}];\n","module.exports = [\n    'FontAwesomeIcons',\n    'Util',\n    '_',\n    'Notify',\nfunction (\n    FontAwesomeIcons,\n    Util,\n    _,\n    Notify\n) {\n\n    var iconSets = {\n        fontAwesome: FontAwesomeIcons.getIconSet(),\n        noun: {}\n    };\n\n    var IconManager = {\n\n        getIconSetArray: function (iconLibName) {\n            var iconSetArray = [];\n            var iconLibNames = iconLibName.split(' ');\n\n            // @todo: simplify this to reduce loops\n            // push array construction to the endpoint\n            // and/or store values with prefix already attached\n            _.each(iconLibNames, function (libName) {\n                var classPrefix = iconSets[libName].iconClass + ' ' + iconSets[libName].iconClassPrefix;\n                _.each(iconSets[libName].icons, function (icon) {\n                    iconSetArray.push(\n                        classPrefix + icon\n                    );\n                });\n            });\n\n            return iconSetArray;\n        }\n    };\n\n    return Util.bindAllFunctionsToSelf(IconManager);\n}];\n\n","module.exports = [\n    'Util',\n    '$q',\nfunction (\n    Util,\n    $q\n) {\n\n    var FontAwesomeIcons = {\n        getIconSet: function () {\n            return {\n                // @todo: Move icon classes definition into\n                // separate dir/js\n                iconClass: 'fa',\n                iconClassPrefix: 'fa-',\n                icons: [\n                  'adjust',\n                  'anchor',\n                  'archive',\n                  'area-chart',\n                  'arrows',\n                  'arrows-h',\n                  'arrows-v',\n                  'automobile',\n                  'asterisk',\n                  'at',\n                  'ban',\n                  'bank',\n                  'bar-chart-o',\n                  'barcode',\n                  'bars',\n                  'beer',\n                  'bell',\n                  'bell-o',\n                  'bell-slash',\n                  'bell-slash-o',\n                  'bicycle',\n                  'binoculars',\n                  'birthday-cake',\n                  'bolt',\n                  'bomb',\n                  'book',\n                  'bookmark',\n                  'bookmark-o',\n                  'briefcase',\n                  'bug',\n                  'building',\n                  'building-o',\n                  'bullhorn',\n                  'bullseye',\n                  'bus',\n                  'cab',\n                  'calculator',\n                  'calendar',\n                  'calendar-o',\n                  'camera',\n                  'camera-retro',\n                  'car',\n                  'caret-square-o-down',\n                  'caret-square-o-left',\n                  'caret-square-o-right',\n                  'caret-square-o-up',\n                  'cc',\n                  'cc-amex',\n                  'cc-discover',\n                  'cc-mastercard',\n                  'cc-paypal',\n                  'cc-stripe',\n                  'cc-visa',\n                  'certificate',\n                  'check',\n                  'check-circle',\n                  'check-circle-o',\n                  'child',\n                  'circle',\n                  'circle-o',\n                  'circle-thin',\n                  'clock-o',\n                  'cloud',\n                  'cloud-download',\n                  'cloud-upload',\n                  'code',\n                  'code-fork',\n                  'coffee',\n                  'cog',\n                  'cogs',\n                  'comment',\n                  'comment-o',\n                  'comments',\n                  'comments-o',\n                  'compass',\n                  'copyright',\n                  'credit-card',\n                  'crop',\n                  'crosshairs',\n                  'cube',\n                  'cubes',\n                  'cutlery',\n                  'dashboard',\n                  'database',\n                  'desktop',\n                  'dot-circle-o',\n                  'download',\n                  'edit',\n                  'ellipsis-h',\n                  'ellipsis-v',\n                  'envelope',\n                  'envelope-o',\n                  'envelope-square',\n                  'eraser',\n                  'exchange',\n                  'exclamation',\n                  'exclamation-circle',\n                  'exclamation-triangle',\n                  'external-link',\n                  'external-link-square',\n                  'eye',\n                  'eye-slash',\n                  'eyedropper',\n                  'fax',\n                  'female',\n                  'fighter-jet',\n                  'file-archive-o',\n                  'file-audio-o',\n                  'file-code-o',\n                  'file-excel-o',\n                  'file-image-o',\n                  'file-movie-o',\n                  'file-pdf-o',\n                  'file-photo-o',\n                  'file-picture-o',\n                  'file-powerpoint-o',\n                  'file-sound-o',\n                  'file-video-o',\n                  'file-word-o',\n                  'file-zip-o',\n                  'film',\n                  'filter',\n                  'fire',\n                  'fire-extinguisher',\n                  'flag',\n                  'flag-checkered',\n                  'flag-o',\n                  'flash',\n                  'flask',\n                  'folder',\n                  'folder-o',\n                  'folder-open',\n                  'folder-open-o',\n                  'frown-o',\n                  'futbol-o',\n                  'gamepad',\n                  'gavel',\n                  'gear',\n                  'gears',\n                  'gift',\n                  'glass',\n                  'globe',\n                  'graduation-cap',\n                  'group',\n                  'hdd-o',\n                  'headphones',\n                  'heart',\n                  'heart-o',\n                  'history',\n                  'home',\n                  'image',\n                  'inbox',\n                  'info',\n                  'info-circle',\n                  'institution',\n                  'key',\n                  'keyboard-o',\n                  'language',\n                  'laptop',\n                  'leaf',\n                  'legal',\n                  'lemon-o',\n                  'level-down',\n                  'level-up',\n                  'life-bouy',\n                  'life-ring',\n                  'life-saver',\n                  'lightbulb-o',\n                  'line-chart',\n                  'location-arrow',\n                  'lock',\n                  'magic',\n                  'magnet',\n                  'mail-forward',\n                  'mail-reply',\n                  'mail-reply-all',\n                  'male',\n                  'map-marker',\n                  'meh-o',\n                  'microphone',\n                  'microphone-slash',\n                  'minus',\n                  'minus-circle',\n                  'minus-square',\n                  'minus-square-o',\n                  'mobile',\n                  'mobile-phone',\n                  'money',\n                  'moon-o',\n                  'mortar-board',\n                  'music',\n                  'navicon',\n                  'newspaper-o',\n                  'paint-brush',\n                  'paper-plane',\n                  'paper-plane-o',\n                  'paw',\n                  'pencil',\n                  'pencil-square',\n                  'pencil-square-o',\n                  'phone',\n                  'phone-square',\n                  'photo',\n                  'picture-o',\n                  'pie-chart',\n                  'plane',\n                  'plug',\n                  'plus',\n                  'plus-circle',\n                  'plus-square',\n                  'plus-square-o',\n                  'power-off',\n                  'print',\n                  'puzzle-piece',\n                  'qrcode',\n                  'question',\n                  'question-circle',\n                  'quote-left',\n                  'quote-right',\n                  'random',\n                  'refresh',\n                  'reorder',\n                  'reply',\n                  'reply-all',\n                  'retweet',\n                  'road',\n                  'rocket',\n                  'rss',\n                  'rss-square',\n                  'search',\n                  'search-minus',\n                  'search-plus',\n                  'send',\n                  'send-o',\n                  'share',\n                  'share-alt',\n                  'share-alt-square',\n                  'share-square',\n                  'share-square-o',\n                  'shield',\n                  'shopping-cart',\n                  'sign-in',\n                  'sign-out',\n                  'signal',\n                  'sitemap',\n                  'sliders',\n                  'smile-o',\n                  'soccer-ball-o',\n                  'sort',\n                  'sort-alpha-asc',\n                  'sort-alpha-desc',\n                  'sort-amount-asc',\n                  'sort-amount-desc',\n                  'sort-asc',\n                  'sort-desc',\n                  'sort-down',\n                  'sort-numeric-asc',\n                  'sort-numeric-desc',\n                  'sort-up',\n                  'space-shuttle',\n                  'spinner',\n                  'spoon',\n                  'square',\n                  'square-o',\n                  'star',\n                  'star-half',\n                  'star-half-empty',\n                  'star-half-full',\n                  'star-half-o',\n                  'star-o',\n                  'suitcase',\n                  'sun-o',\n                  'support',\n                  'tablet',\n                  'tachometer',\n                  'tag',\n                  'tags',\n                  'tasks',\n                  'taxi',\n                  'terminal',\n                  'thumb-tack',\n                  'thumbs-down',\n                  'thumbs-o-down',\n                  'thumbs-o-up',\n                  'thumbs-up',\n                  'ticket',\n                  'times',\n                  'times-circle',\n                  'times-circle-o',\n                  'tint',\n                  'toggle-down',\n                  'toggle-left',\n                  'toggle-off',\n                  'toggle-on',\n                  'toggle-right',\n                  'toggle-up',\n                  'trash',\n                  'trash-o',\n                  'tree',\n                  'trophy',\n                  'truck',\n                  'tty',\n                  'umbrella',\n                  'university',\n                  'unlock',\n                  'unlock-alt',\n                  'unsorted',\n                  'upload',\n                  'user',\n                  'users',\n                  'video-camera',\n                  'volume-down',\n                  'volume-off',\n                  'volume-up',\n                  'warning',\n                  'wheelchair',\n                  'wifi',\n                  'wrench',\n                  'check-square',\n                  'check-square-o',\n                  'bitcoin',\n                  'btc',\n                  'cny',\n                  'dollar',\n                  'eur',\n                  'euro',\n                  'gbp',\n                  'ils',\n                  'inr',\n                  'jpy',\n                  'krw',\n                  'rmb',\n                  'rouble',\n                  'rub',\n                  'ruble',\n                  'rupee',\n                  'shekel',\n                  'sheqel',\n                  'try',\n                  'turkish-lira',\n                  'usd',\n                  'won',\n                  'yen',\n                  'align-center',\n                  'align-justify',\n                  'align-left',\n                  'align-right',\n                  'bold',\n                  'chain',\n                  'chain-broken',\n                  'clipboard',\n                  'columns',\n                  'copy',\n                  'cut',\n                  'dedent',\n                  'file',\n                  'file-o',\n                  'file-text',\n                  'file-text-o',\n                  'files-o',\n                  'floppy-o',\n                  'font',\n                  'header',\n                  'indent',\n                  'italic',\n                  'link',\n                  'list',\n                  'list-alt',\n                  'list-ol',\n                  'list-ul',\n                  'outdent',\n                  'paperclip',\n                  'paragraph',\n                  'paste',\n                  'repeat',\n                  'rotate-left',\n                  'rotate-right',\n                  'save',\n                  'scissors',\n                  'strikethrough',\n                  'subscript',\n                  'superscript',\n                  'table',\n                  'text-height',\n                  'text-width',\n                  'th',\n                  'th-large',\n                  'th-list',\n                  'underline',\n                  'undo',\n                  'unlink',\n                  'angle-double-down',\n                  'angle-double-left',\n                  'angle-double-right',\n                  'angle-double-up',\n                  'angle-down',\n                  'angle-left',\n                  'angle-right',\n                  'angle-up',\n                  'arrow-circle-down',\n                  'arrow-circle-left',\n                  'arrow-circle-o-down',\n                  'arrow-circle-o-left',\n                  'arrow-circle-o-right',\n                  'arrow-circle-o-up',\n                  'arrow-circle-right',\n                  'arrow-circle-up',\n                  'arrow-down',\n                  'arrow-left',\n                  'arrow-right',\n                  'arrow-up',\n                  'arrows-alt',\n                  'caret-down',\n                  'caret-left',\n                  'caret-right',\n                  'caret-up',\n                  'chevron-circle-down',\n                  'chevron-circle-left',\n                  'chevron-circle-right',\n                  'chevron-circle-up',\n                  'chevron-down',\n                  'chevron-left',\n                  'chevron-right',\n                  'chevron-up',\n                  'hand-o-down',\n                  'hand-o-left',\n                  'hand-o-right',\n                  'hand-o-up',\n                  'long-arrow-down',\n                  'long-arrow-left',\n                  'long-arrow-right',\n                  'long-arrow-up',\n                  'backward',\n                  'compress',\n                  'eject',\n                  'expand',\n                  'fast-backward',\n                  'fast-forward',\n                  'forward',\n                  'pause',\n                  'play',\n                  'play-circle',\n                  'play-circle-o',\n                  'step-backward',\n                  'step-forward',\n                  'stop',\n                  'youtube-play',\n                  'adn',\n                  'android',\n                  'angellist',\n                  'apple',\n                  'behance',\n                  'behance-square',\n                  'bitbucket',\n                  'bitbucket-square',\n                  'css3',\n                  'delicious',\n                  'digg',\n                  'dribbble',\n                  'dropbox',\n                  'drupal',\n                  'empire',\n                  'facebook',\n                  'facebook-square',\n                  'flickr',\n                  'foursquare',\n                  'ge',\n                  'git',\n                  'git-square',\n                  'github',\n                  'github-alt',\n                  'github-square',\n                  'gittip',\n                  'google',\n                  'google-plus',\n                  'google-plus-square',\n                  'google-wallet',\n                  'hacker-news',\n                  'html5',\n                  'instagram',\n                  'ioxhost',\n                  'joomla',\n                  'jsfiddle',\n                  'lastfm',\n                  'lastfm-square',\n                  'linkedin',\n                  'linkedin-square',\n                  'linux',\n                  'maxcdn',\n                  'meanpath',\n                  'openid',\n                  'pagelines',\n                  'paypal',\n                  'pied-piper',\n                  'pied-piper-alt',\n                  'pinterest',\n                  'pinterest-square',\n                  'qq',\n                  'ra',\n                  'rebel',\n                  'reddit',\n                  'reddit-square',\n                  'renren',\n                  'skype',\n                  'slack',\n                  'slideshare',\n                  'soundcloud',\n                  'spotify',\n                  'stack-exchange',\n                  'stack-overflow',\n                  'steam',\n                  'steam-square',\n                  'stumbleupon',\n                  'stumbleupon-circle',\n                  'tencent-weibo',\n                  'trello',\n                  'tumblr',\n                  'tumblr-square',\n                  'twitch',\n                  'twitter',\n                  'twitter-square',\n                  'vimeo-square',\n                  'vine',\n                  'vk',\n                  'wechat',\n                  'weibo',\n                  'weixin',\n                  'windows',\n                  'wordpress',\n                  'xing',\n                  'xing-square',\n                  'yahoo',\n                  'yelp',\n                  'youtube',\n                  'youtube-square',\n                  'ambulance',\n                  'h-square',\n                  'hospital-o',\n                  'medkit',\n                  'stethoscope',\n                  'user-md'\n              ]};\n        }\n    };\n\n    return FontAwesomeIcons;\n\n}];\n","module.exports = MainsheetService;\n\nMainsheetService.$inject = ['$rootScope', '$q'];\n\nfunction MainsheetService($rootScope, $q) {\n    var deferredOpen = $q.defer(),\n        deferredClose = $q.defer(),\n        isOpen = false;\n\n    return {\n        open: openTemplate,\n        openTemplate: openTemplate,\n        close: closeTemplate,\n        closeTemplate: closeTemplate,\n        getState: getState,\n        onOpen: onOpen,\n        onClose: onClose,\n        setState: setState\n    };\n\n    function openTemplate(template, title, scope) {\n        deferredOpen.promise.then(function () {\n            $rootScope.$emit('mainsheet:open', template, title, scope);\n        });\n    }\n\n    function closeTemplate() {\n        deferredClose.promise.then(function () {\n            $rootScope.$emit('mainsheet:close');\n        });\n    }\n\n    function getState() {\n        return isOpen;\n    }\n\n    function onOpen(callback, scope) {\n        var handler = $rootScope.$on('mainsheet:open', callback);\n        if (scope) {\n            scope.$on('$destroy', handler);\n        }\n        deferredOpen.resolve();\n    }\n\n    function onClose(callback, scope) {\n        var handler = $rootScope.$on('mainsheet:close', callback);\n        if (scope) {\n            scope.$on('$destroy', handler);\n        }\n        deferredClose.resolve();\n    }\n\n    function setState(open) {\n        $rootScope.$emit('mainsheet:statechange');\n        isOpen = open;\n    }\n}\n","module.exports = ModalService;\n\nModalService.$inject = ['$rootScope', '$q', '$templateRequest'];\nfunction ModalService($rootScope, $q, $templateRequest) {\n    var deferredOpen = $q.defer(),\n        deferredClose = $q.defer(),\n        isOpen = false;\n\n    return {\n        open: openTemplate,\n        openTemplate: openTemplate,\n        close: close,\n        getState: getState,\n        // Methods only to be called form ModalContainer\n        onOpen: onOpen,\n        onClose: onClose,\n        setState: setState\n    };\n\n    function openTemplate(template, title, icon, scope, closeOnOverlayClick, showCloseButton) {\n        deferredOpen.promise.then(function () {\n            $rootScope.$emit('modal:open', template, title, icon, scope, closeOnOverlayClick, showCloseButton);\n        });\n    }\n\n    function close() {\n        deferredClose.promise.then(function () {\n            $rootScope.$emit('modal:close');\n        });\n    }\n\n    function getState() {\n        return isOpen;\n    }\n\n    function onOpen(callback, scope) {\n        var handler = $rootScope.$on('modal:open', callback);\n        if (scope) {\n            scope.$on('$destroy', handler);\n        }\n        deferredOpen.resolve();\n    }\n\n    function onClose(callback, scope) {\n        var handler = $rootScope.$on('modal:close', callback);\n        if (scope) {\n            scope.$on('$destroy', handler);\n        }\n        deferredClose.resolve();\n    }\n\n    function setState(open) {\n        isOpen = open;\n    }\n}\n","module.exports = [\n    '$rootScope',\n    '$q',\n    '$translate',\n    '$document',\n    'Languages',\n    'Session',\n    'Authentication',\n    'UserEndpoint',\n    'ConfigEndpoint',\n    'moment',\nfunction (\n    $rootScope,\n    $q,\n    $translate,\n    $document,\n    Languages,\n    Session,\n    Authentication,\n    UserEndpoint,\n    ConfigEndpoint,\n    moment\n) {\n    var translate = function (lang) {\n        if (lang !== null) {\n            $translate.use(lang).then(function (langKey) {\n                if (langKey) {\n                    $translate.preferredLanguage(langKey);\n                    Languages.then(function (languages) {\n                        let language = languages.find(l => l.code === langKey);\n\n                        if ($rootScope.rtlEnabled !== language.rtl) {\n                            if (language.rtl) {\n                                require.ensure(\n                                    ['ushahidi-platform-pattern-library/assets/css/rtl-style.min.css'], () => {\n                                        $rootScope.$apply(() => {\n                                            require('ushahidi-platform-pattern-library/assets/css/rtl-style.min.css');\n                                            $rootScope.rtlEnabled = language.rtl;\n                                        });\n                                    }, 'rtl'\n                                );\n                            } else {\n                                $rootScope.rtlEnabled = language.rtl;\n                            }\n                        }\n                    });\n                }\n            });\n\n            if (lang === 'en') {\n                // Just set moment locale\n                moment.locale('en');\n            } else {\n                // Load locale\n                require(['moment/locale/' + lang + '.js'], function () {\n                    // And then set moment locale\n                    moment.locale(lang);\n                });\n            }\n\n            // Translating and setting page-title\n            $rootScope.$emit('setPageTitle', $translate.instant($document[0].title));\n        }\n    };\n\n    var setStartLanguage = function () {\n        getLanguage().then(function (language) {\n            translate(language);\n        });\n    };\n\n    var getLanguage = function (config) {\n        return $q(function (resolve, reject) {\n                if (Session.getSessionDataEntry('language')) {\n                    resolve(Session.getSessionDataEntry('language'));\n                    return;\n                }\n\n                let configRequest = $q.when(config ? config : ConfigEndpoint.get({id: 'site'}).$promise);\n                let userRequest = $q.when(false);\n\n                if (Authentication.getLoginStatus()) {\n                    userRequest = UserEndpoint.get({id: 'me'}).$promise;\n                }\n\n                $q.all({\n                    user: userRequest,\n                    config: configRequest\n                }).then(function (result) {\n                    if (result.user && result.user.language) {\n                        resolve(result.user.language);\n                    } else if (result.config.language) {\n                        resolve(result.config.language);\n                    } else {\n                        resolve('en');\n                    }\n                });\n            });\n    };\n\n    var setLanguage = function (code) {\n        Session.setSessionDataEntry('language', code);\n        if (Authentication.getLoginStatus()) {\n            UserEndpoint.get({id: 'me'}).$promise.then(function (user) {\n                user.language = code;\n                UserEndpoint.update(user);\n            });\n        }\n    };\n\n    return {\n        translate: translate,\n        setStartLanguage: setStartLanguage,\n        getLanguage: getLanguage,\n        setLanguage: setLanguage\n    };\n\n}];\n","module.exports = NavigationController;\n\nNavigationController.$inject = ['Authentication', 'ConfigEndpoint', 'BootstrapConfig', '$rootScope', 'Features'];\nfunction NavigationController(Authentication, ConfigEndpoint, BootstrapConfig, $rootScope, Features) {\n    var vm = this;\n\n    vm.site = BootstrapConfig;\n    vm.reloadSiteConfig = reloadSiteConfig;\n    //vm.canCreatePost = canCreatePost;\n    //vm.canRegister = canRegister;\n    //vm.logoutClick = logoutClick;\n\n    activate();\n\n    $rootScope.$on('event:update:header', reloadSiteConfig);\n\n    function activate() {\n\n        Features.loadFeatures().then(function () {\n            vm.activityIsAvailable = Features.isViewEnabled('activity');\n            vm.planIsAvailable = Features.isViewEnabled('plan');\n        });\n\n        reloadSiteConfig();\n    }\n\n    function reloadSiteConfig() {\n        ConfigEndpoint.get({ id: 'site' }).$promise.then(function (site) {\n            vm.site = site;\n        });\n    }\n\n    // Move to add post button (or associated service)\n    // function canCreatePost() {\n    //     return $rootScope.loggedin || !vm.site.private;\n    // };\n}\n","module.exports = [\n    '$rootScope',\n    '$location',\n    '$window',\n    '$scope',\n    'Authentication',\n    'ConfigEndpoint',\nfunction (\n    $rootScope,\n    $location,\n    $window,\n    $scope,\n    Authentication,\n    ConfigEndpoint\n) {\n    var USHAHIDI = 'Ushahidi';\n    $scope.siteTitle = USHAHIDI;\n    $scope.pageTitle = null;\n    $scope.pageDescription = null;\n    $scope.pageKeywords = null;\n    $scope.pageRobots = null;\n\n    $scope.appStoreId = $window.ushahidi.appStoreId;\n\n    $scope.currentFullUrl = $location.absUrl();\n\n    // Then update from server\n    $scope.reloadSiteConfig = function () {\n        ConfigEndpoint.get({ id: 'site' }).$promise.then(function (site) {\n            $scope.siteTitle = site.name ? site.name : USHAHIDI;\n        });\n    };\n\n    $rootScope.$on('event:update:header', function () {\n        $scope.reloadSiteConfig();\n    });\n    $scope.reloadSiteConfig();\n\n    $rootScope.$on('setPageTitle', function (event, title) {\n        $scope.pageTitle = null;\n\n        if (title && title.length) {\n            $scope.pageTitle = title + ' - ';\n        }\n    });\n\n    $rootScope.$on('setPageDescription', function (event, description) {\n        $scope.pageDescription = null;\n\n        if (description && description.length) {\n            $scope.pageDescription = description;\n        }\n    });\n\n    $rootScope.$on('setPageKeywords', function (event, keywords) {\n        $scope.pageKeywords = null;\n\n        if (keywords && keywords.length) {\n            $scope.pageKeywords = keywords;\n        }\n    });\n\n    $rootScope.$on('setPageRobots', function (event, robots) {\n        $scope.pageRobots = null;\n\n        if (robots) {\n            if (robots === true) {\n                $scope.pageRobots = 'index, follow';\n            } else if (robots === false) {\n                $scope.pageRobots = 'noindex, nofollow';\n            } else if (robots.length) {\n                $scope.pageRobots = robots;\n            }\n        }\n    });\n}];\n","module.exports = [\n    '$scope',\n    '$rootScope',\n    'Authentication',\n    'UserEndpoint',\n    'ConfigEndpoint',\n    '$q',\n    '$window',\n    '$location',\nfunction (\n    $scope,\n    $rootScope,\n    Authentication,\n    UserEndpoint,\n    ConfigEndpoint,\n    $q,\n    $window,\n    $location\n) {\n    $scope.startIntercom = startIntercom;\n    $scope.stopIntercom = stopIntercom;\n\n    activate();\n    function activate() {\n        $rootScope.$on('event:authentication:login:succeeded', function () {\n            $scope.startIntercom();\n        });\n\n        $rootScope.$on('event:authentication:logout:succeeded', function () {\n            $scope.stopIntercom();\n        });\n\n        if (Authentication.getLoginStatus()) {\n            $scope.startIntercom();\n        }\n    }\n\n    function startIntercom() {\n        if ($window.ushahidi.intercomAppId !== '') {\n            $q.all([\n                ConfigEndpoint.get({ id: 'site' }).$promise,\n                UserEndpoint.getFresh({id: 'me'}).$promise\n            ]).then(function (results) {\n                var site = results[0];\n                var user = results[1];\n                var domain = $location.host();\n\n                $window.Intercom('boot', {\n                    app_id: $window.ushahidi.intercomAppId,\n                    custom_launcher_selector: '#intercom_custom_launcher',\n                    hide_default_launcher: true,\n                    email: user.email,\n                    created_at: user.created,\n                    user_id: domain + '_' + user.id,\n                    'deployment_url': domain,\n                    'realname' : user.realname,\n                    'last_login': user.last_login,\n                    'role': user.role,\n                    company: {\n                        name: site.name,\n                        id: domain,\n                        created_at: 0, // Faking this because we don't have this data\n                        plan: site.tier\n                    }\n                });\n            });\n        }\n    }\n\n    function stopIntercom() {\n        if ($window.ushahidi.intercomAppId !== '') {\n            $window.Intercom('shutdown');\n        }\n    }\n}];\n","module.exports = LoadingProgress;\n\nLoadingProgress.$inject = ['$rootScope', '$transitions', '$injector'];\nfunction LoadingProgress($rootScope, $transitions, $injector) {\n    function watchTransitions() {\n        $transitions.onStart({}, function (transition) {\n            $rootScope.isLoading = true;\n            if (transition.from().name === 'list.data.edit') {\n                $rootScope.isSaving = true;\n            }\n        });\n\n        $transitions.onExit({}, function (transition) {\n            var $httpProvider = $injector.get('$http');\n            if ($httpProvider.pendingRequests.length === 0) {\n                $rootScope.isLoading = false;\n                $rootScope.isSaving = false;\n            }\n        });\n    }\n\n    function getLoadingState() {\n        return $rootScope.isLoading;\n    }\n\n    function getSavingState() {\n        return $rootScope.isSaving;\n    }\n\n    function setLoadingState(newState) {\n        $rootScope.isLoading = newState;\n    }\n\n    function setSavingState(newState) {\n        $rootScope.isSaving = newState;\n    }\n\n    return {\n        watchTransitions: watchTransitions,\n        getLoadingState: getLoadingState,\n        getSavingState: getSavingState,\n        setLoadingState: setLoadingState,\n        setSavingState: setSavingState\n    };\n}\n","module.exports = DataExport;\n\nDataExport.$inject = ['$rootScope', 'ExportJobEndpoint', 'Notify', '$window', '$timeout', '$interval', 'CONST', '$q', '_'];\nfunction DataExport($rootScope, ExportJobEndpoint,  Notify, $window, $timeout, $interval, CONST, $q, _) {\n    var exportJobs = [];\n    function startExport(query, hideStartNotification) {\n        query.entity_type = 'post';\n\n        // saving the new job to the db\n        return ExportJobEndpoint.save(query).$promise.then(function (job) {\n            updateExportJobsList(job);\n            if (!hideStartNotification) {\n                // notifies the user\n                loadingStatus(true, null, job);\n            }\n            // start polling for ready job.\n            startPolling([ExportJobEndpoint.getFresh({id: job.id})]);\n            return job.id;\n        }, function (err) {\n            loadingStatus(false, err);\n        });\n    }\n\n    function loadExportJob() {\n        var queries = [];\n        ExportJobEndpoint.queryFresh({user: 'me'}).$promise.then(function (response) {\n            _.each(response, function (job) {\n                if (job.status !== 'SUCCESS' && job.status !== 'FAILED') {\n                    queries.push(ExportJobEndpoint.getFresh({id: job.id}));\n                }\n            });\n            startPolling(queries);\n        });\n    }\n\n    function loadExportJobs() {\n        return ExportJobEndpoint.queryFresh({user: 'me', max_expiration: Math.round((new Date()).getTime() / 1000)}).$promise;\n    }\n\n    function startPolling(queries) {\n        var timer,\n            nextQuery = [];\n        timer = $timeout(function () {\n            $q.all(queries).then(function (response) {\n                _.each(response, function (job) {\n                    if (job.status === 'SUCCESS') {\n                        // when job is successful, we stop the polling...\n                        $rootScope.$broadcast('event:export_job:stopped');\n                        if (job.send_to_browser) {\n                            // ..and download the file\n                            downloadFile(job.url);\n                        } else if (job.send_to_hdx) {\n                            loadingStatus(false, false, job);\n                        }\n\n                        updateExportJobsList(job);\n                    } else if (job.status === 'FAILED') {\n                        // when job is failed, we stop the polling...\n                        $rootScope.$broadcast('event:export_job:stopped');\n                        // ..and notify user that it has failed\n                        var error_message = 'Export job has failed.';\n                        loadingStatus(false, error_message);\n                        updateExportJobsList(job);\n                    } else {\n                        // add the job to the poll until job is done\n                        nextQuery.push(ExportJobEndpoint.getFresh({id: job.id}));\n                    }\n                });\n                // if there are pending jobs, we poll for them again\n                if (nextQuery.length > 0) {\n                    startPolling(nextQuery);\n                }\n            }, function (err) {\n                    // if there is an error while exporting we stop the polling\n                    $rootScope.$broadcast('event:export_job:stopped');\n                    // and notify the user\n                    Notify.apiErrors(err);\n                }\n            );\n        }, CONST.EXPORT_POLLING_INTERVAL);\n        $rootScope.$on('event:authentication:logout:succeeded', function () {\n            $timeout.cancel(timer);\n        });\n    }\n\n    function updateExportJobsList(job) {\n        var _exportJobs = getExportJobs();\n        const foundJobIndex = _.findIndex(_exportJobs, (_job) => {\n            return _job.id === job.id;\n        });\n\n        if (foundJobIndex >= 0) {\n            _exportJobs[foundJobIndex] = job;\n        } else {\n            _exportJobs.push(processJobFields(job));\n        }\n        _exportJobs = processExportJobs(_exportJobs);\n        setExportJobs(_exportJobs);\n        $rootScope.$broadcast('exportJobs:updated', _exportJobs);\n    }\n\n    function cancelExport(jobId) {\n        ExportJobEndpoint.delete({id: jobId});\n        $rootScope.$broadcast('event:export_job:stopped');\n        Notify.notify('<p translate=\"notify.export.canceled_job\"></p>');\n    }\n\n    function downloadFile(downloadUrl) {\n        var URL = $window.URL || $window.webkitURL;\n        // Create anchor link\n        var anchor = angular.element('<a/>');\n        anchor.attr({\n            href: downloadUrl\n        });\n        // download file\n        angular.element(document.body).append(anchor);\n        anchor[0].click();\n        anchor[0].remove();\n        // we notify the user\n        loadingStatus(false);\n\n        // TODO: Question, is below needed? Its from the old code but I am not sure what it does?\n        $timeout(function () {\n            URL.revokeObjectURL(downloadUrl);\n        }, 100); // cleanup\n    }\n\n    function loadingStatus(status, err, job) {\n        var message, // holds the message to the user\n            action, // holds info for the action-button\n            icon, // holds info about icon to use in the notification\n            loading; // show loading-slider or not\n\n        if (err) {\n            Notify.apiErrors(err);\n        } else {\n            if (status === true) {\n                message = '<p translate=\"notify.export.in_progress\"> ';\n                action = {\n                    callback: cancelExport,\n                    text: 'notify.export.cancel_export',\n                    actionClass: 'button-destructive',\n                    callbackArg: job.id\n                };\n                icon = 'ellipses';\n                loading = true;\n            } else {\n\n                message = job && job.send_to_hdx ? '<p translate=\"notify.export.upload_complete\"></p>' : '<p translate=\"notify.export.complete\"></p>';\n                icon = 'thumb-up';\n                loading = false;\n            }\n            Notify.notifyAction(message, null, loading, icon, 'circle-icon confirmation', action);\n        }\n    }\n\n    function processJobFields(job) {\n        if (job.status) {\n            /**\n             * only chhange the job.url_expiration if its a number or empty,\n             * to avoid \"invalid date\" from multiple conversions\n             */\n\n            if (!job.url_expiration) {\n                job.url_expiration = '';\n            } else if (_.isNumber(job.url_expiration)) {\n                job.url_expiration = new Date(job.url_expiration * 1000).toLocaleString();\n            }\n            // keep the original timestamp for sorting\n            job.created_timestamp = job.created_timestamp ? job.created_timestamp : job.created;\n            job.created = new Date(job.created).toLocaleString();\n            job.status = job.status.toLowerCase();\n        }\n        return job;\n    }\n\n    function processExportJobs(jobs) {\n        let _jobs = _.filter(_.map(jobs, (job) => {\n            return processJobFields(job);\n        }));\n        _jobs = _.sortBy(jobs, (job) => {\n            return job.created_timestamp;\n        }).reverse();\n        return _jobs;\n    }\n\n    function getExportJobs() {\n        return exportJobs;\n    }\n\n    function setExportJobs(_exportJobs) {\n        exportJobs = _exportJobs;\n    }\n\n    return {\n        startExport: startExport,\n        loadExportJob: loadExportJob,\n        loadExportJobs: loadExportJobs,\n        processExportJobs: processExportJobs,\n        setExportJobs: setExportJobs,\n        getExportJobs: getExportJobs,\n        loadingStatus: loadingStatus\n    };\n}\n","module.exports = HxlExport;\n\nHxlExport.$inject = ['$rootScope', 'HxlTagEndpoint', 'FormEndpoint', 'FormAttributeEndpoint', '_'];\n\nfunction HxlExport($rootScope, HxlTagEndpoint, FormEndpoint, FormAttributeEndpoint, _) {\n\n    function getFormsWithTags() {\n        return getTags();\n    }\n\n    function getTags() {\n        return HxlTagEndpoint.get().$promise.then((tags)=> {\n            return getForms(tags.results);\n        });\n    }\n\n    function getForms(tags) {\n        //  requesting forms\n        return FormEndpoint.queryFresh({targeted_survey: false}).$promise.then(function (response) {\n            return attachAttributes(response, tags);\n        });\n    }\n\n    function attachAttributes(forms, tags) {\n        // requesting attributes and attaches them to the correct form\n        return _.each(forms, function (form) {\n            return FormAttributeEndpoint.query({formId: form.id}).$promise.then(function (response) {\n                form.attributes = response;\n                return attachTagsToAttributes(form, tags);\n            });\n        });\n    }\n\n    function attachTagsToAttributes(form, tags) {\n        // attaching hxl-tags to each attribute\n        _.each(form.attributes, (attribute) => {\n            attribute.tags = [];\n            _.each(tags, (tag) => {\n                _.each(tag.form_attribute_types, (type) => {\n                        if (type.form_attribute_type === attribute.type) {\n                            attribute.tags.push(tag);\n                        }\n                    });\n            });\n        });\n        return form;\n    }\n    return { getFormsWithTags };\n}\n","module.exports = DataImport;\n\nDataImport.$inject = [\n    '$rootScope',\n    'DataImportEndpoint',\n    'Notify',\n    '$window',\n    '$timeout',\n    '$interval',\n    'CONST',\n    '$q',\n    '_',\n    'ImportNotify',\n    'CollectionEndpoint',\n    'moment'\n];\nfunction DataImport(\n    $rootScope,\n    DataImportEndpoint,\n    Notify,\n    $window,\n    $timeout,\n    $interval,\n    CONST,\n    $q,\n    _,\n    ImportNotify,\n    CollectionEndpoint,\n    moment\n) {\n    var importJobs = [];\n\n    function startImport(job) {\n        startPolling([DataImportEndpoint.getFresh({id: job.id}).$promise]);\n    }\n\n    function loadImportJob() {\n        var queries = [];\n        DataImportEndpoint.queryFresh().$promise.then(function (response) {\n            _.each(response, function (job) {\n                if (job.status !== 'SUCCESS' && job.status !== 'FAILED') {\n                    queries.push(DataImportEndpoint.getFresh({id: job.id}).$promise);\n                }\n            });\n            if (queries.length) {\n                startPolling(queries);\n            }\n        });\n    }\n\n    function loadImportJobs() {\n        return DataImportEndpoint.queryFresh().$promise;\n    }\n\n    function startPolling(queries) {\n        var timer,\n            nextQuery = [];\n        timer = $timeout(function () {\n            $q.all(queries).then(function (response) {\n                _.each(response, function (job) {\n                    if (job.status === 'SUCCESS') {\n                        var processed = job.processed,\n                            collectionId = job.collection_id,\n                            errors = job.errors;\n\n                        ImportNotify.importComplete(\n                        {\n                            processed: processed,\n                            errors: errors,\n                            collectionId: collectionId,\n                            filename: job.filename\n                        });\n\n                        $rootScope.$emit('event:import:complete', {filename: job.filename, collectionId: collectionId});\n\n                        updateImportJobsList(job);\n                    } else if (job.status === 'FAILED') {\n                        // when job is failed, we stop the polling...\n                        $rootScope.$broadcast('event:import_job:stopped');\n                        // ..and notify user that it has failed\n                        var error_message = 'import job has failed.';\n                        loadingStatus(false, error_message);\n                        updateImportJobsList(job);\n                    } else {\n                        // add the job to the poll until job is done\n                        nextQuery.push(DataImportEndpoint.getFresh({id: job.id}).$promise);\n                    }\n                });\n                // if there are pending jobs, we poll for them again\n                if (nextQuery.length > 0) {\n                    startPolling(nextQuery);\n                }\n            }, function (err) {\n                    // if there is an error while importing we stop the polling\n                    $rootScope.$broadcast('event:import_job:stopped');\n                    // and notify the user\n                    Notify.apiErrors(err);\n                }\n            );\n        }, CONST.EXPORT_POLLING_INTERVAL);\n        $rootScope.$on('event:authentication:logout:succeeded', function () {\n            $timeout.cancel(timer);\n        });\n    }\n\n    function updateImportJobsList(job) {\n        var _importJobs = getImportJobs();\n        const foundJobIndex = _.findIndex(_importJobs, (_job) => {\n            return _job.id === job.id;\n        });\n\n        if (foundJobIndex >= 0) {\n            _importJobs[foundJobIndex] = job;\n        } else {\n            _importJobs.push(processJobFields(job));\n        }\n        _importJobs = processImportJobs(_importJobs);\n        setImportJobs(_importJobs);\n        $rootScope.$broadcast('importJobs:updated', _importJobs);\n    }\n\n    function loadingStatus(status, err, job) {\n        // var message, // holds the message to the user\n        //     action, // holds info for the action-button\n        //     icon, // holds info about icon to use in the notification\n        //     loading; // show loading-slider or not\n\n        // if (err) {\n        //     Notify.apiErrors(err);\n        // } else {\n        //     if (status === true) {\n        //         message = '<p translate=\"notify.import.in_progress\">';\n        //         action = {\n        //             callback: cancelimport,\n        //             text: 'notify.import.cancel_import',\n        //             actionClass: 'button-destructive',\n        //             callbackArg: job.id\n        //         };\n        //         icon = 'ellipses';\n        //         loading = true;\n        //     } else {\n        //         message = '<p translate=\"notify.import.complete\"></p>';\n        //         icon = 'thumb-up';\n        //         loading = false;\n        //     }\n\n        //     Notify.notifyAction(message, null, loading, icon, 'circle-icon confirmation', action);\n        // }\n    }\n\n    function processJobFields(job) {\n        if (job.status) {\n            job.status = job.status.toLowerCase();\n        }\n        return job;\n    }\n\n    function processImportJobs(jobs) {\n        let _jobs = _.filter(_.map(jobs, (job) => {\n            return processJobFields(job);\n        }));\n        _jobs = _.sortBy(jobs, (job) => {\n            return job.created_timestamp;\n        }).reverse();\n        return _jobs;\n    }\n\n    function getImportJobs() {\n        return importJobs;\n    }\n\n    function setImportJobs(_importJobs) {\n        importJobs = _importJobs;\n    }\n\n    return {\n        startImport: startImport,\n        loadImportJob: loadImportJob,\n        loadImportJobs: loadImportJobs,\n        processImportJobs: processImportJobs,\n        setImportJobs: setImportJobs,\n        getImportJobs: getImportJobs\n    };\n}\n","module.exports = [\n    'Verifier',\n    'Notify',\n    '$rootScope',\n    'Util',\nfunction (\n    Verifier,\n    Notify,\n    $rootScope,\n    Util\n) {\n    return {\n        debugModeCheck: function () {\n                Verifier.checkDebugMode(Util.apiUrl('/verifier/db'))\n                    .then(function (result) {\n                        if (result) {\n                            Notify.notifyPermanent(`You have debug-mode switched on. If you are an admin of this deployment, \n                            we recommend you disable this check and NOT leaving it enabled in the API. \n                        You may disable the check by running the \"composer installdebug:disable\" command in the API folder.`);\n                        }\n                    });\n            }\n    };\n}\n];\n\n","/**\n * Ushahidi Angular Role Selector directive\n * Drop in directive for managing roles addition for users\n * and posts\n */\n\nmodule.exports = [\nfunction (\n) {\n    var controller = [\n        '$scope',\n        '$rootScope',\n        '$translate',\n        'Notify',\n        'RoleEndpoint',\n        '_',\n        function (\n            $scope,\n            $rootScope,\n            $translate,\n            Notify,\n            RoleEndpoint,\n            _\n        ) {\n            $scope.showRoles = !!$scope.post.published_to.length;\n\n            $scope.canSeeThis = function () {\n                if ($scope.post.published_to && $scope.post.published_to.length) {\n                    return _.map($scope.post.published_to, function (role) {\n                        return $scope.roles[role].display_name;\n                    }).join(', ');\n                } else if ($scope.post.status === 'draft') {\n                    return $translate.instant('post.just_you');\n                } else {\n                    return $translate.instant('post.everyone');\n                }\n            };\n\n            RoleEndpoint.query().$promise.then(function (roles) {\n                $scope.roles = _.indexBy(roles, 'name');\n            });\n\n            $scope.checkIfAllSelected = function () {\n                return ($scope.roles.length === $scope.post.published_to.length);\n            };\n\n            $scope.toggleRole = function (role) {\n                if (role === 'draft' || role === '') {\n                    $scope.post.published_to = [];\n                    $scope.showRoles = false;\n                } else if ($scope.checkIfAllSelected()) {\n                    // All check boxes selected, therefore publish to everyone\n                    $scope.post.published_to = [];\n                    $scope.showRoles = false;\n                }\n\n                $scope.post.status = role === 'draft' ? role : 'published';\n            };\n\n            $scope.toggleRolesView = function () {\n                $scope.showRoles = true;\n            };\n        }];\n    return {\n        restrict: 'E',\n        template: require('./publish-selector.html'),\n        scope: {\n            post: '='\n        },\n        controller: controller\n    };\n}];\n","module.exports = \" <fieldset dropdown auto-close=\\\"outsideClick\\\" class=\\\"custom-fieldset init\\\">\\n    <legend data-toggle=\\\"dropdown-menu\\\" class=\\\"dropdown-trigger init\\\" dropdown-toggle>\\n      <span>\\n        <span class=\\\"custom-fieldset-value\\\">\\n            {{canSeeThis()}}\\n        </span>\\n        <span translate=\\\"post.can_see_this\\\">\\n          can see this\\n        </span>\\n      </span>\\n      <svg class=\\\"iconic chevron\\\">\\n          <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\">\\n      </svg>\\n    </legend>\\n    <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n        <div class=\\\"form-fieldgroup\\\" dropdown>\\n            <div class=\\\"form-field radio\\\">\\n                <input\\n                    name=\\\"{{post.id}}\\\"\\n                    id=\\\"{{post.id}}_draft\\\"\\n                    value=\\\"draft\\\"\\n                    type=\\\"radio\\\"\\n                    ng-checked=\\\"post.status==='draft'\\\"\\n                    ng-click=\\\"toggleRole('draft')\\\">\\n                <label for=\\\"{{post.id}}_draft\\\" translate=\\\"post.just_you\\\">Just you</label>\\n            </div>\\n\\n            <div class=\\\"form-field radio\\\">\\n                <input\\n                    name=\\\"{{post.id}}\\\"\\n                    id=\\\"{{post.id}}_everyone\\\"\\n                    value=\\\"\\\"\\n                    type=\\\"radio\\\"\\n                    ng-checked=\\\"post.status==='published' && post.published_to.length === 0\\\"\\n                    ng-click=\\\"toggleRole('')\\\">\\n                <label for=\\\"{{post.id}}_everyone\\\" translate=\\\"post.everyone\\\">Everyone</label>\\n            </div>\\n            <div class=\\\"form-field radio\\\">\\n              <input\\n                  name=\\\"{{post.id}}\\\"\\n                  id=\\\"{{post.id}}_roles\\\"\\n                  auto-close=\\\"disabled\\\"\\n                  ng-checked=\\\"post.published_to.length\\\"\\n                  value=\\\"roles\\\"\\n                  type=\\\"radio\\\" ng-click=\\\"toggleRolesView()\\\">\\n                <label for=\\\"{{post.id}}_roles\\\" translate=\\\"post.specific_roles\\\">Specific roles...</label>\\n                <div class=\\\"form-fieldgroup\\\" dropdown-menu ng-show=\\\"showRoles\\\">\\n                    <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"role in roles\\\">\\n                        <input\\n                            id=\\\"{{role.id}}\\\"\\n                            type=\\\"checkbox\\\"\\n                            checklist-model=\\\"post.published_to\\\"\\n                            checklist-value=\\\"role.name\\\"\\n                            ng-click=\\\"toggleRole(role.name)\\\">\\n                        <label for=\\\"{{role.id}}\\\">{{role.display_name}}</label>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</fieldset>\\n\";","/**\n * Ushahidi Listing Toolbar directive\n * Drop in directive for managing listing toolbar operations\n * Options are: select all, deselect all, delete, set visibility, add to collection\n */\n\nmodule.exports = [\nfunction (\n) {\n    var controller = [\n        '$scope',\n        '$rootScope',\n        '$translate',\n        '_',\n        function (\n            $scope,\n            $rootScope,\n            $translate,\n            _\n        ) {\n\n            $scope.selectAll = function () {\n                // Add all entities to the array, but don't\n                // break references that already refer to this array\n                Array.prototype.splice.apply(\n                    $scope.selectedSet,\n                    [0, $scope.selectedSet.length].concat(_.pluck($scope.entities, 'id'))\n                );\n            };\n\n            $scope.deselectAll = function () {\n                // Empty the array, but don't break references that already refer to this array\n                $scope.selectedSet.splice(0);\n            };\n\n        }];\n    return {\n        restrict: 'E',\n        template: require('./list-toolbar.html'),\n        replace: true,\n        transclude: true,\n        scope: {\n            entities: '=',\n            selectedSet: '='\n        },\n        controller: controller\n    };\n}];\n","module.exports = \"<div class=\\\"listing-toolbar\\\">\\n    <div class=\\\"listing-toolbar-summary\\\">\\n        <strong translate=\\\"nav.selected_items\\\" translate-values=\\\"{ selectedItems : selectedSet.length }\\\"></strong>\\n        <button class=\\\"button-link\\\" ng-click=\\\"deselectAll()\\\" translate=\\\"nav.deselect\\\">Deselect</button>\\n        <button class=\\\"button-link\\\" ng-click=\\\"selectAll()\\\" translate=\\\"nav.select_all\\\">Select all</button>\\n    </div>\\n\\n    <div class=\\\"listing-toolbar-actions\\\">\\n        <ng-transclude></ng-transclude> \\n    </div>\\n</div>\\n\";","/**\n * Ushahidi Angular Icon Pocker directive\n * Based on the Angular Bootstrap Icon Picker directive\n */\n\nmodule.exports = [\n    'IconManager',\nfunction (\n    IconManager\n) {\n    return {\n        restrict: 'E',\n        template: require('./iconpicker.html'),\n        replace: true,\n        scope: {\n            model: '=?ngModel',\n            iconLibName: '='\n        },\n\n        link: function ($scope, $element, $attrs) {\n            $scope.iconSet = IconManager.getIconSetArray($attrs.iconLibName);\n\n            $scope.setIcon = function (icon) {\n                $scope.model = icon;\n            };\n        }\n    };\n}];\n\n","module.exports = \"<span dropdown>\\n    <button\\n        dropdown-toggle\\n        type=\\\"button\\\"\\n        class=\\\"button-secondary dropdown toggle-content-trigger\\\"\\n    >\\n        <span class={{model}}></span>\\n    </button>\\n    <ul class=\\\"dropdown-menu init toggle-content list-unstyled\\\" dropdown-menu>\\n        <li ng-repeat=\\\"icon in iconSet\\\" class=\\\"inline\\\">\\n              <button type=\\\"button\\\" class=\\\"button-secondary inline\\\" ng-click=\\\"setIcon(icon)\\\">\\n                  <span class=\\\"{{ icon }}\\\"></span>\\n              </button>\\n        </li>\\n    </ul>\\n</span>\\n\";","/**\n* Ushahidi Angular Color Picker directive\n* Drop in directive for color picking\n*/\n\nmodule.exports = [\n    function () {\n        var controller = [\n            '$scope',\n            '$translate',\n            function (\n                $scope,\n                $translate\n            ) {\n                // Set default color\n                $scope.color = '#eee';\n                // Update local color when inbound color is changed\n                $scope.$watch('colorContainer.color', function () {\n                    if ($scope.colorContainer.color) {\n                        $scope.color = $scope.colorContainer.color.replace('#', '');\n                    }\n                });\n\n                $scope.setColor = function (color) {\n                    $scope.colorContainer.color = color.indexOf('#') > -1 ? color : '#' + color;\n                };\n            }\n        ];\n        return {\n            restrict: 'E',\n            replace: true,\n            template: require('./color-picker.html'),\n            scope: {\n                colorContainer: '='\n            },\n            controller: controller\n        };\n    }\n];\n","module.exports = \"<fieldset class=\\\"custom-fieldset init\\\" data-fieldset-type=\\\"color\\\" dropdown auto-close=\\\"outsideClick\\\">\\n\\n    <legend class=\\\"dropdown-trigger init active\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n        <span class=\\\"swatch\\\" ng-style=\\\"{ backgroundColor: colorContainer.color}\\\"></span>\\n        <span class=\\\"legend-label\\\">Color</span>\\n        <svg class=\\\"iconic chevron\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n    </legend>\\n\\n    <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n        <div class=\\\"form-field\\\">\\n            <label translate>color_picker.hex_value</label>\\n            <input type=\\\"text\\\" data-input-type=\\\"color\\\" ng-change=\\\"setColor(color)\\\" ng-model=\\\"color\\\">\\n        </div>\\n\\n        <div class=\\\"form-field\\\">\\n            <button class=\\\"button-gamma\\\" data-button-type=\\\"color\\\" value=\\\"A51A1A\\\" style=\\\"border-top-color: #A51A1A;\\\" ng-click=\\\"setColor('#A51A1A')\\\" translate>color_picker.red</button>\\n            <button class=\\\"button-gamma\\\" data-button-type=\\\"color\\\" value=\\\"E69327\\\" style=\\\"border-top-color: #E69327;\\\" ng-click=\\\"setColor('#E69327')\\\" translate>color_picker.gold</button>\\n            <button class=\\\"button-gamma\\\" data-button-type=\\\"color\\\" value=\\\"2274B4\\\" style=\\\"border-top-color: #2274B4;\\\" ng-click=\\\"setColor('#2274B4')\\\" translate>color_picker.blue</button>\\n            <button class=\\\"button-gamma\\\" data-button-type=\\\"color\\\" value=\\\"5BAA00\\\" style=\\\"border-top-color: #5BAA00;\\\" ng-click=\\\"setColor('#5BAA00')\\\" translate>color_picker.green</button>\\n        </div>\\n    </div>\\n\\n</fieldset>\\n\";","/**\n * Ushahidi First Login Config\n */\n\nmodule.exports = [\n    '$q',\n    '$http',\n    '$rootScope',\n    'ConfigEndpoint',\n    '_',\n    'Notify',\n    'Util',\n    'Languages',\nfunction (\n    $q,\n    $http,\n    $rootScope,\n    ConfigEndpoint,\n    _,\n    Notify,\n    Util,\n    Languages\n) {\n    return {\n        restrict: 'E',\n        template: require('./first-time-config.html'),\n        scope: true,\n        link: function ($scope, $element, $attrs) {\n            $scope.modalOpen = false;\n            $scope.site = {};\n            $scope.saving_config = false;\n            $scope.step = 'customize';\n            $scope.fileContainer = {\n                file : null\n            };\n\n            // Load config, and open modal if first time login\n            var checkConfig = function () {\n                ConfigEndpoint.get({ id: 'site' }, function (site) {\n                    $scope.site = site;\n                    $scope.hasName = !!site.name;\n                    // Are we and admin, and is this the first login?\n                    if (_.contains(site.allowed_privileges, 'update') && site.first_login) {\n                        // .. then open the modal\n                        $scope.modalOpen = true;\n                    }\n                });\n            };\n\n            // If we're already logged in, check config immediately\n            if ($rootScope.loggedin) {\n                checkConfig();\n            }\n            // Otherwise, wait for a login event, then check config\n            $rootScope.$on('event:authentication:login:succeeded', function () {\n                checkConfig();\n            });\n\n            // Skip the customize step\n            $scope.skip = function () {\n                // Set the first login flag false, so we don't show this again\n                ConfigEndpoint.update({ id: 'site', first_login: false }, function () {\n                    $scope.step = 'first-post';\n                });\n            };\n            // Close the modal\n            $scope.closeModal = function () {\n                $scope.modalOpen = false;\n            };\n\n            $scope.clearHeader = function () {\n                $scope.site.image_header = null;\n            };\n\n            var updateSiteHeader = function () {\n                $rootScope.$broadcast('event:update:header');\n            };\n            var uploadHeaderImage = function () {\n                var dfd = $q.defer();\n\n                if ($scope.fileContainer.file) {\n                    var formData = new FormData();\n                    formData.append('file', $scope.fileContainer.file);\n\n                    $http.post(\n                        Util.apiUrl('/media'),\n                        formData,\n                        {\n                            headers: {\n                                'Content-Type': undefined\n                            }\n                        }\n                    ).then(function (response) {\n                        $scope.site.image_header = response.data.original_file_url;\n                        dfd.resolve();\n                    });\n                } else {\n                    dfd.resolve();\n                }\n\n                return dfd.promise;\n            };\n\n            $scope.updateConfig = function () {\n                $scope.saving_config = true;\n\n                // Set the first login flag false, so we don't show this again\n                $scope.site.first_login = false;\n\n                uploadHeaderImage().then(function () {\n                    ConfigEndpoint.saveCache($scope.site).$promise.then(function (result) {\n                        $scope.saving_config = false;\n                        $scope.step = 'first-post';\n                        updateSiteHeader();\n                    });\n                }, function (errorResponse) {\n                    Notify.apiErrors(errorResponse);\n                });\n            };\n        }\n    };\n}];\n\n","module.exports = \"<modal visible=\\\"modalOpen\\\" show-close-button=\\\"step == 'first-post'\\\" close-on-overlay-click=\\\"false\\\">\\n    <form ng-show=\\\"step == 'customize'\\\" name=\\\"form\\\">\\n        <h1 translate>settings.customize_your_new_deployment</h1>\\n\\n        <div ng-hide=\\\"hasName\\\">\\n            <label class=\\\"input-label\\\" for=\\\"site-settings-name\\\" ng-class=\\\"{ 'success': !form.name.$invalid && form.name.$dirty, 'error' : form.name.$invalid && form.name.$dirty }\\\" translate>settings.site_name</label>\\n            <input id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" ng-model=\\\"site.name\\\" ng-class=\\\"{'error': form.name.$invalid && form.name.$dirty}\\\" required>\\n            <p ng-repeat=\\\"(error, value) in form.name.$error\\\"\\n                ng-show=\\\"form.name.$dirty\\\"\\n                class=\\\"alert error\\\"\\n                translate=\\\"{{'settings.valid.name.' + error}}\\\"></p>\\n        </div>\\n\\n        <div class=\\\"divider white\\\"></div>\\n\\n        <label class=\\\"input-label\\\" for=\\\"site-settings-description\\\" translate>settings.site_description</label>\\n        <textarea id=\\\"site-settings-description\\\" type=\\\"text\\\"\\n            ng-model=\\\"site.description\\\" placeholder=\\\"{{'settings.site_description_placeholder' | translate}}\\\"></textarea>\\n\\n        <div class=\\\"divider white\\\"></div>\\n\\n        <!-- <label class=\\\"input-label\\\">Default View</label>\\n        <p class=\\\"small\\\">This is how your posts will be displayed by default. Don't worry, you can always change it later.</p>\\n        <div class=\\\"custom-select\\\">\\n            <select name=\\\"default-view\\\">\\n                <option value=\\\"1\\\">Map</option>\\n                <option value=\\\"2\\\">List</option>\\n                <option value=\\\"3\\\">Graph</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"divider white\\\"></div> -->\\n\\n        <label class=\\\"input-label\\\" for=\\\"appearance-header-image\\\" translate>settings.appearance_header_image</label>\\n        <p class=\\\"small\\\" translate>settings.appearance_header_image_instructions</p>\\n       <file-upload container=\\\"fileContainer\\\">\\n        </file-upload>\\n\\n        <div class=\\\"divider white\\\"></div>\\n\\n        <button class=\\\"save\\\" ng-click=\\\"updateConfig()\\\" ng-disabled=\\\"form.$invalid || isUnchanged(site) || saving_config\\\">\\n            <div class=\\\"loading\\\" ng-show=\\\"saving_config\\\"><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div></div>\\n            <span translate>settings.continue</span>\\n        </button>\\n        <a class=\\\"cta\\\" ng-click=\\\"skip()\\\" ng-show=\\\"hasName\\\" translate>settings.skip</a>\\n    </form>\\n    <div ng-show=\\\"step == 'first-post'\\\">\\n        <h3 class=\\\"edit\\\" translate>settings.add_first_post</h3>\\n        <div class=\\\"divider padded\\\"></div>\\n        <p translate>settings.add_first_post_subtitle</p>\\n        <a class=\\\"button button-create\\\" ui-sref=\\\"postCreate\\\" ng-click=\\\"closeModal()\\\">\\n            <span translate>settings.add_first_post</span>\\n        </a>\\n        <div class=\\\"divider padded\\\"></div>\\n        <p translate>settings.invite_people</p>\\n        <a class=\\\"button button-primary\\\" ui-sref=\\\"settings.users\\\" ng-click=\\\"closeModal()\\\">\\n            <span translate>settings.add_new_users</span>\\n        </a>\\n    </div>\\n</modal>\\n\";","module.exports = MainsheetContainer;\n\nMainsheetContainer.$inject = ['$rootScope', '$compile', 'MainsheetService'];\n\nfunction MainsheetContainer($rootScope, $compile, MainsheetService) {\n    return {\n        restrict: 'E',\n        scope: true,\n        template: require('./mainsheet-container.html'),\n        link: MainsheetContainerLink\n    };\n\n    function MainsheetContainerLink($scope, $element) {\n\n        $scope.closeMainsheet = closeMainsheet;\n        $scope.showMainsheet = false;\n        $scope.title = '';\n\n        var templateScope;\n\n        // Mainsheet content element\n        var mainsheetContent = $element.find('mainsheet-content');\n\n        // Bind to mainsheet service open/close events\n        MainsheetService.onOpen(openMainsheet, $scope);\n        MainsheetService.onClose(closeMainsheet, $scope);\n\n        function makeTemplateScope(scope) {\n            // If no scope was passed, create a child of our directive scope\n            if (!scope) {\n                // @todo should this just be $rootScope.$new() ??\n                return $scope.$new();\n            }\n            // If scope isn't actually a scope yet, make it into one\n            if (scope.constructor !== $rootScope.constructor) {\n                return angular.extend($rootScope.$new(), scope);\n            }\n            return scope.$new();\n        }\n\n        function openMainsheet(event, template, title, scope) {\n\n            // Clean up any previous mainsheet content\n            cleanUpMainsheet();\n\n            // Create new scope and keep it to destroy when done with the mainsheet\n            templateScope = makeTemplateScope(scope);\n\n            // Inject closeMainsheet function onto template scope\n            templateScope.closeMainsheet = closeMainsheet;\n\n            mainsheetContent.html(template);\n            $compile(mainsheetContent)(templateScope);\n\n            $scope.title = title;\n\n            $scope.showMainsheet = true;\n            MainsheetService.setState(true);\n        }\n\n        function closeMainsheet() {\n            $scope.showMainsheet = false;\n            MainsheetService.setState(false);\n            cleanUpMainsheet();\n        }\n\n        function cleanUpMainsheet() {\n            if (templateScope) {\n                templateScope.$destroy();\n            }\n            mainsheetContent.html('');\n        }\n    }\n}\n","module.exports = \"<div class=\\\"mainsheet init active\\\" ng-show=\\\"showMainsheet\\\" style=\\\"display: block; opacity: 1;\\\">\\n    <div class=\\\"mainsheet-window\\\">\\n        <h3 class=\\\"mainsheet-heading\\\" ng-if=\\\"title\\\">\\n            {{ title | translate }}\\n        </h3>\\n        <mainsheet-content></mainsheet-content>\\n    </div>\\n    <div class=\\\"mainsheet-overlay\\\" ng-click=\\\"closeMainsheet()\\\"></div>\\n</div>\\n\";","/**\n * Ushahidi Angular Modal directive\n * Based on the Angular Bootstrap Modal directive\n */\nmodule.exports = ModalContainer;\n\nModalContainer.$inject = ['$timeout', '$rootScope', '$compile', 'ModalService', 'SliderService'];\nfunction ModalContainer($timeout, $rootScope, $compile, ModalService, SliderService) {\n    return {\n        restrict: 'E',\n        template: require('./modal-container.html'),\n\n        scope: true,\n\n        link: ModalContainerLink\n    };\n\n    function ModalContainerLink($scope, $element) {\n        $scope.classVisible = false;\n        $scope.modalOffset = 0;\n        $scope.title = '';\n        $scope.icon = false;\n        $scope.closeOnOverlayClick = true; // Could move out of scope\n        $scope.showCloseButton = true;\n        // Callbacks\n        $scope.closeButtonClicked = closeButtonClicked;\n\n        var templateScope;\n        var iconPath = require('ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg');\n        // Modal content element\n        var modalContent = $element.find('modal-content');\n\n        // Bind to modal service open/close events\n        ModalService.onOpen(openModal, $scope);\n        ModalService.onClose(closeModal, $scope);\n\n        //var classChangePromise = null;\n        function makeTemplateScope(scope) {\n            // If no scope was passed, create a child of our directive scope\n            if (!scope) {\n                // @todo should this just be $rootScope.$new() ??\n                return $scope.$new();\n            }\n\n            // If scope isn't actually a scope yet, make it into one\n            if (scope.constructor !== $rootScope.constructor) {\n                return angular.extend($rootScope.$new(), scope);\n            }\n\n            return scope.$new();\n        }\n\n        function openModal(ev, template, title, icon, scope, closeOnOverlayClick, showCloseButton) {\n            // Clean up any previous modal content\n            cleanUpModal();\n            // Create new scope and keep it to destroy when done with the modal\n            templateScope = makeTemplateScope(scope);\n\n            // Inject closeModal function onto template scope\n            templateScope.closeModal = closeModal;\n\n            modalContent.html(template);\n            $compile(modalContent)(templateScope);\n\n            $scope.title = title;\n            $scope.icon = icon ? iconPath + '#' + icon : icon;\n\n            // If closeOnOverlayClick isn't passed, default to true\n            if (typeof closeOnOverlayClick === 'undefined') {\n                $scope.closeOnOverlayClick = true;\n            } else {\n                $scope.closeOnOverlayClick = closeOnOverlayClick;\n            }\n\n            // If showCloseButton isn't passed, default to true\n            if (typeof showCloseButton === 'undefined') {\n                $scope.showCloseButton = true;\n            } else {\n                $scope.showCloseButton = showCloseButton;\n            }\n\n            // @todo fade in\n            modalYPos();\n            $scope.classVisible = true;\n            ModalService.setState(true);\n            $rootScope.toggleModalVisible(true);\n\n            // if (classChangePromise) {\n            //     $timeout.cancel(classChangePromise);\n            // }\n        }\n\n        function closeModal() {\n            // @todo fade out\n\n            $scope.classVisible = false;\n            $rootScope.toggleModalVisible(false);\n            ModalService.setState(false);\n            cleanUpModal();\n\n            // if (classChangePromise) {\n            //     $timeout.cancel(classChangePromise);\n            // }\n\n            // classChangePromise = $timeout(function () {\n            //     $scope.classDetached = true;\n            // }, 400);\n        }\n\n        function cleanUpModal() {\n            if (templateScope) {\n                templateScope.$destroy();\n            }\n            modalContent.html('');\n        }\n\n        function closeButtonClicked(context) {\n            if (context === 'overlay' && $scope.closeOnOverlayClick !== true) {\n                return;\n            }\n            SliderService.close();\n            closeModal();\n        }\n\n        function modalYPos() {\n            // Set offset based on window position\n            // @todo move offset to a config param\n            var windowYpos = window.scrollY || document.documentElement.scrollTop || document.body.scrollTop;\n            $scope.modalOffset = (windowYpos + 40) + 'px';\n        }\n\n        // $scope.$on('$destroy', function (event) {\n        //     if (classChangePromise) {\n        //         $timeout.cancel(classChangePromise);\n        //     }\n        // });\n    }\n}\n","module.exports = \"<div ng-show=\\\"classVisible\\\" class=\\\"modal\\\" style=\\\"display: block;\\\">\\n    <div class=\\\"modal-window\\\" ng-style=\\\"{ top : modalOffset }\\\">\\n        <button class=\\\"button-beta button-flat modal-trigger modal-trigger-close\\\" ng-show=\\\"showCloseButton\\\" ng-click=\\\"closeButtonClicked()\\\">\\n            <svg class=\\\"iconic\\\">\\n                <!-- TODO: fix icon to be settable -->\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#x\\\"></use>\\n            </svg>\\n            <span class=\\\"hidden\\\" translate>modal.button.close</span>\\n        </button>\\n        <h3 class=\\\"modal-title\\\" ng-if=\\\"title\\\">\\n            <svg class=\\\"iconic\\\" ng-if=\\\"icon\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"{{ icon }}\\\"></use>\\n            </svg>\\n            <span class=\\\"label\\\">\\n                {{ title | translate }}\\n            </span>\\n        </h3>\\n        <modal-content></modal-content>\\n        <ush-slider inside-modal=\\\"true\\\"></ush-slider>\\n    </div>\\n    <div class=\\\"modal-overlay\\\" ng-click=\\\"closeButtonClicked('overlay')\\\"></div>\\n</div>\\n\";","module.exports = ModalBody;\n\nModalBody.$inject = ['$window'];\nfunction ModalBody($window) {\n    return {\n        restrict: 'AC',\n        link: ModalBodyLink\n    };\n\n    function ModalBodyLink($scope, $element) {\n        activate();\n\n        function activate() {\n            $element.css('max-height', modalBodyHeight());\n        }\n\n        angular.element($window).bind('resize', handleResize);\n        // Unbind on destroy\n        $scope.$on('$destroy', function (event) {\n            angular.element($window).unbind('resize', handleResize);\n        });\n\n        function modalBodyHeight() {\n            return $window.innerHeight * 0.66 + 'px';\n        }\n\n        function handleResize() {\n            activate();\n\n            // Manual $digest required as resize event\n            // is outside of angular\n            $scope.$digest();\n        }\n    }\n}\n","module.exports = LayoutClassDirective;\n\nLayoutClassDirective.$inject = [];\nfunction LayoutClassDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            layout: '@'\n        },\n        controller: LayoutClassController\n    };\n}\n\nLayoutClassController.$inject = ['$scope', '$rootScope', '$window', 'Util'];\nfunction LayoutClassController($scope, $rootScope, $window, Util) {\n    var isEmbed = ($window.self !== $window.top) ? true : false;\n    if (!isEmbed) {\n        $rootScope.setLayout('layout-' + $scope.layout);\n    } else {\n        // If we are in embed mode\n        // we must append the layout to the embed layout\n        $rootScope.setLayout('layout-embed layout-' + $scope.layout);\n    }\n}\n","module.exports = EmbedOnlyDirective;\n\nEmbedOnlyDirective.$inject = [];\nfunction EmbedOnlyDirective() {\n    return {\n        restrict: 'A',\n        controller: EmbedOnlyController\n    };\n}\n\nEmbedOnlyController.$inject = ['$scope', '$element', '$attrs', '$rootScope', '_', '$window'];\nfunction EmbedOnlyController($scope, $element, $attrs, $rootScope, _, $window) {\n    var globalEmbed = ($window.self !== $window.top) ? true : false;\n\n    if (globalEmbed && ($attrs.embedOnly === 'false')) {\n        $element.addClass('hidden');\n    } else if (!globalEmbed && ($attrs.embedOnly === 'true')) {\n        $element.addClass('hidden');\n    }\n}\n","module.exports = UshLogoDirective;\n\nUshLogoDirective.$inject = [];\nfunction UshLogoDirective() {\n    return {\n        restrict: 'E',\n        controller: UshLogoController,\n        replace: true,\n        template: require('./ush-logo.html')\n    };\n}\n\nUshLogoController.$inject = [];\nfunction UshLogoController() {\n}\n","module.exports = \"<a embed-only=\\\"true\\\" href=\\\"https://www.ushahidi.com\\\" class=\\\"ushahidi-bug\\\" target=\\\"_blank\\\">\\n  <ng-include include-replace src=\\\"'common/directives/mode-bar/ushahidi-logo.html'\\\"></ng-include>\\n  <span class=\\\"hidden\\\">Powered by Ushahidi</span>\\n</a>\\n\";","/**\n * Ushahidi Angular Filter System Master directive\n * Drop in directive master directive responsible for search\n * and selection of appropriate sub directive\n */\n\nmodule.exports = ['$timeout',\nfunction ($timeout) {\n    var link =\n        function (\n            $scope, $elem, $attrs, formControl\n        ) {\n            $scope.searchResultsVisible = false;\n            $scope.form = formControl;\n\n            $scope.applyFilters = function () {\n                $scope.searchResultsVisible = false;\n            };\n\n            $scope.showSearchResults = function () {\n                $scope.searchResultsVisible = true;\n            };\n\n            $scope.detectSubmit = function (event) {\n                event.stopPropagation();\n                if (event && event.keyCode === 13) {\n                    $scope.hideSearchResults();\n                } else {\n                    $scope.showSearchResults();\n                }\n            };\n\n            $scope.hideSearchResults = function () {\n                $scope.searchResultsVisible = false;\n            };\n\n            $scope.onClear = function () {\n                $scope.hideSearchResults();\n                $scope.form.q.$setViewValue(null);\n                $scope.model.q = null;\n            };\n        };\n\n    return {\n        restrict: 'E',\n        replace: true,\n        template: require('./filter-searchbar.html'),\n        scope: {\n            model: '=',\n            placeholderEntity: '='\n        },\n        link: link,\n        require: '?^form'\n    };\n}];\n","module.exports = \"<div class=\\\"searchbar-input\\\" dropdown auto-close=\\\"outsideClick\\\">\\n    <!-- Search input -->\\n    <div class=\\\"form-field\\\">\\n        <label class=\\\"hidden\\\" translate=\\\"toolbar.searchbar.search_entity\\\">Search</label>\\n        <div class=\\\"input-with-icon\\\">\\n            <input\\n                name=\\\"q\\\"\\n                type=\\\"search\\\"\\n                autocomplete=\\\"off\\\"\\n                placeholder=\\\"{{ 'toolbar.searchbar.search_entity' | translate:{ entity: placeholderText } }}\\\"\\n                ng-model=\\\"model.q\\\"\\n                ng-focus=\\\"showSearchResults()\\\"\\n                ng-keyup=\\\"detectSubmit($event)\\\"\\n                ng-value=\\\"model.q\\\"\\n            >\\n            <svg class=\\\"iconic\\\" ng-show=\\\"!form.q.$viewValue.length\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#magnifying-glass\\\"></use>\\n            </svg>\\n            <svg class=\\\"iconic\\\" ng-click=\\\"onClear()\\\" ng-show=\\\"form.q.$viewValue.length\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n            </svg>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"searchbar-results dropdown-menu\\\" ng-class=\\\"{active: (searchResultsVisible && form.q.$viewValue.length > 0) }\\\">\\n        <div class=\\\"form-field\\\">\\n            <button class=\\\"button-plain\\\" type=\\\"submit\\\" ng-click=\\\"applyFilters()\\\">\\n                <span class=\\\"button-label\\\">\\n                    <span translate-values=\\\"{ entity: entityType }\\\" translate>\\n                        toolbar.searchbar.search_all_entities_for\\n                    </span>\\n                    \\\"<em>{{ form.q.$viewValue }}</em>\\\"\\n                </span>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\n\";","/**\n * Ushahidi Angular Filter System role directive\n * Drop in directive responsible for role selection\n * for filtering\n */\n\nmodule.exports = [\nfunction (\n) {\n    var controller = [\n        '$scope',\n        '$rootScope',\n        '$translate',\n        'RoleEndpoint',\n        function (\n            $scope,\n            $rootScope,\n            $translate,\n            RoleEndpoint\n        ) {\n            RoleEndpoint.query().$promise.then(function (roles) {\n                $scope.roles = roles;\n            });\n        }];\n    return {\n        restrict: 'E',\n        replace: true,\n        template: require('./filter-role.html'),\n        scope: {\n            model: '='\n        },\n        controller: controller\n    };\n}];\n","module.exports = \"<fieldset>\\n    <label translate>app.roles</label>\\n    <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"role in roles\\\">\\n        <label>\\n            <input\\n                type=\\\"checkbox\\\"\\n                checklist-model=\\\"model\\\"\\n                checklist-value=\\\"role.name\\\"\\n                >\\n            {{role.display_name | translate}}\\n        </label>\\n    </div>\\n</fieldset>\\n\";","module.exports = OverflowToggleDirective;\n\nOverflowToggleDirective.$inject = ['$parse'];\nfunction OverflowToggleDirective($parse) {\n    return {\n        restrict: 'A',\n        link: OverflowToggleController\n    };\n\n    function OverflowToggleController($scope, $element, $attrs) {\n        var toggle = $element[0].querySelector('.form-field-toggle');\n        var hasOverflow = angular.bind({}, $parse($attrs.hasOverflow), $scope);\n\n        $scope.$watch(hasOverflow, function (hasOverflow) {\n            $element.toggleClass('has-overflow', hasOverflow);\n        });\n\n        angular.element(toggle).on('click', function ($event) {\n            $event.preventDefault();\n            hasOverflow() ? $element.toggleClass('show-overflow') : '';\n        });\n    }\n}\n\n","/**\n * Focus directive.\n * Use this to set focus on input fields that may otherwise not have focus when they become available.\n */\n\nmodule.exports = Focus;\n\nFocus.$inject = [\n    '$timeout'\n];\n\nfunction Focus($timeout) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            scope.$watch(attrs.focus, function (value) {\n                if (value) {\n                    $timeout(function () {\n                        element[0].focus();\n                    });\n                }\n            });\n        }\n    };\n}\n","module.exports = [\n    'Features',\n    'Authentication',\n    'Registration',\n    'ModalService',\n    '$rootScope',\n    'ConfigEndpoint',\n    'CollectionsService',\n    '$window',\nfunction (\n    Features,\n    Authentication,\n    Registration,\n    ModalService,\n    $rootScope,\n    ConfigEndpoint,\n    CollectionsService,\n    $window\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            currentUser: '='\n        },\n        template: require('./mode-bar.html'),\n        link: function ($scope, $element, $attrs) {\n            $scope.moreActive = false;\n            $scope.isActivityAvailable = false;\n            $scope.canRegister = false;\n\n            $scope.hasManageSettingsPermission = $rootScope.hasManageSettingsPermission;\n            $scope.showMore = showMore;\n            $scope.viewCollectionListing = CollectionsService.showCollectionList;\n            $scope.viewAccountSettings = viewAccountSettings;\n            $scope.viewSupportLinks = viewSupportLinks;\n            $scope.login = Authentication.openLogin;\n            $scope.logout = Authentication.logout;\n            $scope.register = Registration.openRegister;\n            $scope.intercomAppId = $window.ushahidi.intercomAppId;\n\n            activate();\n\n            function activate() {\n                $scope.$on('$locationChangeStart', handleRouteChange);\n\n                Features.loadFeatures().then(function () {\n                    $scope.isActivityAvailable = Features.isViewEnabled('activity');\n                });\n\n                ConfigEndpoint.get({id: 'site'}, function (site) {\n                    $scope.canRegister = !site.private;\n                });\n            }\n\n            // Show account settings\n            function viewAccountSettings() {\n                ModalService.openTemplate('<account-settings></account-settings>', '', false, false, true, true);\n            }\n\n            // Show support links\n            function viewSupportLinks() {\n                var scope = {\n                    intercomAppId: $scope.intercomAppId,\n                    loggedin: Authentication.getLoginStatus()\n                };\n                ModalService.openTemplate(require('./support-links.html'), '', false, scope, true, true);\n            }\n\n            // Add 'click' handler to toggle trigger\n            function showMore() {\n                $scope.moreActive = !$scope.moreActive;\n            }\n\n            function handleRouteChange() {\n                $scope.moreActive = false;\n            }\n        }\n    };\n}];\n","module.exports = \"<div class=\\\"mode-bar\\\" ng-class=\\\"{ active : moreActive }\\\">\\n    <!-- mode bar -->\\n    <!-- PL JS -->\\n    <nav>\\n        <!-- main menu -->\\n        <ul class=\\\"deployment-menu\\\">\\n            <li ui-sref-active=\\\"{ 'active' : 'posts.map' }\\\">\\n                <a ui-sref=\\\"posts.map.all\\\" ui-sref-opts=\\\"{reload:true}\\\" class=\\\"view-map\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#map-marker\\\"></use>\\n                    </svg>\\n                    <translate>views.map</translate>\\n                </a>\\n            </li>\\n\\n            <li ui-sref-active=\\\"active\\\">\\n                <a ui-sref=\\\"posts.data\\\" ui-sref-opts=\\\"{reload:true}\\\" class=\\\"view-data\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#list-rich\\\"></use>\\n                    </svg>\\n                    <translate>views.data</translate>\\n                </a>\\n            </li>\\n\\n            <li ng-if=\\\"isActivityAvailable || hasManageSettingsPermission()\\\" ui-sref-active=\\\"active\\\" data-message=\\\"customize\\\">\\n                <a ui-sref=\\\"activity\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#pulse\\\"></use>\\n                    </svg>\\n                    <translate>views.activity</translate>\\n                </a>\\n            </li>\\n\\n            <li>\\n                <a class=\\\"more-menu-trigger\\\" ng-class=\\\"{ active : moreActive }\\\" ng-click=\\\"showMore($event)\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#ellipses\\\"></use>\\n                    </svg>\\n                    <translate>nav.more</translate>\\n                </a>\\n                <ul>\\n                    <li data-message=\\\"customize\\\" ng-show=\\\"hasManageSettingsPermission()\\\" ui-sref-active=\\\"active\\\">\\n                        <a ui-sref=\\\"settings.list\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#cog\\\"></use>\\n                            </svg>\\n                            <translate>nav.settings</translate>\\n                        </a>\\n                    </li>\\n                </ul>\\n            </li>\\n        </ul>\\n        <!-- main menu -->\\n\\n        <ul class=\\\"account-menu\\\">\\n        <!-- user account menu -->\\n\\n            <li>\\n                <a href=\\\"\\\" ng-click=\\\"viewSupportLinks()\\\">\\n                    <ng-include src=\\\"'common/directives/mode-bar/ushahidi-logo.html'\\\"></ng-include>\\n                    <span class=\\\"label\\\" translate>app.support</span>\\n                </a>\\n            </li>\\n\\n            <li ng-show=\\\"currentUser\\\">\\n                <a ng-click=\\\"logout()\\\" data-modal=\\\"login\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#account-logout\\\"></use>\\n                    </svg>\\n                    <span class=\\\"label\\\" translate=\\\"nav.logout\\\">Log out</span>\\n                </a>\\n            </li>\\n\\n            <li ng-show=\\\"currentUser\\\">\\n                <a ng-click=\\\"viewAccountSettings()\\\">\\n                    <img class=\\\"avatar\\\" ng-src=\\\"https://www.gravatar.com/avatar/{{ currentUser.gravatar || '00000000000000000000000000000000' }}?d=retro\\\" alt=\\\"{{ currentUser.realname }}\\\"/>\\n                    <span class=\\\"label\\\">{{currentUser.realname || currentUser.email}}</span>\\n                </a>\\n            </li>\\n\\n            <li ng-show=\\\"!currentUser && canRegister\\\">\\n                <a ng-click=\\\"register()\\\" data-modal=\\\"signup\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#person\\\"></use>\\n                    </svg>\\n                    <translate translate=\\\"nav.register\\\">Sign up</translate>\\n                </a>\\n            </li>\\n\\n            <li ng-hide=\\\"currentUser\\\">\\n                <a ng-click=\\\"login()\\\" data-modal=\\\"login\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#account-login\\\"></use>\\n                    </svg>\\n                    <translate translate=\\\"nav.login\\\">Log in</translate>\\n                </a>\\n            </li>\\n\\n            <li>\\n                <a ng-click=\\\"viewCollectionListing()\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#grid-three-up\\\"></use>\\n                    </svg>\\n                    <span class=\\\"label\\\" translate>nav.collections</span>\\n                </a>\\n            </li>\\n        <!-- user account menu -->\\n        </ul>\\n\\n    </nav>\\n    <!-- PL JS -->\\n    <!-- mode bar -->\\n</div>\\n\";","module.exports = \"<h3 class=\\\"modal-title\\\" translate>\\n  app.support\\n</h3>\\n\\n<div class=\\\"modal-body\\\">\\n  <dl>\\n    <dt class=\\\"list-item\\\"><a href=\\\"https://www.ushahidi.com/support\\\" target=\\\"_blank\\\" translate>app.documentation.title</a></dt>\\n    <dd translate>app.documentation.description</dd>\\n    <dt class=\\\"list-item\\\"><a href=\\\"https://github.com/ushahidi/platform/issues/new\\\" target=\\\"_blank\\\" translate>app.report_a_bug.title</a></dt>\\n    <dd translate>app.report_a_bug.description</dd>\\n    <dt class=\\\"list-item\\\"><a href=\\\"https://www.ushahidi.com/features\\\" target=\\\"_blank\\\" translate>app.features.title</a></dt>\\n    <dd translate>app.features.description</dd>\\n    <dt class=\\\"list-item\\\" ng-show=\\\"loggedin && intercomAppId\\\"><a id=\\\"intercom_custom_launcher\\\" href=\\\"mailto:{{intercomAppId}}@intercom-mail.com\\\" target=\\\"_blank\\\" translate>app.intercom.intercom</a></dt>\\n    <dd translate ng-show=\\\"loggedin && intercomAppId\\\">app.intercom.description</dd>\\n  </dl>\\n</div>\\n\\n\";","module.exports = FileUpload;\n\nfunction FileUpload() {\n    return {\n        restrict: 'E',\n        template: require('./file-upload.html'),\n        replace: true,\n        scope: {\n            container: '=',\n            model: '=',\n            validation: '='\n        },\n        controller: [\n            '$scope', '$attrs', 'Notify',\n            function (\n                $scope, $attrs, Notify\n            ) {\n                $scope.required = typeof $attrs.required !== 'undefined';\n                $scope.uploadFile = function ($event) {\n                    if (validateFile($event.target.files[0])) {\n                        $scope.container.file = $event.target.files[0];\n                        var reader = new FileReader();\n                        reader.onload = function () {\n                            var dataURL = reader.result;\n                            $scope.container.dataURI = dataURL;\n                            $scope.container.changed = true;\n                            $scope.container.deleted = false;\n                            $scope.model = 'changed';\n                            $scope.$apply();\n                        };\n                        reader.readAsDataURL($event.target.files[0]);\n                    } else {\n                        Notify.error('post.media.error_in_upload');\n                    }\n                };\n\n                function validateFile(container) {\n                    if ($scope.validation === 'image') {\n                        var mimeReg = /[\\/.](gif|jpg|jpeg|png)$/i;\n                        var mimeCheck = mimeReg.test(container.type);\n                        var sizeCheck = container.size < 1048576;\n                        return mimeCheck && sizeCheck;\n                    }\n                    return true;\n                }\n            }]\n    };\n}\n","module.exports = \"<input name=\\\"file\\\" type=\\\"file\\\" custom-on-change='uploadFile' ng-required=\\\"{{ required }}\\\" />\\n\";","module.exports = RoleSelectorDirective;\n\nRoleSelectorDirective.$inject = [];\n\nfunction RoleSelectorDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            model: '=',\n            title: '='\n        },\n        controller: RoleSelectorController,\n        template: require('./role-selector.html')\n    };\n}\nRoleSelectorController.$inject = ['$scope', 'RoleEndpoint', '$translate'];\n\nfunction RoleSelectorController($scope, RoleEndpoint, $translate) {\n    $scope.setEveryone = setEveryone;\n\n    activate();\n\n    function activate() {\n        // getting available roles from api\n        RoleEndpoint.query().$promise.then(function (roles) {\n            $scope.roles = roles;\n        });\n    }\n\n    // adding all available roles to model if user clicks 'Everyone'\n    function setEveryone() {\n        $scope.model.role = [];\n    }\n}\n","module.exports = \"    <!--// Who can add //-->\\n    <fieldset>\\n        <legend translate=\\\"{{title}}\\\"></legend>\\n        <div\\n            class=\\\"form-field radio icon-input\\\"\\n            ng-class=\\\"{ 'checked': !model.role.length }\\\"\\n        >\\n            <label for=\\\"add_everyone\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\"></use>\\n                </svg>\\n                <input\\n                    name=\\\"add\\\"\\n                    id=\\\"add_everyone\\\"\\n                    ng-value=\\\"true\\\"\\n                    checked=\\\"\\\"\\n                    type=\\\"radio\\\"\\n                    ng-model=\\\"everyone\\\"\\n                    ng-click=\\\"setEveryone()\\\"\\n                >\\n                <span class=\\\"label\\\" translate=\\\"nav.everyone\\\">Everyone</span>\\n            </label>\\n        </div>\\n\\n        <div\\n            class=\\\"form-field radio icon-input\\\"\\n            ng-class=\\\"{ 'checked': model.role.length }\\\"\\n        >\\n            <label for=\\\"add_roles\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#people\\\"></use>\\n                </svg>\\n                <input\\n                    class=\\\"init\\\"\\n                    name=\\\"add\\\"\\n                    id=\\\"add_roles\\\"\\n                    ng-value=\\\"false\\\"\\n                    ng-modaldata-fieldgroup-toggle=\\\"add_roles\\\"\\n                    type=\\\"radio\\\"\\n                    ng-model=\\\"everyone\\\"\\n                >\\n                <span translate=\\\"app.specific_roles\\\">Specific roles...</span>\\n            </label>\\n\\n            <div\\n                class=\\\"form-fieldgroup init\\\"\\n                data-fieldgroup-target=\\\"add_roles\\\"\\n                ng-class=\\\"{true:'', false:'active'}[everyone]\\\"\\n            >\\n\\n                <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"role in roles\\\">\\n                    <label>\\n                    <input\\n                        type=\\\"checkbox\\\"\\n                        checklist-model=\\\"model.role\\\"\\n                        checklist-value=\\\"role.name\\\"\\n                    >\\n                    {{role.display_name | translate}}\\n                    </label>\\n                </div>\\n            </div>\\n        </div>\\n    </fieldset>\\n\";","module.exports = AddCategoryDirective;\n\nAddCategoryDirective.$inject = [];\n\nfunction AddCategoryDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            formId: '=',\n            attribute: '=',\n            postValue: '=',\n            available: '='\n        },\n        controller: AddCategoryController,\n        template: require('./add-category.html')\n    };\n}\nAddCategoryController.$inject = ['$rootScope','$scope', 'TagEndpoint', 'FormAttributeEndpoint', 'Notify'];\n\nfunction AddCategoryController($rootScope, $scope, TagEndpoint, FormAttributeEndpoint, Notify) {\n    $scope.showInput = false;\n    $scope.categoryName = '';\n    $scope.category = {\n        type: 'category',\n        icon: 'tag',\n        color: '',\n        parent_id: null,\n        forms: [$scope.formId]\n    };\n\n    activate();\n\n    function activate() {\n        $scope.userCanAddCategory = $rootScope.hasPermission('Manage Settings');\n    }\n\n    $scope.showInputToggle = function () {\n        $scope.categoryName = '';\n        $scope.showInput = !$scope.showInput;\n    };\n\n\n    $scope.saveCategory = function ($event) {\n        $event.preventDefault();\n        $scope.category.tag = $scope.categoryName;\n        $scope.category.slug = $scope.categoryName;\n        TagEndpoint.saveCache($scope.category).$promise.then(function (response) {\n            if (response.id) {\n                // adding new tag to render it in checklist\n                $scope.attribute.options.push(response);\n                $scope.postValue.push(response.id);\n                // copying original attribute to be able to extract option.ids\n                var attribute = angular.copy($scope.attribute);\n                attribute.options = attribute.options.map(function (option) {\n                    return option.id;\n                });\n                //assigning values for saving\n                attribute.formId = $scope.formId;\n                FormAttributeEndpoint\n                    .saveCache(attribute).$promise.then(function (response) {\n                        // resetting input-value\n                        $scope.categoryName = '';\n                    });\n                Notify.notify('category added', {response: response});\n                $scope.available.push.apply($scope.available, response);\n            }\n\n        }, function (errorResponse) {\n            Notify.apiErrors(errorResponse);\n        });\n    };\n}\n","module.exports = \"<div class=\\\"form-field inline\\\" ng-class=\\\"{'hidden': !showInput}\\\">\\n    <label class=\\\"hidden\\\" translate=\\\"category.editor.name\\\">Category name</label>\\n        <input\\n            type=\\\"text\\\"\\n            placeholder=\\\"{{'category.editor.name' | translate}}\\\"\\n            style=\\\"width: 240px;\\\"\\n            ng-model=\\\"categoryName\\\"\\n        />\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"button-alpha button-flat\\\"\\n            ng-disabled=\\\"categoryName.length === 0\\\"\\n            ng-click=\\\"saveCategory($event);\\\"\\n        >\\n            <svg class=\\\"iconic\\\">\\n                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#check\\\"></use>\\n            </svg>\\n        <span class=\\\"hidden\\\" translate=\\\"app.add\\\">Add</span>\\n        </button>\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"button-beta button-flat\\\"\\n            ng-click=\\\"showInputToggle()\\\"\\n        >\\n            <svg class=\\\"iconic\\\">\\n                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n            </svg>\\n            <span class=\\\"hidden\\\" translate=\\\"category.delete\\\">Delete</span>\\n        </button>\\n</div>\\n\\n<div class=\\\"form-field init\\\" ng-click=\\\"showInputToggle()\\\" ng-if=\\\"userCanAddCategory && !showInput\\\">\\n    <a data-toggle=\\\"add-label\\\" translate=\\\"app.add_new_category\\\">+ Add new category</a>\\n</div>\\n\";","module.exports = CategorySelectorDirective;\n\nCategorySelectorDirective.$inject = [];\n\nfunction CategorySelectorDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            selected: '=',\n            enableParents: '=',\n            form: '=',\n            available: '='\n        },\n        controller: CategorySelectorController,\n        template: require('./category-selector.html')\n    };\n}\nCategorySelectorController.$inject = ['$scope', '_'];\n\nfunction CategorySelectorController($scope, _) {\n    $scope.selectAll = selectAll;\n    $scope.selectChild = selectChild;\n    $scope.selectParent = selectParent;\n    $scope.selectedParents = [];\n    $scope.disabledCategories = [];\n    $scope.changeCategories = changeCategories;\n\n    activate();\n    $scope.selectAllEnabled = function () {\n        if ($scope.enableParents) {\n            return $scope.selected.length === $scope.available.length;\n        } else {\n            return ($scope.selected.length + $scope.selectedParents.length) === $scope.available.length;\n        }\n    };\n\n    function activate() {\n        // remove default null value when creating a new post\n        if ($scope.selected[0] === null) {\n            $scope.selected = [];\n        }\n        $scope.categories = [];\n\n        $scope.categories = $scope.available;\n        // making sure no children are selected without their parents\n        $scope.changeCategories();\n    }\n\n    function selectAll() {\n        if ($scope.form) {\n            // if used in a form, add the ng-dirty-class to categories.\n            $scope.form.$setDirty();\n        }\n\n        if ($scope.selectAllEnabled()) {\n            $scope.selected.splice(0, $scope.selected.length);\n            $scope.selectedParents.splice(0, $scope.selectedParents.length);\n        } else {\n            _.each($scope.available, function (category) {\n                var isParentWithChildren = !category.parent_id && category.children.length > 0;\n                if (!_.contains($scope.selected, category.id) && !isParentWithChildren) {\n                    $scope.selected.push.apply($scope.selected, [category.id]);\n                } else if (isParentWithChildren && !_.contains($scope.selectedParents, category.id)) {\n                    $scope.selectedParents.push.apply($scope.selectedParents, [category.id]);\n                }\n            });\n        }\n    }\n\n    function selectChild(child) {\n        if ($scope.selected.includes(child.id)) {\n            $scope.selected = _.filter($scope.selected, function (id) {\n                return id !== child.id;\n            });\n        } else {\n            $scope.selected.push(child.id);\n            if (!$scope.selected.includes(child.parent.id)) {\n                $scope.selected.push(child.parent.id);\n            }\n        }\n    }\n\n    function selectParent(parent) {\n        if ($scope.selected.includes(parent.id)) {\n            $scope.selected = _.filter($scope.selected, function (id) {\n                return id !== parent.id;\n            });\n            if (parent.children && parent.children.length) {\n                _.each(parent.children, function (child) {\n                    $scope.selected = _.filter($scope.selected, function (id) {\n                        return id !== child.id;\n                    });\n                });\n            }\n        } else {\n            $scope.selected.push(parent.id);\n        }\n    }\n\n    function changeCategories() {\n        _.each($scope.categories, function (category) {\n            var selectedChildren = _.chain(category.children)\n                .pluck('id')\n                .intersection($scope.selected)\n                .value();\n            var parentIndexSelected = -1;\n            var isParentWithChildren = !category.parent_id && category.children.length > 0;\n            // If children are selected, add to disabled categories\n            if (selectedChildren.length > 0) {\n                $scope.disabledCategories[category.id] = true;\n                // ... and ensure this category is selected\n                if (!_.contains($scope.selectedParents, category.id)) {\n                    $scope.selectedParents.push.apply($scope.selectedParents, [category.id]);\n                }\n                if (!_.contains($scope.selected, category.id) && $scope.enableParents === true) {\n                    $scope.selected.push.apply($scope.selected, [category.id]);\n                }\n            } else {\n                var parentIndex = _.findIndex($scope.selectedParents, function (parentId) {\n                    return parentId === category.id;\n                });\n                parentIndexSelected = _.findIndex($scope.selected, function (parentId) {\n                    return parentId === category.id;\n                });\n                if (parentIndex >= 0) {\n                    $scope.selectedParents.splice(parentIndex, 1);\n                    if ($scope.enableParents === true) {\n                        $scope.selected.splice(parentIndexSelected, 1);\n                    }\n                }\n                if (isParentWithChildren) {\n                    $scope.disabledCategories[category.id] = true;\n                } else {\n                    $scope.disabledCategories[category.id] = false;\n                }\n            }\n\n            if ($scope.enableParents === false && isParentWithChildren) {\n                parentIndexSelected = _.findIndex($scope.selected, function (parentId) {\n                    return parentId === category.id;\n                });\n                if (parentIndexSelected >= 0) {\n                    $scope.selected.splice(parentIndexSelected, 1);\n                }\n            }\n        });\n\n    }\n}\n","module.exports = \"<div class=\\\"form-fieldgroup checkbox\\\" ng-if=\\\"categories.length > 0\\\" overflow-toggle has-overflow=\\\"categories.length > 2\\\">\\n    <div class=\\\"form-field checkbox\\\">\\n        <label>\\n            <input\\n                  type=\\\"checkbox\\\"\\n                  ng-checked=\\\"selectAllEnabled()\\\"\\n                  ng-click=\\\"selectAll()\\\"\\n            >\\n            <em><span translate=\\\"category.select_all\\\"></span></em>\\n        </label>\\n    </div>\\n    <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"(index, category) in categories\\\" ng-class=\\\"{ overflow : ($index > 1) }\\\" ng-if=\\\"category.parent_id === null\\\">\\n        <label>\\n            <input\\n                ng-show=\\\"category.children.length === 0 || enableParents === true\\\"\\n                type=\\\"checkbox\\\"\\n                checklist-value=\\\"category.id\\\"\\n                ng-disabled=\\\"disabledCategories[category.id]\\\"\\n                value=\\\"category.id\\\"\\n                checklist-model=\\\"selected\\\"\\n                checklist-change=\\\"changeCategories()\\\"\\n            >\\n            <input\\n                    ng-show=\\\"category.children.length > 0 && enableParents === false\\\"\\n                    type=\\\"checkbox\\\"\\n                    checklist-value=\\\"category.id\\\"\\n                    ng-disabled=\\\"true\\\"\\n                    value=\\\"category.id\\\"\\n                    checklist-model=\\\"selectedParents\\\"\\n            >\\n            <bdi>{{ ::category.tag }}</bdi>\\n        </label>\\n        <div class=\\\"form-field checkbox\\\" ng-if=\\\"category.children\\\" ng-repeat=\\\"child in category.children\\\">\\n            <label>\\n                <input\\n                    type=\\\"checkbox\\\"\\n                    checklist-model=\\\"selected\\\"\\n                    checklist-value=\\\"child.id\\\"\\n                    value=\\\"child.id\\\"\\n                    ng-selected=\\\"selected.indexOf(category.id) >-1\\\"\\n                    checklist-change=\\\"changeCategories()\\\"\\n                >\\n                <bdi>{{ ::child.tag }}</bdi>\\n        </label>\\n        </div>\\n    </div>\\n    <span class=\\\"form-field-toggle\\\">\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n        <span translate=\\\"nav.more\\\">More</span>\\n    </span>\\n  </div>\\n\";","module.exports = LanguageSwitchDirective;\n\nLanguageSwitchDirective.$inject = [];\n\nfunction LanguageSwitchDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            site: '=?'\n        },\n        controller: LanguageSwitchController,\n        template: require('./language-switch.html')\n    };\n}\nLanguageSwitchController.$inject = ['$scope', 'Languages', 'TranslationService', '$location'];\nfunction LanguageSwitchController($scope, Languages, TranslationService, $location) {\n    $scope.changeLanguage = changeLanguage;\n    $scope.$on('event:authentication:login:succeeded', TranslationService.setStartLanguage);\n    $scope.$on('event:authentication:logout:succeeded', TranslationService.setStartLanguage);\n    activate();\n\n    function activate() {\n        Languages.then(function (languages) {\n            $scope.languages = languages;\n        });\n    }\n\n    function changeLanguage(code) {\n        if ($location.path() !== '/settings/general') {\n            TranslationService.setLanguage(code);\n            TranslationService.translate(code);\n        }\n    }\n}\n\n","module.exports = \"\\t<div class=\\\"form-field select\\\">\\n\\t    <div class=\\\"custom-select\\\">\\n\\t        <select\\n                ng-model=\\\"site.language\\\"\\n                ng-options=\\\"lang.code as lang.name for lang in languages\\\"\\n                ng-change=\\\"changeLanguage(site.language)\\\"\\n            >\\n                <option value=\\\"\\\" translate=\\\"app.select_language\\\">Select language</option>\\n            </select>\\n\\t    </div>\\n\\t</div>\\n\";","module.exports = LoadingDotsDirective;\n\nLoadingDotsDirective.$inject = [];\n\nfunction LoadingDotsDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            buttonClass: '@',\n            label: '=',\n            disabled: '='\n        },\n        controller: LoadingDotsController,\n        template: require('./loading-dots.html')\n    };\n}\nLoadingDotsController.$inject = ['$scope'];\n\nfunction LoadingDotsController($scope) {\n}\n","module.exports = \" <button type=\\\"button\\\" ng-disabled=\\\"disabled\\\" ng-class=\\\"{{buttonClass}}\\\">\\n        <div class=\\\"loading\\\">\\n            <div class=\\\"line\\\"></div>\\n            <div class=\\\"line\\\"></div>\\n            <div class=\\\"line\\\"></div>\\n        </div>\\n        <span class=\\\"button-label\\\" translate>{{label}}</span>\\n</button>\";","module.exports = LoadingInterceptor;\n\nLoadingInterceptor.$inject = ['LoadingProgress', '$q', '$injector'];\n\nfunction LoadingInterceptor(LoadingProgress, $q, $injector) {\n    /* an interceptor that triggers loading-state in the beginning of\n    * a http-request and remove it when all requests are done */\n\n    return {\n        request: function (config) {\n            if (LoadingProgress.getLoadingState() !== true) {\n                LoadingProgress.setLoadingState(true);\n            }\n            // we want this to trigger isSaving everytime except when a lock-updates\n            if (config.method === 'PUT' && config.url.indexOf('lock') === -1) {\n                LoadingProgress.setSavingState(true);\n            }\n            return config;\n        },\n        response: function (response) {\n            var httpService = $injector.get('$http');\n            if (httpService.pendingRequests.length === 0) {\n                LoadingProgress.setLoadingState(false);\n                LoadingProgress.setSavingState(false);\n            }\n            return response || $q.when(response);\n        }\n    };\n}\n","module.exports = ['$httpProvider', function ($httpProvider) {\n        $httpProvider.interceptors.push('loading');\n    }];\n","module.exports = ['$translateProvider', function ($translateProvider) {\n    $translateProvider.useSanitizeValueStrategy('escaped');\n\n    $translateProvider.translations('en', require('../locales/en.json'));\n\n    $translateProvider.useStaticFilesLoader({\n        prefix: 'locales/',\n        suffix: '.json'\n    });\n\n    $translateProvider.preferredLanguage('en');\n    $translateProvider.fallbackLanguage('en');\n}];\n","module.exports = [\n    '$templateCache',\nfunction (\n    $templateCache\n) {\n    $templateCache.put('uib/template/pagination/pagination.html', require('./uib-pagination.html'));\n}];\n","module.exports = \"\\n<li ng-if=\\\"::boundaryLinks\\\" ng-class=\\\"{disabled: noPrevious()||ngDisabled}\\\" ng-click=\\\"selectPage(1, $event)\\\">\\n    <a ng-click=\\\"selectPage(1, $event)\\\">{{::getText('first')}}</a>\\n</li>\\n<li ng-if=\\\"::directionLinks\\\" ng-class=\\\"{disabled: noPrevious()||ngDisabled}\\\" class=\\\"prev\\\">\\n    <a ng-click=\\\"selectPage(page - 1, $event)\\\">\\n        <svg class=\\\"iconic\\\">\\n          <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-left\\\"></use>\\n        </svg>\\n        <span class=\\\"hidden\\\">Previous</span>\\n    </a>\\n</li>\\n<li>\\n    <ul class=\\\"page-numbers\\\">\\n        <li class=\\\"pg-number\\\" ng-repeat=\\\"page in pages track by $index\\\" ng-class=\\\"{active: page.active}\\\">\\n            <a ng-if=\\\"!page.active\\\" ng-click=\\\"selectPage(page.number, $event)\\\">\\n                {{page.text}}\\n            </a>\\n            <span ng-if=\\\"page.active\\\">\\n                {{page.text}}\\n            </span>\\n        </li>\\n    </ul>\\n</li>\\n<li ng-if=\\\"::directionLinks\\\" ng-class=\\\"{disabled: noNext()||ngDisabled}\\\" class=\\\"next\\\" >\\n    <a ng-click=\\\"selectPage(page + 1, $event)\\\">\\n        <svg class=\\\"iconic\\\">\\n          <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-right\\\"></use>\\n        </svg>\\n        <span class=\\\"hidden\\\">Next</span>\\n    </a>\\n</li>\\n<li ng-if=\\\"::boundaryLinks\\\" ng-class=\\\"{disabled: noNext()||ngDisabled}\\\">\\n    <a ng-click=\\\"selectPage(totalPages, $event)\\\">{{::getText('last')}}</a>\\n</li>\\n\";","module.exports = ['CacheFactoryProvider', function (CacheFactoryProvider) {\n    angular.extend(CacheFactoryProvider.defaults, {\n        maxAge: 15 * 60 * 1000, // 15 mins\n        cacheFlushInterval: 60 * 60 * 1000, // This cache will clear itself every hour\n        storageMode: 'localStorage',\n        storagePrefix: 'ush-caches.',\n        deleteOnExpire: 'aggressive'\n    });\n}];\n","module.exports = ['$stateProvider', '$urlMatcherFactoryProvider', function ($stateProvider, $urlMatcherFactoryProvider) {\n\n    $urlMatcherFactoryProvider.strictMode(false);\n\n    $stateProvider\n        .state(\n            {\n                name: 'login',\n                url: '/login',\n                controller: require('./auth/login.controller.js'),\n                template: ''\n            }\n        )\n        .state(\n            {\n                name: 'forbidden',\n                url: '/forbidden',\n                controller: require('./auth/forbidden.controller.js'),\n                template: require('./auth/forbidden.html')\n            }\n        )\n        .state(\n            {\n                name: 'register',\n                url: '/register',\n                controller: require('./auth/register.controller.js'),\n                template: ''\n            }\n        )\n        .state(\n            {\n                name: 'forgotpassword',\n                url: '/forgotpassword',\n                controller: require('./auth/password-reset.controller.js'),\n                template: ''\n            }\n        )\n        .state(\n            {\n                name: 'confirm',\n                url: '/forgotpassword/confirm',\n                controller: require('./auth/password-reset-confirm.controller.js'),\n                template: ''\n            }\n        )\n        .state(\n            {\n                name: 'confirm.token',\n                url: '/:token',\n                controller: require('./auth/password-reset-confirm.controller.js'),\n                template: ''\n            }\n        )\n        .state(\n            {\n                name: '404',\n                url: '/404',\n                controller: require('./auth/404.controller.js'),\n                template: require('./auth/404.html')\n            }\n        )\n        .state({\n            name: 'verifier',\n            url: '/verifier',\n            controller: require('./verifier/verifier.controller.js'),\n            template: require('./verifier/verifier.html')\n        })\n        ;\n}];\n","module.exports = LoginController;\n\nLoginController.$inject = ['Authentication','$location'];\nfunction LoginController(Authentication, $location) {\n    Authentication.openLogin();\n    $location.url('/');\n}\n","module.exports = [\n    '$scope',\nfunction (\n    $scope\n) {\n\n}];\n","module.exports = \"<main role=\\\"main\\\">\\n    <div class=\\\"main-col\\\">\\n        <h1 class=\\\"panel-title\\\" translate>nav.forbidden</h1>\\n\\n        <p translate>\\n            app.forbidden\\n        </p>\\n    </div>\\n</main>\\n\";","module.exports = RegisterController;\n\nRegisterController.$inject = ['Registration','$location'];\nfunction RegisterController(Registration, $location) {\n    Registration.openRegister();\n    $location.url('/');\n}\n","module.exports = [\n    'PasswordReset',\n    '$location',\nfunction (\n    PasswordReset,\n    $location\n) {\n    PasswordReset.openReset();\n    $location.url('/');\n}];\n","module.exports = [\n    '$scope',\nfunction (\n    $scope\n) {\n\n}];\n","module.exports = \"<main role=\\\"main\\\">\\n    <div class=\\\"main-col\\\">\\n        <h1 class=\\\"panel-title\\\" translate>nav.404</h1>\\n\\n        <p translate>\\n            app.404\\n        </p>\\n    </div>\\n</main>\";","module.exports = [\n    '$scope',\n    'CONST',\n    'Verifier',\n    function ($scope, CONST, Verifier) {\n        $scope.networkCheck = true;\n        $scope.envCheck = true;\n        $scope.endpointStatuses = [];\n        $scope.endpointStructureChecks = [];\n        $scope.transifexCheck = true;\n        $scope.oauthCheck = true;\n        $scope.dbConnection = true;\n        $scope.apiEnvs = true;\n        $scope.allDisabled = Verifier.isCheckDisabled(CONST, 'ALL');\n\n        function activate() {\n            if ($scope.allDisabled) {\n                return;\n            }\n            checkNetwork();\n            envCheck();\n            endpointStatusCheck();\n            endpointStructureCheck();\n            checkTransifex();\n            verifyOauth();\n            verifyDbConnection();\n            verifyAPIEnvs();\n        }\n\n        function checkNetwork() {\n            const verifyNetwork = Verifier.verifyNetwork(CONST);\n            if (!verifyNetwork) {\n                $scope.networkCheck = false;\n            } else {\n                verifyNetwork\n                .then(response => {\n                    $scope.networkCheck = response;\n                    $scope.$apply();\n                });\n            }\n        }\n\n        function envCheck() {\n            $scope.envCheck = Verifier.verifyEnv(CONST);\n        }\n\n        function endpointStatusCheck() {\n            const endpointStatusCheck = Verifier.verifyEndpointStatus(CONST);\n            if (!endpointStatusCheck) {\n                $scope.endpointStatuses = false;\n            } else {\n                endpointStatusCheck.forEach(response => {\n                    response.then(result => {\n                        $scope.endpointStatuses.push(result);\n                        $scope.$apply();\n                    });\n                });\n            }\n        }\n\n        function endpointStructureCheck() {\n            const endpointStructureCheck = Verifier.verifyEndpointStructure(CONST);\n            if (!endpointStructureCheck) {\n                $scope.endpointStructureChecks = false;\n            } else {\n                endpointStructureCheck.forEach(response => {\n                    response.then(result => {\n                        $scope.endpointStructureChecks.push(result);\n                        $scope.$apply();\n                    });\n                });\n            }\n        }\n\n        function checkTransifex() {\n            $scope.transifexCheck = Verifier.verifyTransifex(CONST);\n        }\n\n        function verifyOauth() {\n            const results = Verifier.verifyOauth(CONST);\n            if (!results) {\n                $scope.oauthCheck = false;\n            } else {\n                results.status.then(status => {\n                    $scope.oauthStatus = status;\n                    $scope.$apply();\n                });\n                results.structure.then(structure => {\n                    $scope.oauthStructure = structure;\n                    $scope.$apply();\n                });\n                results.token.then(token => {\n                    $scope.oauthToken = token;\n                    $scope.$apply();\n                });\n            }\n        }\n\n        function verifyDbConnection() {\n            Verifier.verifyDbConnection(CONST).then(dbCheck => {\n                if (dbCheck === 'DISABLED') {\n                    $scope.dbConnection = false;\n                } else {\n                    $scope.dbConnection = dbCheck;\n                    $scope.$apply();\n                }\n            });\n        }\n\n        function verifyAPIEnvs() {\n            Verifier.verifyAPIEnvs(CONST).then(apiEnvCheck => {\n                if (apiEnvCheck === 'DISABLED') {\n                    $scope.apiEnvs = false;\n                } else {\n                    $scope.apiEnvs = apiEnvCheck;\n                    $scope.$apply();\n                }\n            });\n        }\n        activate();\n    }\n];\n","module.exports = \"<div>\\n    <layout-class layout=\\\"b\\\"></layout-class>\\n    <main role=\\\"main\\\">\\n        <div class=\\\"main-col\\\">\\n                <div class=\\\"listing card init\\\" ng-if=\\\"allDisabled\\\">\\n                <strong>USH_DISABLE_CHECKS is set to ALL, all verification processes is turned off.</strong>\\n                <p>If you believe this is wrong, check the .env file for the variable USH_DISABLE_CHECKS.</p>\\n                </div>\\n            <div class=\\\"listing card init\\\" ng-if=\\\"!allDisabled\\\">\\n                <h1>Installer helper</h1>\\n                <p>Check the messages below to get hints while installing the Ushahidi-platform!</p>\\n                <div class=\\\"listing-item\\\"></div>\\n                <div class=\\\"listing-item\\\">\\n                    <h3 class=\\\"list-item-title\\\">Checking network...</h3>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"!networkCheck\\\">\\n                    <p>Check is disabled. If you think this is incorrect, please check USH_DISABLED_CHECKS in your .env-file.</p>\\n                </div>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"networkCheck\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <div class=\\\"listing-item-image\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use style=\\\"fill: #de0000\\\" ng-if=\\\"networkCheck.type === 'error'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"networkCheck.type === 'confirmation'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                <use style=\\\"fill: #FFC334\\\" ng-if=\\\"networkCheck.type === 'warning'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                        </div>\\n                        <strong class=\\\"list-item-secondary\\\" ng-if=\\\"networkCheck.url\\\">Status-result for {{networkCheck.url}}</strong>\\n                        <p ng-if=\\\"networkCheck.status\\\">The server responded with a {{networkCheck.status}}-status code</p>\\n                        <p class=\\\"class=\\\"list-item-secondary\\\" ng-repeat=\\\"message in networkCheck.messages\\\">{{message}}</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"listing-item\\\">\\n                <h3 class=\\\"list-item-title\\\">Checking endpoints...</h3>\\n                <h4 class=\\\"list-item-title\\\">Checking status for endpoints...</h4>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"!endpointStatuses\\\">\\n                        <p>Check for endpoint-status is disabled. If you think this is incorrect, please check USH_DISABLED_CHECKS in your .env-file.</p>\\n                </div>\\n                <div class=\\\"listing-item\\\" ng-repeat=\\\"endpoint in endpointStatuses\\\" ng-if=\\\"endpointStatuses\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <div class=\\\"listing-item-image\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use style=\\\"fill: #de0000\\\" ng-if=\\\"endpoint.type === 'error'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"endpoint.type === 'confirmation'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                <use style=\\\"fill: #FFC334\\\" ng-if=\\\"endpoint.type === 'warning'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                        </div>\\n                        <strong class=\\\"list-item-secondary\\\" ng-if=\\\"endpoint.url\\\">Status-result for {{endpoint.url}}</strong>\\n                        <p ng-if=\\\"endpoint.status\\\">The server responded with a {{endpoint.status}}-status code</p>\\n                        <p ng-repeat=\\\"message in endpoint.messages\\\">{{message}}</p>\\n                    </div>\\n                </div>\\n                <h4 class=\\\"list-item-title\\\">Checking structure for endpoints...</h4>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"!endpointStructureChecks\\\">\\n                        <p>Check for endpoint-status is disabled. If you think this is incorrect, please check USH_DISABLED_CHECKS in your .env-file.</p>\\n                </div>\\n                <div class=\\\"listing-item\\\" ng-repeat=\\\"endpoint in endpointStructureChecks\\\" ng-if=\\\"!isCheckDisabled('ENDPOINT_STRUCTURE')\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                            <div class=\\\"listing-item-image\\\">\\n                                <svg class=\\\"iconic\\\"   >\\n                                    <use style=\\\"fill: #de0000\\\" ng-if=\\\"endpoint.type === 'error'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                    <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"endpoint.type === 'confirmation'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                    <use style=\\\"fill: #FFC334\\\" ng-if=\\\"endpoint.type === 'warning'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                                </svg>\\n                            </div>\\n                        <strong class=\\\"list-item-secondary\\\" ng-if=\\\"endpoint.url\\\">Structure-result for {{endpoint.url}}</strong>\\n                        <p ng-repeat=\\\"message in endpoint.messages\\\">{{message}}</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"listing-item\\\">\\n                <h3>Checking Oauth-endpoint...</h3>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"!oauthStatus\\\">\\n                        <p>Check is disabled. If you think this is incorrect, please check USH_DISABLED_CHECKS in your .env-file.</p>\\n                </div>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"oauthStatus\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <div class=\\\"listing-item-image\\\">\\n                            <svg class=\\\"iconic\\\"   >\\n                                <use style=\\\"fill: #de0000\\\" ng-if=\\\"oauthStatus.type === 'error'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"oauthStatus.type === 'confirmation'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                <use style=\\\"fill: #FFC334\\\" ng-if=\\\"oauthStatus.type === 'warning'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                        </div>\\n                        <strong class=\\\"list-item-secondary\\\" ng-if=\\\"oauthStatus.url\\\">Status-result for {{oauthStatus.url}}</strong>\\n                        <p>The server responded with a {{oauthStatus.status}}-status code</p>\\n                        <p ng-repeat=\\\"message in oauthStatusCheck.messages\\\">{{message}}</p>\\n                    </div>\\n                    <div class=\\\"listing-item\\\">\\n                        <div class=\\\"listing-item-primary\\\">\\n                            <div class=\\\"listing-item-image\\\">\\n                                <svg class=\\\"iconic\\\"   >\\n                                    <use style=\\\"fill: #de0000\\\" ng-if=\\\"oauthStructure.type === 'error'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                    <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"oauthStructure.type === 'confirmation'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                    <use style=\\\"fill: #FFC334\\\" ng-if=\\\"oauthStructure.type === 'warning'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                                </svg>\\n                            </div>\\n                            <strong class=\\\"list-item-secondary\\\" ng-if=\\\"oauthStructure.url\\\">Checking the structure for {{oauthStructure.url}}</strong>\\n                            <p ng-repeat=\\\"message in oauthStructure.messages\\\">{{message}}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"listing-item\\\">\\n                        <div class=\\\"listing-item-primary\\\">\\n                            <div class=\\\"listing-item-image\\\">\\n                                <svg class=\\\"iconic\\\">\\n                                    <use style=\\\"fill: #de0000\\\" ng-if=\\\"oauthToken.type === 'error'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                    <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"oauthToken.type === 'confirmation'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                    <use style=\\\"fill: #FFC334\\\" ng-if=\\\"oauthToken.type === 'warning'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                                </svg>\\n                            </div>\\n                            <strong class=\\\"list-item-secondary\\\" ng-if=\\\"oauthToken.messages\\\">Checking that the oauth-token is working</strong>\\n                            <p ng-repeat=\\\"message in oauthToken.messages\\\">{{message}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"listing-item\\\">\\n                <h3>Checking environment variables in the client...</h3>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"!envCheck\\\">\\n                        <p>Check is disabled. If you think this is incorrect, please check USH_DISABLED_CHECKS in your .env-file.</p>\\n                </div>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"envCheck\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <div class=\\\"listing-item-image\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use style=\\\"fill: #de0000\\\" ng-if=\\\"envCheck.type === 'error'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"envCheck.type === 'confirmation'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                <use style=\\\"fill: #FFC334\\\" ng-if=\\\"envCheck.type === 'warning'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                        </div>\\n                        <strong class=\\\"list-item-secondary\\\" ng-if=\\\"envCheck.messages\\\">Checking that there is an .env file in the client </strong>\\n\\n                        <p ng-repeat=\\\"message in envCheck.messages\\\">{{message}}</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"listing-item\\\">\\n                <h3>Checking Transifex</h3>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"!transifexCheck\\\">\\n                        <p>Check is disabled. If you think this is incorrect, please check USH_DISABLED_CHECKS in your .env-file.</p>\\n                </div>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"transifexCheck\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <div class=\\\"listing-item-image\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use style=\\\"fill: #de0000\\\" ng-if=\\\"transifexCheck.type === 'error'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"transifexCheck.type === 'confirmation'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                <use style=\\\"fill: #FFC334\\\" ng-if=\\\"transifexCheck.type === 'warning'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                        </div>\\n                        <strong class=\\\"list-item-secondary\\\" ng-if=\\\"transifexCheck\\\">Checking if there are credentials for Transifex</strong>\\n\\n                        <p ng-repeat=\\\"message in transifexCheck.messages\\\">{{message}}</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"listing-item\\\" >\\n                <h3>Checking Database-connection</h3>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"!dbConnection\\\">\\n                        <p>Check is disabled. If you think this is incorrect, please check USH_DISABLED_CHECKS in your .env-file.</p>\\n                </div>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"dbConnection\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <div class=\\\"listing-item-image\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use style=\\\"fill: #de0000\\\" ng-if=\\\"dbConnection.errors\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"dbConnection.success\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                <use style=\\\"fill: #5294ff\\\" ng-if=\\\"dbConnection.type === 'info'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#info\\\"></use>\\n                            </svg>\\n                        </div>\\n                        <strong class=\\\"list-item-secondary\\\" ng-if=\\\"dbConnection\\\">Checking that the database is connected</strong>\\n                    <div ng-if=\\\"dbConnection.success\\\" ng-repeat=\\\"result in dbConnection.success\\\">\\n                        <p>{{result.message}}</p>\\n                        <p>{{result.explainer}}</p>\\n                    </div>\\n                    <div ng-if=\\\"dbConnection.errors\\\" ng-repeat=\\\"result in dbConnection.errors\\\">\\n                        <p>{{result.message}}</p>\\n                        <p>{{result.explainer}}</p>\\n                    </div>\\n                    <div ng-if=\\\"dbConnection.type === 'info'\\\">\\n                        <p>{{dbConnection.message}}</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"listing-item\\\">\\n                <h3>Checking environment-variables in the API...</h3>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"!apiEnvs\\\">\\n                        <p>Check is disabled. If you think this is incorrect, please check USH_DISABLED_CHECKS in your .env-file.</p>\\n                </div>\\n                <div class=\\\"listing-item\\\" ng-if=\\\"apiEnvs\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <div class=\\\"listing-item-image\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use style=\\\"fill: #de0000\\\" ng-if=\\\"apiEnvs.errors\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                                <use style=\\\"fill: #4fab2f\\\" ng-if=\\\"apiEnvs.success\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-check\\\"></use>\\n                                <use style=\\\"fill: #5294ff\\\" ng-if=\\\"apiEnvs.type === 'info'\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#info\\\"></use>\\n                            </svg>\\n                        </div>\\n                        <strong class=\\\"list-item-secondary\\\" ng-if=\\\"apiEnvs\\\">Checking that there is an .env file in the backend</strong>\\n\\n                        <div ng-if=\\\"apiEnvs.success\\\" ng-repeat=\\\"result in apiEnvs.success\\\">\\n                            <p>{{result.message}}</p>\\n                            <p>{{result.explainer}}</p>\\n                        </div>\\n                        <div ng-if=\\\"apiEnvs.errors\\\" ng-repeat=\\\"result in apiEnvs.errors\\\">\\n                            <p>{{result.message}}</p>\\n                            <p>{{result.explainer}}</p>\\n                        </div>\\n                        <div ng-if=\\\"apiEnvs.type === 'info'\\\">\\n                            <p>{{apiEnvs.message}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"listing-item\\\" ng-if=\\\"(apiEnvs || dbConnection) && (!apiEnvs || apiEnvs.success) && (!dbConnection || dbConnection.success)\\\">\\n                <h3>Checking if API Install Debug mode should be disabled...</h3>\\n                <div class=\\\"listing-item\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <div class=\\\"listing-item-image\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use style=\\\"fill: #FFC334\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                        </div>\\n                        <div>\\n                            <p>For security reasons, we recommend NOT leaving some check routines enabled in the API.</p>\\n                            <p>You may disable those checks now by running the \\\"composer installdebug:disable\\\" command in the API folder.</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </main>\\n</div>\\n\";","module.exports = [\n    '$rootScope',\n    '$location',\nfunction (\n    $rootScope,\n    $location\n) {\n    // Setup PL layout and switching function\n    $rootScope.globalLayout = 'layout-a';\n    $rootScope.setLayout = function (layout) {\n        $rootScope.globalLayout = layout;\n    };\n    // Setup PL modal and demo-bar visible and switching function\n    $rootScope.modalVisible = false;\n    $rootScope.demoBarVisible = false;\n\n    $rootScope.toggleModalVisible = function (state, demo) {\n        if (!demo) {\n            $rootScope.modalVisible = (typeof state !== 'undefined') ? state : !$rootScope.modalVisible;\n        } else {\n            $rootScope.demoBarVisible = (typeof state !== 'undefined') ? state : !$rootScope.demoBarVisible;\n        }\n    };\n}];\n","module.exports = [\n    // '$scope',\n    '$rootScope',\n    '$translate',\n    'TranslationService',\n    'Languages',\nfunction (\n    // $scope,\n    $rootScope,\n    $translate,\n    TranslationService,\n    ConfigEndpoint,\n    Languages\n) {\n\n    $rootScope.rtlEnabled = false;\n\n    $rootScope.switchRtl = function () {\n        $rootScope.rtlEnabled = !$rootScope.rtlEnabled;\n    };\n    TranslationService.getLanguage().then(function (language) {\n            translate(language);\n        });\n\n    function translate(language) {\n        TranslationService.translate(language);\n    }\n}];\n","module.exports = \"<svg class=\\\"ushahidi-logo\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 273.5 266.5\\\" xml:space=\\\"preserve\\\">\\n    <g>\\n        <circle cx=\\\"248.8\\\" cy=\\\"207.1\\\" r=\\\"21.6\\\"/>\\n        <path d=\\\"M239.8,81.7c7.9-6.6,12.9-16.5,12.9-27.6c0-19.8-16.1-35.9-35.9-35.9c-7,0-13.6,2.1-19.1,5.5\\n            c-2.1-6.2-8-10.7-15-10.7c-5.1,0-9.6,2.4-12.5,6.1c-9.9-3-20.4-4.6-31.3-4.6c-40.6,0-75.9,22.1-94.8,54.9\\n            c-23.2,3-41.3,22.8-41.3,46.9c0,21.3,14.1,39.3,33.6,45.2c7.7,20.9,21.6,38.8,39.4,51.5c10.6,28.7,38.2,49.2,70.5,49.2\\n            c38.4,0,70.1-28.9,74.6-66.1c17-19.3,27.3-44.5,27.3-72.2C248.2,108.9,245.2,94.7,239.8,81.7 M139,209.4\\n            c-47.3,0-85.6-38.3-85.6-85.6S91.7,38.2,139,38.2s85.6,38.3,85.6,85.6C224.5,171.1,186.2,209.4,139,209.4\\\"/>\\n        <circle cx=\\\"25.1\\\" cy=\\\"57.9\\\" r=\\\"12.3\\\"/>\\n        <g>\\n            <path d=\\\"M137,198.5c0.5,0,1.1,0.1,1.6,0.1c-0.4,0-0.8,0-1.3-0.1C137.2,198.5,137.1,198.5,137,198.5z\\\"/>\\n            <path d=\\\"M70,94.5L70,94.5l-0.1,0.2l0,0C69.9,94.6,70,94.6,70,94.5z\\\"/>\\n            <path d=\\\"M177.5,57.6c-0.1-0.1-0.2-0.1-0.3-0.2c-0.1,0-0.1-0.1-0.2-0.1C177.2,57.5,177.3,57.5,177.5,57.6z\\\"/>\\n            <path d=\\\"M153.9,190.5c-8.7-0.5-18.3-2.3-28.1-5.3c-2.9,5.8-5.2,9.3-6.8,10c5.8,1.7,11.4,2.8,16.6,3.1\\n                c0.2,0,0.4,0,0.6,0C142.2,198.4,148.3,195.7,153.9,190.5z\\\"/>\\n            <path d=\\\"M136.3,198.4c-0.1,0-0.1,0-0.2,0c0.3,0,0.6,0,0.9,0c0.1,0,0.2,0,0.3,0C136.9,198.5,136.6,198.4,136.3,198.4z\\\"\\n                />\\n            <path d=\\\"M77.2,81c0.1-0.2,0.3-0.4,0.4-0.6C77.4,80.7,77.3,80.8,77.2,81z\\\"/>\\n            <path d=\\\"M176,189.2c1.1-0.6,2.2-1.3,3.2-2c-5.3,2.4-12.5,3.6-20.9,3.4c-6,5.2-12.6,7.9-19.3,7.9c0.3,0,0.6,0,0.9,0\\n                c11.3,0,21.9-2.5,31.5-6.9l0.3-0.2C173,190.8,174.5,190,176,189.2z\\\"/>\\n            <path d=\\\"M118.2,195.4c2.7,0.8,5.4,1.4,8.1,1.9c-2.6-0.5-5.2-1.1-7.8-1.9H118.2z\\\"/>\\n            <path d=\\\"M116.8,194.9c0.4,0.1,0.9,0.3,1.3,0.4L117,195L116.8,194.9z\\\"/>\\n            <path d=\\\"M129,197.8c-0.7-0.1-1.3-0.2-2-0.3C127.7,197.5,128.4,197.7,129,197.8z\\\"/>\\n            <path d=\\\"M74.8,84.9l1.4-2.3C75.7,83.3,75.2,84.1,74.8,84.9z\\\"/>\\n            <path d=\\\"M97.7,185.7c-0.1-0.1-0.2-0.1-0.3-0.2C97.6,185.6,97.7,185.6,97.7,185.7z\\\"/>\\n            <path d=\\\"M106.9,190.9c-2.1-1-4.2-2.1-6-3.2l-0.6-0.4c4.8,3,10,5.4,15.4,7.2h0.1C112.8,193.5,109.8,192.3,106.9,190.9z\\n                \\\"/>\\n            <path d=\\\"M132.4,198.2c-0.2,0-0.4,0-0.6-0.1C132,198.1,132.2,198.1,132.4,198.2z\\\"/>\\n            <path d=\\\"M94.8,183.6c-0.1-0.1-0.2-0.2-0.4-0.3c0.6,0.4,1.1,0.8,1.7,1.2c-0.3-0.2-0.7-0.5-1.1-0.8\\n                C95,183.7,94.9,183.7,94.8,183.6z\\\"/>\\n            <path d=\\\"M135.7,198.4c-0.5,0-1-0.1-1.5-0.1c0.9,0.1,1.9,0.1,2.8,0.2c-0.3,0-0.6,0-0.9,0\\n                C135.9,198.4,135.8,198.4,135.7,198.4z\\\"/>\\n            <path d=\\\"M93.3,136.7c-9-6-15.8-12.4-20.2-18.5c-3.7,10.9-4.3,21.3-2.4,30.7c3.8,5.4,9.9,10.9,17.7,16.2\\n                C88.1,157.2,89.6,147.5,93.3,136.7z\\\"/>\\n            <path d=\\\"M92.7,170.6c0.4,7.3,2.6,12.7,6.4,15.8c2.2,1.3,4.6,2.6,7.1,3.8c3.2,1.5,6.6,2.9,9.9,4\\n                c0.8-1,2.4-4.7,4.8-10.7c-5.5-1.9-11-4.1-16.3-6.6C100.2,174.9,96.3,172.8,92.7,170.6z\\\"/>\\n            <path d=\\\"M94.8,132.7c4.2-10.9,10-21.6,16.8-31.3c-7.7-5.2-13.7-10.7-17.5-16c-8.4,8.3-15.2,18.1-19.5,28.8\\n                C79,120.3,85.9,126.6,94.8,132.7z\\\"/>\\n            <path d=\\\"M95.6,79.7c9-7.6,19.5-13.6,30.6-17.3c-1.7-3-2.2-5.8-1.3-8.1c-11.5,1.5-22.3,5.5-31.5,11.7\\n                C91.9,69.9,92.7,74.6,95.6,79.7z\\\"/>\\n            <path d=\\\"M204.1,120.9c-5.4,2.5-12.8,3.6-21.3,3.5c-0.2,11.9-2.1,23.9-5.6,34.9c9.8,0.2,18.4-1.2,24.6-4\\n                C205.2,144.3,205.8,132.5,204.1,120.9z\\\"/>\\n            <path d=\\\"M170.6,163.3c-10.3-0.6-21.6-2.7-33.2-6.2c-3.8,10.7-7.4,19.5-10.4,25.9c10.1,3,20.1,4.9,29.1,5.4\\n                C161.6,182.5,166.6,174,170.6,163.3z\\\"/>\\n            <path d=\\\"M97.3,82.3c3.7,5.1,9.4,10.4,16.8,15.4c7-9.5,14.9-18,23-24.7c-4.4-3-7.8-6.1-9.9-9.1\\n                C116.4,68,106.1,74.4,97.3,82.3z\\\"/>\\n            <path d=\\\"M160.6,188.6c8.6,0.1,16.1-1,21.6-3.6c7.8-6.2,14.2-14.8,18.2-25.6c-6.3,2.9-14.8,4.2-24.7,4\\n                C171.8,174.2,166.5,182.6,160.6,188.6z\\\"/>\\n            <path d=\\\"M150.8,114.6c9.6,2.9,19.1,4.6,27.7,5.2c0.3-11.8-0.9-23.4-3.3-33.8c-5-0.3-10.6-1.4-16.3-3.1\\n                C156.7,92.5,154,103.3,150.8,114.6z\\\"/>\\n            <path d=\\\"M69.8,94.9c-0.4,1.1-0.9,2.2-1.3,3.3l0.2-0.5L69.8,94.9z\\\"/>\\n            <path d=\\\"M203.3,116.6c-2.3-11.5-7-22.6-13.6-32.5c-3.1,1.4-7.3,2.1-12.1,2c3.2,10.4,5,22,5.1,33.9\\n                C191,120.1,198.1,119,203.3,116.6z\\\"/>\\n            <path d=\\\"M207.9,113.8c3.3-2.7,4.7-6.1,4.5-9.9c-3.3-10.2-9.2-19.5-17.3-27.3c0.1,2.2-0.7,4.3-2.7,5.9\\n                c-0.4,0.3-0.8,0.6-1.2,0.9c7,9.6,12,20.6,14.6,31.9C206.6,114.8,207.3,114.3,207.9,113.8z\\\"/>\\n            <path d=\\\"M98.1,139.8c-3.7,10.8-5.5,20.3-5.5,28c3.7,2.3,7.8,4.5,12.2,6.6c5.6,2.6,11.3,5,16.9,6.9\\n                c2.5-6.5,5.8-15.4,9.6-26.1c-6.5-2.2-13-4.8-19.3-7.9C107,144.9,102.4,142.4,98.1,139.8z\\\"/>\\n            <path d=\\\"M127.7,110.4c-4.3-2.1-8.3-4.2-12-6.5c-6.4,10-12,20.9-16.1,31.8c4.3,2.6,8.9,5.1,13.9,7.5\\n                c6.3,3,12.8,5.6,19.3,7.8c3.9-11,7.9-22.6,11.6-33.8C138.8,115.3,133.2,113.1,127.7,110.4z\\\"/>\\n            <path d=\\\"M178.3,124.3c-8.9-0.6-18.7-2.4-28.7-5.4c-3.3,11.4-7,23.1-10.8,34.1c11.6,3.5,23,5.6,33.2,6.2\\n                C175.6,148.1,177.7,136.1,178.3,124.3z\\\"/>\\n            <path d=\\\"M118.1,100.2c3.5,2.2,7.4,4.3,11.6,6.3c5.3,2.5,10.7,4.7,16.1,6.5c3.7-11.1,7.1-21.8,10-31\\n                c-3.2-1.1-6.4-2.4-9.5-3.9c-2.5-1.2-4.7-2.4-6.8-3.7C132.1,81.6,124.7,90.5,118.1,100.2z\\\"/>\\n            <path d=\\\"M210.4,149.8c-0.9,2.3-2.4,4.4-4.6,6.2c-0.8,0.6-1.6,1.2-2.5,1.8c-4.1,10.7-10.6,19.4-18.6,25.8\\n                c0.5-0.3,0.9-0.6,1.4-1c12.2-9.5,21.4-22.6,25.9-37.7l-1.1,3.4L210.4,149.8z\\\"/>\\n            <path d=\\\"M91.2,66.2c0.7-1.1,1.6-2.1,2.8-3.1c0.3-0.2,0.6-0.5,0.9-0.7l3-2.1c0.4-0.3,0.8-0.6,1.2-0.8\\n                c-8,5.1-14.9,11.7-20.5,19.3C82.3,74,86.5,69.8,91.2,66.2z\\\"/>\\n            <path d=\\\"M72.6,111c4.3-10.7,11.2-20.4,19.8-28.4c-3-5.2-3.9-10.1-2.2-14.3C82.9,73.8,77,80.8,72.6,89\\n                c-1,1.9-1.9,3.9-2.7,5.6C68.1,99.4,69.1,105.1,72.6,111z\\\"/>\\n            <path d=\\\"M142.4,47.6c0.6,0,1.2,0,1.8,0.1C143.6,47.7,143,47.7,142.4,47.6z\\\"/>\\n            <path d=\\\"M131.4,62.4c1.9,2.7,5,5.5,8.9,8.1c7.6-5.8,15.3-10,22.6-12C152.4,57.6,141.7,59,131.4,62.4z\\\"/>\\n            <path d=\\\"M131.3,51.2c-0.6,0.5-1,1-1.4,1.6c10.7-0.4,21.9,1.4,32.9,5.9c-8.3-6-17-9.2-25.4-10.1\\n                C134.9,49,132.8,49.9,131.3,51.2z\\\"/>\\n            <path d=\\\"M69.9,94.7L69.9,94.7v-0.2C70,94.6,69.9,94.6,69.9,94.7z\\\"/>\\n            <path d=\\\"M71.1,115.1c-3.3-5.7-4.4-11-2.9-15.7c-2.4,7.4-3.8,15.4-3.8,23.6c0,5.9,0.7,11.6,2,17.1c0.5,2,1.4,4,2.6,6.1\\n                C66.9,136.6,67.4,126,71.1,115.1z\\\"/>\\n            <path d=\\\"M129.4,53.8c-0.9,2.1-0.4,4.6,1.1,7.3c10.5-3,21.6-3.9,32.3-2.5C151.6,54.5,140.2,53,129.4,53.8z\\\"/>\\n            <path d=\\\"M155.5,49.2c-0.3,0-0.5-0.1-0.7-0.1c3.2,0.7,6,3.7,8,9.5c3.3-3.9,5.6-5.4,7-4.8c0.8,0.3,1.8,0.8,2.6,1.2\\n                c-2.2-1-5.4,0.1-9.6,3.6c8.9-0.7,16.5,1,22.6,4.6c-2.1-1.8-4.7-3.7-7.6-5.4c-0.1-0.1-0.2-0.1-0.3-0.2c-0.1-0.1-0.3-0.2-0.4-0.2\\n                c-0.4-0.2-0.8-0.5-1.2-0.7l0,0c-0.3-0.2-0.6-0.3-0.9-0.5c-6.3-3.3-13.2-5.8-20.5-7.2l0.3,0.1L155.5,49.2z\\\"/>\\n            <path d=\\\"M175.8,56.7c0.2,0.1,0.5,0.3,0.7,0.4c-0.4-0.3-0.9-0.5-1.4-0.7C175.4,56.4,175.6,56.6,175.8,56.7L175.8,56.7z\\n                \\\"/>\\n            <path d=\\\"M77.2,165c-0.8-1.2-1.6-2.5-2.3-3.6l-0.2-0.3c-2.1-3.6-3.7-7.4-4.9-11.4c-1-1.8-1.8-3.5-2.3-5.1\\n                c2.4,8,6,15.4,10.8,22.1c-0.3-0.4-0.6-0.9-0.9-1.3C77.3,165.2,77.2,165.1,77.2,165z\\\"/>\\n            <path d=\\\"M142.1,47.6c-0.8,0-1.5-0.1-2.3-0.1c-3.4,0-6.8,0.3-10.2,0.7c2.1-0.3,4.2-0.4,6.3-0.3\\n                C137.9,47.7,140,47.6,142.1,47.6z\\\"/>\\n            <path d=\\\"M97.2,60.9c-1.1,0.9-2,1.9-2.7,2.9c9.1-6,19.7-9.7,31.1-10.8c0.4-0.6,0.9-1.2,1.6-1.7c1.7-1.4,4-2.4,6.8-3\\n                c-3.4-0.1-6.8,0.3-10,1c1.6-0.3,3.7-0.7,5.4-1c-11,1.5-21.2,5.4-30.1,11.2l-1.2,0.9C97.7,60.5,97.4,60.7,97.2,60.9z\\\"/>\\n            <path d=\\\"M152.3,48.6c-4.8-0.8-9.3-0.9-13-0.4c7.9,0.9,16,4.3,23.6,10.4C159.9,52.7,156.2,49.4,152.3,48.6z\\\"/>\\n            <path d=\\\"M151.9,48.5h0.3c-1.8-0.3-3.5-0.5-5.3-0.7h0.1C148.4,48.1,150.4,48.3,151.9,48.5z\\\"/>\\n            <path d=\\\"M189.4,66.3c3.1,3,5,6.1,5.6,8.9c8,7.3,13.9,16.4,17.2,26.3c-0.1-0.6-0.3-1.2-0.5-1.8l0,0\\n                c-3.8-11.8-10.5-22.3-19.2-30.8l0.7,0.6C192,68.4,190.7,67.3,189.4,66.3z\\\"/>\\n            <path d=\\\"M148.4,75.2c2.8,1.3,5.6,2.5,8.5,3.4c2.6-8.3,4.6-15.2,5.9-20c-6.5,2.4-13.5,7.1-20.4,13.3\\n                C144.2,73,146.3,74.1,148.4,75.2z\\\"/>\\n            <path d=\\\"M179.6,58.9c-0.7-0.4-1.4-0.8-2.1-1.2c0.1,0,0.1,0.1,0.2,0.1C178.2,58.1,178.8,58.4,179.6,58.9z\\\"/>\\n            <path d=\\\"M213.5,107.7c0.2,3.9-1.3,7.5-4.7,10.3c-0.7,0.5-1.4,1-2.1,1.5c2,11.4,1.5,23.2-1.9,34.2\\n                c0.9-0.6,1.7-1.1,2.5-1.8c2.4-2,4-4.4,4.8-7c2.1-6.9,3.2-14.3,3.2-21.9c0-1.7-0.1-3.3-0.2-5c-0.1-1.1-0.2-2-0.2-2.8\\n                C214.6,112.7,214.2,110.2,213.5,107.7z\\\"/>\\n            <path d=\\\"M215,116c-0.1-0.6-0.1-1.1-0.2-1.6c0,0.3,0.1,0.6,0.1,0.9C214.9,115.5,215,115.8,215,116z\\\"/>\\n            <path d=\\\"M95,183.8c0.5,0.4,1,0.7,1.6,1.1c-4.4-3.5-7.1-9.3-8-16.8c-7.6-5.1-13.4-10.5-17.1-15.6\\n                c1.3,4.5,3.2,8.8,5.6,12.6c0.1,0.1,0.1,0.2,0.2,0.3c0.3,0.5,0.6,0.9,0.9,1.3c4.4,6.2,9.7,11.7,15.7,16.3c0.3,0.2,0.6,0.4,0.8,0.6\\n                C94.9,183.7,95,183.7,95,183.8z\\\"/>\\n            <path d=\\\"M186.8,64.6c-6.5-4-14.6-6.2-24-6c11.3,2.7,21.1,7.5,29.1,14C191.3,70.1,189.6,67.3,186.8,64.6z\\\"/>\\n            <path d=\\\"M174.1,82.2c-2.6-9.3-6.4-17.5-11.3-23.6c-0.3,5.1-1.5,12.4-3.2,20.9C164.6,81,169.6,81.9,174.1,82.2z\\\"/>\\n            <path d=\\\"M187.2,80.5c-6.6-8.8-14.8-16.4-24.4-21.9c5.7,6.2,10.3,14.3,13.6,23.7C180.7,82.3,184.5,81.8,187.2,80.5z\\\"/>\\n            <path d=\\\"M181.4,60.1c0.5,0.3,1,0.7,1.5,1C182.4,60.7,181.9,60.4,181.4,60.1z\\\"/>\\n            <path d=\\\"M190.2,66.8l0.7,0.7C190.7,67.3,190.5,67.1,190.2,66.8z\\\"/>\\n            <path d=\\\"M188.6,79.8c0.4-0.2,0.7-0.5,1.1-0.8c1.7-1.5,2.5-3.2,2.4-5.2c-8-6.8-17.9-12.1-29.2-15.2\\n                C172.9,63.8,181.6,71.2,188.6,79.8z\\\"/>\\n            <line class=\\\"st4\\\" x1=\\\"70\\\" y1=\\\"94.5\\\" x2=\\\"69.9\\\" y2=\\\"94.8\\\"/>\\n            <path d=\\\"M77.2,165c0.1,0.1,0.1,0.2,0.2,0.3C77.3,165.2,77.2,165.1,77.2,165z\\\"/>\\n            <path d=\\\"M78.3,166.7L78.3,166.7L78.3,166.7c-0.3-0.4-0.6-0.9-0.9-1.3C77.7,165.8,78,166.3,78.3,166.7z\\\"/>\\n            <path d=\\\"M175.8,56.7L175.8,56.7L175.8,56.7z\\\"/>\\n        </g>\\n    </g>\\n</svg>\\n\";","import isUrl from 'is-url';\nimport fetch from 'node-fetch';\nimport * as forms from '../../../mocked_backend/api/v3/forms.json';\nimport * as tags from '../../../mocked_backend/api/v3/tags.json';\nimport * as features from '../../../mocked_backend/api/v3/config/features.json';\nimport * as map from '../../../mocked_backend/api/v3/config/map.json';\n\nconst verifyStatus = function (url, options) {\n    let results;\n    return fetch(url, options)\n        .then(response => {\n            switch (response.status.toString()) {\n                case '200':\n                    results = {\n                        type: 'confirmation',\n                        messages: ['All is good. This is the expected result.'],\n                        url: response.url,\n                        status: response.status\n                    };\n                    break;\n                case '404':\n                    results = {\n                        type: 'error',\n                        messages: ['Make sure the API\\'s BACKEND_URL in the .env file is the base URL to your Platform API.'],\n                        url: response.url,\n                        status: response.status\n                    };\n                    break;\n                case '403':\n                    results = {\n                        type: 'error',\n                        messages: ['Make sure the API\\'s BACKEND_URL in the .env file is the base URL to your Platform API.'],\n                        url: response.url,\n                        status: response.status\n                    };\n                    break;\n                case '500':\n                    results = {\n                        type: 'error',\n                        messages: ['Oh noes. This does not look good.', 'Please check storage/logs in the Platform API, and see what the logs say about this error.'],\n                        url: response.url,\n                        status: response.status\n                    };\n                    break;\n            }\n            return results;\n        })\n        .catch(error => {\n            results = {\n                    type: 'error',\n                    messages: ['The server could not be reached or there was an error in the request', 'Make sure the BACKEND_URL is in your .env-file', error],\n                    url: url\n                };\n            return results;\n        });\n};\nconst verifyNetwork = function (env) {\n    if (isCheckDisabled(env, 'NETWORK')) {\n        return;\n    }\n    return verifyStatus(`${env.BACKEND_URL}/api/v3/config`);\n};\n\nconst verifyEnv = function (env) {\n    if (isCheckDisabled(env, 'ENV')) {\n        return;\n    }\n\n    let messages = [];\n\n    if (!env.BACKEND_URL) {\n        messages.push('BACKEND_URL not found in .env file.', 'Check you have added a .env file and that it contains the BACKEND_URL to connect to the Platform API.');\n    }\n\n    if (env.BACKEND_URL && !isUrl(env.BACKEND_URL)) {\n        messages.push('BACKEND_URL found in .env file. Is not a valid URL.',\n        'Please fix the BACKEND_URL in the .env file to connect to the Platform API.');\n    }\n\n    return messages.length > 0 ? {type: 'error', messages: messages} : {type: 'confirmation', messages: ['All good, the .env file contains required variables']};\n};\n\nconst verifyTransifex = function (env) {\n    if (isCheckDisabled(env, 'TRANSIFEX')) {\n        return;\n    }\n    if (!env.TX_USERNAME || !env.TX_PASSWORD) {\n        return {type: 'warning', messages: ['TX_USERNAME and TX_PASSWORD not found in .env file. This might be ok if you are only using English, but it will not allow you to use any other languages.', 'If you need languages other than English, you will need to create a transifex account and setup the TX_USERNAME and TX_PASSWORD variables in the .env file']};\n    } else {\n        return {type: 'confirmation', messages: ['All good, TX_USERNAME and TX_PASSWORD found in .env file.']};\n    }\n};\n\nconst verifyEndpointStatus = function (env) {\n    if (isCheckDisabled(env, 'ENDPOINT_STATUS')) {\n        return;\n    }\n    const endpoints = ['tags', 'forms', 'config/features', 'config/map'];\n    return endpoints.map(function (endpoint) {\n        return verifyStatus(`${env.BACKEND_URL}/api/v3/${endpoint}`)\n        .then(response => {\n            return response;\n        });\n    });\n};\n\nconst verifyEndpointStructure = function (env) {\n    if (isCheckDisabled(env, 'ENDPOINT_STRUCTURE')) {\n        return;\n    }\n    const endpoints = ['tags', 'forms', 'config/features', 'config/map'];\n    return endpoints.map(function (endpoint) {\n        return fetch(`${env.BACKEND_URL}/api/v3/${endpoint}`)\n            .then(function (response) {\n                    return response.json()\n                        .then(function (jsonData) {\n                            let structure = {};\n                            switch (endpoint) {\n                                case 'tags':\n                                    structure = tags.default;\n                                    break;\n                                case 'forms':\n                                    structure = forms.default;\n                                    break;\n                                case 'config/features':\n                                    structure = features.default;\n                                    break;\n                                case 'config/map':\n                                    structure = map.default;\n                                    break;\n                            }\n                            return checkStructure(jsonData, structure, response.url);\n                        }).catch(error => {\n                        return {type: 'error', messages: ['The server could not be reached or there was an error in the request', 'Make sure your Platform API is running', error], url: `${env.BACKEND_URL}/api/v3/${endpoint}`};\n                    });\n                })\n        .catch(error => {\n            return {type: 'error', messages: ['The server could not be reached or there was an error in the request', 'Make sure your Platform API is running', error], url: `${env.BACKEND_URL}/api/v3/${endpoint}`};\n        });\n    });\n};\n\nconst verifyOauth = function (env) {\n    if (isCheckDisabled(env, 'OAUTH')) {\n        return;\n    }\n    let body = JSON.stringify({\n        grant_type: 'client_credentials',\n        client_id: env.OAUTH_CLIENT_ID || 'ushahidiui',\n        client_secret: env.OAUTH_CLIENT_SECRET || '35e7f0bca957836d05ca0492211b0ac707671261',\n        scope: 'forms'\n    });\n\n    let options = {\n        method: 'POST',\n        body: body,\n        headers: {'Accept': 'application/json, text/plain, */*', 'Content-Type': 'application/json'}\n    };\n    return {status: verifyStatus(`${env.BACKEND_URL}/oauth/token`, options), structure: checkTokenStructure(env, options), token: testToken(env, options)};\n};\n\nconst verifyAPIEnvs = function (env) {\n    if (isCheckDisabled(env, 'API_ENVS')) {\n        return new Promise((resolve, reject) => resolve('DISABLED'));\n    }\n    return checkVerifierAPI(`${env.BACKEND_URL}/api/v3/verifier/env`);\n};\n\nconst verifyDbConnection = function (env) {\n    if (isCheckDisabled(env, 'DB_CONNECTION')) {\n        return new Promise((resolve, reject) => resolve('DISABLED'));\n    }\n    return checkVerifierAPI(`${env.BACKEND_URL}/api/v3/verifier/db`);\n};\n\nconst checkVerifierAPI = function (url) {\n    return fetch(url)\n    .then(json => {\n        return json;\n    })\n    .then(response => {\n        if (response.status.toString() === '204') {\n            return {\n                type: 'info',\n                message: 'This check has been disabled in the Platform API. ' +\n                          'You may enable it by running \"composer installdebug:enable\" in the API folder.'\n            };\n        } else {\n            return response.json();\n        }\n    })\n    .catch(error => {\n        console.log(error);\n\n        const errors = {\n            errors: [\n                {\n                    type: 'error',\n                    message: 'The server could not be reached or there was an error in the request',\n                    explainer: 'Make sure your Platform API is running.' +\n                                'Check the storage/logs/lumen.log file in the API server root ' +\n                                'directory for details'\n                },\n                error\n            ]\n        };\n        return errors;\n    });\n};\n\n\nconst checkTokenStructure = function (env, options) {\n    return fetch(`${env.BACKEND_URL}/oauth/token`, options)\n        .then(function (response) {\n            switch (response.status.toString()) {\n                case '200':\n                    return response.json().then(jsonData => {\n                            let preferedStructure = { token_type: 'Bearer', expires_in: '', access_token: ''};\n                            return checkStructure(jsonData, preferedStructure, response.url);\n                        }).catch(error => {\n                            return {type: 'error', messages: ['The server could not be reached or there was an error in the request', 'Make sure your Platform API is running', error]};\n                        });\n                case '500':\n                    return {type: 'error', messages: ['Oh noes. This does not look good.', 'Please check storage/logs in the Platform API, and see what the logs say about this error.'], url: response.url};\n                case '401':\n                    return {type: 'error', messages: ['Make sure your database-migrations has ran by running ./phinx migrate in the root directory of the platform API','If you have added your own client id and name, make sure the values in the .env file matches the database.'], url: response.url};\n            }\n        }).catch(error => {\n            return {type: 'error', messages: ['Oh noes. This does not look good.', 'Please check storage/logs in the Platform API, and see what the logs say about this error.', error], url: env.BACKEND_URL};\n        });\n};\n\nconst checkDebugMode = function (url) {\n    return fetch(url)\n    .then(response=> {\n        if (response.status === 200) {\n            return true;\n        } else {\n            return false;\n        }\n    });\n};\n\nconst testToken = function (env, options) {\n    return fetch(`${env.BACKEND_URL}/oauth/token`, options)\n        .then(function (response) {\n            switch (response.status.toString()) {\n                case '200':\n                    return response.json()\n                    .then(jsonData => {\n                        return fetch(`${env.BACKEND_URL}/api/v3/forms`, {\n                            method: 'GET',\n                            headers: {\n                                'Accept': 'application/json, text/plain, */*',\n                                'Content-Type': 'application/json',\n                                'Authorization': `Bearer ${jsonData.access_token}`\n                            }\n                        })\n                        .then(function (response) {\n                            switch (response.status.toString()) {\n                                case '200':\n                                    return {type: 'confirmation', messages: ['Token checked and is working. All good!']};\n                                case '500':\n                                    return {type: 'error', messages: ['Oh noes. This does not look good.', 'Please check storage/logs in the Platform API, and see what the logs say about this error.']};\n                                case '401':\n                                    return {type: 'error', messages: ['Did you add your own client_secret and client_key?', 'Make sure you updated the database with the same values', 'If you did not add your own secret and key, check that the database-migration has ran, by running ./phinx migrate in the root directory of the Platform API.']};\n                                case '403':\n                                    return {type: 'error', messages: ['There is a problem with the oauth-scopes', 'Check that your Platform API is set up and that all migrations has ran.']};\n                            }\n                        }).catch(err => {\n                            return {type: 'error', messages: ['The server could not be reached or there was an error in the request', 'Make sure your Platform API is running', err]};\n                        });\n                    }).catch(error => {\n                        return {type: 'error', messages: ['Oh noes. This does not look good.', 'Please check storage/logs in the Platform API, and see what the logs say about this error.', error], url: `${env.BACKEND_URL}/api/v3/forms`};\n                    });\n                case '500':\n                    return {type: 'error', messages: ['Oh noes. This does not look good.', 'Please check storage/logs in the Platform API, and see what the logs say about this error.'], url: `${env.BACKEND_URL}/api/v3/forms`};\n                case '401':\n                    return {type: 'error', messages: ['Make sure your database-migrations has ran by running ./phinx migrate in the root directory of the platform API','If you have added your own client id and name, make sure the values in the .env file matches the database.'], url: response.url};\n            }\n        }).catch(error => {\n            return {type: 'error', messages: ['Oh noes. This does not look good.', 'Please check storage/logs in the Platform API, and see what the logs say about this error.', error], url: `${env.BACKEND_URL}/api/v3/forms`};\n        });\n};\n\nconst isCheckDisabled = function (env, name) {\n    if (!env.USH_DISABLE_CHECKS) {\n        return false;\n    }\n    const checks = env.USH_DISABLE_CHECKS.split(',');\n    return checks.indexOf(name) >= 0 || checks.indexOf('ALL') >= 0;\n};\n\nconst checkStructure = function (a, b, url) {\n    let aKeys = Object.keys(a).sort();\n    let bKeys = Object.keys(b).sort();\n    aKeys = aKeys.filter(key=> key !== '$promise' && key !== '$resolved');\n    bKeys = bKeys.filter(key=> key !== '$promise' && key !== '$resolved');\n    if (JSON.stringify(aKeys) === JSON.stringify(bKeys)) {\n        return {type: 'confirmation', messages: [`The structure for ${url} matches the expected, all good!`], url: url};\n    } else {\n        return {type: 'error', messages: [`Oh noes, the structure for ${url} does not match the expected `,`Make sure you have set up the database correctly `,`Check that all migrations has ran. You can check this by running ./phinx migrate in the root directory of the Platform API.`], url: url};\n    }\n};\n\nmodule.exports = {\n    verifyNetwork, verifyEndpointStatus, verifyEndpointStructure, verifyEnv, verifyOauth, verifyTransifex, verifyDbConnection, verifyAPIEnvs, isCheckDisabled, checkDebugMode};\n","/**\n * Ushahidi adaptive input directive\n * The adaptive-form attribute should be added to the parent div that\n * will receive the class updates.\n * The adaptive-input attribute should be added to a child input of the above\n * div\n */\n\nangular.module('ushahidi.common.adaptive-input', [])\n\n.directive('adaptiveForm', function () {\n    return {\n        restrict: 'A',\n        controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n\n            this.classAdd = function (className) {\n                $element.addClass(className);\n            };\n            this.classRemove = function (className) {\n                $element.removeClass(className);\n            };\n        }]\n    };\n})\n\n.directive('adaptiveInput', function () {\n    return {\n        require: '?^adaptiveForm',\n        restrict: 'A',\n        link: function ($scope, $element, $attrs, adaptiveController) {\n\n            activate();\n\n            function activate() {\n                $element.bind('focus', focusOn);\n                $element.bind('blur', focusOff);\n            }\n\n            // Check on initial load if field has value\n            // If so set focus\n            $scope.$watch($attrs.ngModel, function (value) {\n                value ? adaptiveController.classAdd('value') : '';\n            });\n\n            function focusOn($event) {\n                $event.preventDefault();\n                adaptiveController.classAdd('focus');\n            }\n\n            function focusOff($event) {\n                $event.preventDefault();\n                adaptiveController.classRemove('focus');\n                !$element.val() ? adaptiveController.classRemove('value')  : '';\n            }\n        }\n    };\n});\n","/**\n * Ushahidi dropdown directive\n * Based on angular-ui-bootstrap dropdown\n */\n\nangular.module('ushahidi.common.dropdown', ['ui.bootstrap.position'])\n\n.constant('dropdownConfig', {\n    openClass: 'active',\n    toggleOpenClass: 'active',\n    menuOpenClass: 'active'\n})\n\n.service('dropdownService', ['$document', '$rootScope', function ($document, $rootScope) {\n    var openScope = null;\n\n    this.open = function (dropdownScope) {\n        if (!openScope) {\n            $document.bind('click', closeDropdown);\n            $document.bind('keydown', keybindFilter);\n        }\n\n        openScope = dropdownScope;\n    };\n\n    this.close = function (dropdownScope) {\n        if (openScope === dropdownScope) {\n            openScope = null;\n            $document.unbind('click', closeDropdown);\n            $document.unbind('keydown', keybindFilter);\n        }\n    };\n\n    var closeDropdown = function (evt) {\n        // This method may still be called during the same mouse event that\n        // unbound this event handler. So check openScope before proceeding.\n        if (!openScope) {\n            return;\n        }\n\n        if (evt && openScope.getAutoClose() === 'disabled') {\n            return ;\n        }\n\n        var toggleElement = openScope.getToggleElement();\n        if (evt && toggleElement && toggleElement[0].contains(evt.target)) {\n            return;\n        }\n\n        var dropdownElement = openScope.getDropdownElement();\n        if (evt && openScope.getAutoClose() === 'outsideClick' &&\n            dropdownElement && dropdownElement[0].contains(evt.target)) {\n            return;\n        }\n\n        openScope.isOpen = false;\n\n        if (!$rootScope.$$phase) {\n            openScope.$apply();\n        }\n    };\n\n    var keybindFilter = function (evt) {\n        if (evt.which === 27) {\n            openScope.focusToggleElement();\n            closeDropdown();\n        } else if (openScope.isKeynavEnabled() && /(38|40)/.test(evt.which) && openScope.isOpen) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            openScope.focusDropdownEntry(evt.which);\n        }\n    };\n}])\n\n.controller('DropdownController', ['$scope', '$attrs', '$parse', 'dropdownConfig', 'dropdownService', '$animate', '$uibPosition', '$document', '$compile', '$templateRequest', function ($scope, $attrs, $parse, dropdownConfig, dropdownService, $animate, $position, $document, $compile, $templateRequest) {\n    var self = this,\n        scope = $scope.$new(), // create a child scope so we are not polluting original one\n        templateScope,\n        openClass = dropdownConfig.openClass,\n        toggleOpenClass = dropdownConfig.toggleOpenClass,\n        menuOpenClass = dropdownConfig.menuOpenClass,\n        getIsOpen,\n        setIsOpen = angular.noop,\n        toggleInvoker = $attrs.onToggle ? $parse($attrs.onToggle) : angular.noop,\n        appendToBody = false,\n        keynavEnabled = false;\n\n    this.init = function (element) {\n        self.$element = element;\n\n        if ($attrs.isOpen) {\n            getIsOpen = $parse($attrs.isOpen);\n            setIsOpen = getIsOpen.assign;\n\n            $scope.$watch(getIsOpen, function (value) {\n                scope.isOpen = !!value;\n            });\n        }\n\n        appendToBody = angular.isDefined($attrs.dropdownAppendToBody);\n        keynavEnabled = angular.isDefined($attrs.keyboardNav);\n\n        if (appendToBody && self.dropdownMenu) {\n            $document.find('body').append(self.dropdownMenu);\n            element.on('$destroy', function handleDestroyEvent() {\n                self.dropdownMenu.remove();\n            });\n        }\n    };\n\n    this.toggle = function (open) {\n        return (scope.isOpen = arguments.length ? !!open : !scope.isOpen);\n    };\n\n    // Allow other directives to watch status\n    this.isOpen = function () {\n        return scope.isOpen;\n    };\n\n    scope.getToggleElement = function () {\n        return self.toggleElement;\n    };\n\n    scope.getAutoClose = function () {\n        return $attrs.autoClose || 'always'; //or 'outsideClick' or 'disabled'\n    };\n\n    scope.getElement = function () {\n        return self.$element;\n    };\n\n    scope.isKeynavEnabled = function () {\n        return keynavEnabled;\n    };\n\n    scope.focusDropdownEntry = function (keyCode) {\n        var elems = self.dropdownMenu ? //If append to body is used.\n            (angular.element(self.dropdownMenu).find('a')) :\n            (angular.element(self.$element).find('ul').eq(0).find('a'));\n\n        switch (keyCode) {\n            case (40): {\n                if (!angular.isNumber(self.selectedOption)) {\n                    self.selectedOption = 0;\n                } else {\n                    self.selectedOption = (self.selectedOption === elems.length - 1 ?\n                        self.selectedOption :\n                        self.selectedOption + 1);\n                }\n                break;\n            }\n            case (38): {\n                if (!angular.isNumber(self.selectedOption)) {\n                    return;\n                } else {\n                    self.selectedOption = (self.selectedOption === 0 ?\n                        0 :\n                        self.selectedOption - 1);\n                }\n                break;\n            }\n        }\n        elems[self.selectedOption].focus();\n    };\n\n    scope.getDropdownElement = function () {\n        return self.dropdownMenu;\n    };\n\n    scope.focusToggleElement = function () {\n        if (self.toggleElement) {\n            self.toggleElement[0].focus();\n        }\n    };\n\n    scope.$watch('isOpen', function (isOpen, wasOpen) {\n        if (appendToBody && self.dropdownMenu) {\n            var pos = $position.positionElements(self.$element, self.dropdownMenu, 'bottom-left', true);\n            var css = {\n                top: pos.top + 'px',\n                display: isOpen ? 'block' : 'none'\n            };\n\n            var rightalign = self.dropdownMenu.hasClass('dropdown-menu-right');\n            if (!rightalign) {\n                css.left = pos.left + 'px';\n                css.right = 'auto';\n            } else {\n                css.left = 'auto';\n                css.right = (window.innerWidth - (pos.left + self.$element.prop('offsetWidth'))) + 'px';\n            }\n\n            self.dropdownMenu.css(css);\n        }\n\n        $animate[isOpen ? 'addClass' : 'removeClass'](self.$element, openClass).then(function () {\n            if (angular.isDefined(isOpen) && isOpen !== wasOpen) {\n                toggleInvoker($scope, { open: !!isOpen });\n            }\n        });\n        // Add extra classes to the toggle and menu elements\n        if (self.toggleElement && toggleOpenClass) {\n            $animate[isOpen ? 'addClass' : 'removeClass'](self.toggleElement, toggleOpenClass);\n        }\n        if (self.dropdownMenu && menuOpenClass) {\n            $animate[isOpen ? 'addClass' : 'removeClass'](self.dropdownMenu, menuOpenClass);\n        }\n\n        if (isOpen) {\n            if (self.dropdownMenuTemplateUrl) {\n                $templateRequest(self.dropdownMenuTemplateUrl).then(function (tplContent) {\n                    templateScope = scope.$new();\n                    $compile(tplContent.trim())(templateScope, function (dropdownElement) {\n                        var newEl = dropdownElement;\n                        self.dropdownMenu.replaceWith(newEl);\n                        self.dropdownMenu = newEl;\n                    });\n                });\n            }\n\n            scope.focusToggleElement();\n            dropdownService.open(scope);\n        } else {\n            if (self.dropdownMenuTemplateUrl) {\n                if (templateScope) {\n                    templateScope.$destroy();\n                }\n                var newEl = angular.element('<ul class=\"dropdown-menu\"></ul>');\n                self.dropdownMenu.replaceWith(newEl);\n                self.dropdownMenu = newEl;\n            }\n\n            dropdownService.close(scope);\n            self.selectedOption = null;\n        }\n\n        setIsOpen($scope, isOpen);\n    });\n\n    $scope.$on('$locationChangeSuccess', function () {\n        if (scope.getAutoClose() !== 'disabled') {\n            scope.isOpen = false;\n        }\n    });\n\n    $scope.$on('$destroy', function () {\n        scope.$destroy();\n    });\n}])\n\n.directive('dropdown', function () {\n    return {\n        controller: 'DropdownController',\n        link: function (scope, element, attrs, dropdownCtrl) {\n            dropdownCtrl.init(element);\n            element.addClass('dropdown');\n        }\n    };\n})\n\n.directive('dropdownMenu', function () {\n    return {\n        restrict: 'A',\n        require: '?^dropdown',\n        link: function (scope, element, attrs, dropdownCtrl) {\n            if (!dropdownCtrl) {\n                return;\n            }\n            var tplUrl = attrs.templateUrl;\n            if (tplUrl) {\n                dropdownCtrl.dropdownMenuTemplateUrl = tplUrl;\n            }\n            if (!dropdownCtrl.dropdownMenu) {\n                dropdownCtrl.dropdownMenu = element;\n            }\n\n            if (attrs.unpositioned) {\n                scope.$watch(function () {\n                    // Get the first positioned element that contains dropdown\n                    return element[0].offsetParent !== null;\n                }, function (value) {\n                    if (value) {\n                        // Offset is offset of positioned element + dropdown offset\n                        var offset = element[0].offsetParent.offsetLeft + element[0].parentElement.offsetLeft;\n\n                        var css = {\n                            left: offset + 'px'\n                        };\n\n                        element.css(css);\n                    }\n                });\n            }\n        }\n    };\n})\n\n.directive('keyboardNav', function () {\n    return {\n        restrict: 'A',\n        require: '?^dropdown',\n        link: function (scope, element, attrs, dropdownCtrl) {\n\n            element.bind('keydown', function (e) {\n\n                if ([38, 40].indexOf(e.which) !== -1) {\n\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    var elems = angular.element(element).find('a');\n\n                    switch (e.keyCode) {\n                        case (40): // Down\n                            if (!angular.isNumber(dropdownCtrl.selectedOption)) {\n                                dropdownCtrl.selectedOption = 0;\n                            } else {\n                                dropdownCtrl.selectedOption = (dropdownCtrl.selectedOption === elems.length - 1 ? dropdownCtrl.selectedOption : dropdownCtrl.selectedOption + 1);\n                            }\n                            break;\n                        case (38): // Up\n                            dropdownCtrl.selectedOption = (dropdownCtrl.selectedOption === 0 ? 0 : dropdownCtrl.selectedOption - 1);\n                            break;\n                    }\n                    elems[dropdownCtrl.selectedOption].focus();\n                }\n            });\n        }\n\n    };\n})\n\n.directive('dropdownToggle', function () {\n    return {\n        require: '?^dropdown',\n        link: function (scope, element, attrs, dropdownCtrl) {\n            if (!dropdownCtrl) {\n                return;\n            }\n\n            element.addClass('dropdown-toggle');\n\n            dropdownCtrl.toggleElement = element;\n\n            var toggleDropdown = function (event) {\n                event.preventDefault();\n\n                if (!element.hasClass('disabled') && !attrs.disabled) {\n                    scope.$apply(function () {\n                        dropdownCtrl.toggle();\n                    });\n                }\n            };\n\n            element.bind('click', toggleDropdown);\n\n            // WAI-ARIA\n            element.attr({ 'aria-haspopup': true, 'aria-expanded': false });\n            scope.$watch(dropdownCtrl.isOpen, function (isOpen) {\n                element.attr('aria-expanded', !!isOpen);\n            });\n\n            scope.$on('$destroy', function () {\n                element.unbind('click', toggleDropdown);\n            });\n        }\n    };\n});\n","/**\n * Ushahidi Angular Modal directive\n * Based on the Angular Bootstrap Modal directive\n */\nangular.module('ushahidi.common.modal', [])\n\n.directive('modal', [\n    '$translate',\n    '$rootScope',\nfunction (\n    $translate,\n    $rootScope\n) {\n    return {\n        restrict: 'E',\n        transclude: true,\n        template: require('./modal.html'),\n\n        scope: {\n            title: '@?',\n            icon: '=?',\n            visible: '=?',\n            closeOnOverlayClick: '=?',\n            showCloseButton: '=?'\n        },\n\n        controller: ['$scope', '$attrs', '$parse', '$timeout', function ($scope, $attrs, $parse, $timeout) {\n            $scope.iconPath = $scope.icon ? '/img/iconic-sprite.svg#' + $scope.icon : '';\n\n            var classChangePromise = null;\n            $scope.iconPath = require('ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg') + '#' + $scope.icon;\n            $scope.classVisible = false;\n            $scope.modalOffset = 0;\n            $scope.title = $translate.instant($scope.title);\n\n            // If closeOnOverlayClick isn't passed, default to true\n            if (typeof $scope.closeOnOverlayClick === 'undefined') {\n                $scope.closeOnOverlayClick = true;\n            }\n\n            // If showCloseButton isn't passed, default to true\n            if (typeof $scope.showCloseButton === 'undefined') {\n                $scope.showCloseButton = true;\n            }\n\n            $scope.$watch('visible', function (state, previousState) {\n                if (state === true) {\n                    if (!$scope.classVisible) {\n                        // Animate in.\n                        $scope.classVisible = true;\n                        $rootScope.toggleModalVisible();\n\n                        // Set offset based on window position\n                        // @todo move offset to a config param\n                        var windowYpos = window.scrollY || document.documentElement.scrollTop || document.body.scrollTop;\n                        $scope.modalOffset = (windowYpos + 40) + 'px';\n                        // @todo set max height\n                        // $('.modal-body').css('max-height', $(window).height() * 0.66);\n\n                        if (classChangePromise) {\n                            $timeout.cancel(classChangePromise);\n                        }\n                    }\n                } else if (state === false) {\n                    if ($scope.classVisible) {\n                        // Animate out.\n                        $scope.classVisible = false;\n                        $rootScope.toggleModalVisible();\n\n                        if (classChangePromise) {\n                            $timeout.cancel(classChangePromise);\n                        }\n\n                        classChangePromise = $timeout(function () {\n                            $scope.classDetached = true;\n                        }, 400);\n                    }\n                }\n            });\n\n            $scope.closeModal = function (context) {\n                if (context === 'overlay' && $scope.closeOnOverlayClick !== true) {\n                    return;\n                }\n\n                $scope.visible = false;\n            };\n\n            $scope.$on('$destroy', function (event) {\n                if (classChangePromise) {\n                    $timeout.cancel(classChangePromise);\n                }\n            });\n        }]\n    };\n}]);\n","module.exports = \"<div ng-show=\\\"classVisible\\\" class=\\\"modal\\\" style=\\\"display: block;\\\">\\n    <div class=\\\"modal-window\\\" ng-style=\\\"{ top : modalOffset }\\\">\\n        <button class=\\\"button-beta button-flat modal-trigger modal-trigger-close\\\" ng-show=\\\"showCloseButton\\\" ng-click=\\\"closeModal()\\\">\\n            <svg class=\\\"iconic\\\">\\n                <!-- TODO: fix icon to be settable -->\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#x\\\"></use>\\n            </svg>\\n            <span class=\\\"hidden\\\" translate>modal.button.close</span>\\n        </button>\\n        <h3 class=\\\"modal-title\\\" ng-if=\\\"title\\\">\\n            <svg class=\\\"iconic\\\" ng-if=\\\"icon\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"{{iconPath}}\\\"></use>\\n            </svg>\\n            <span class=\\\"label\\\">\\n                {{ title }}\\n            </span>\\n        </h3>\\n        <ng-transclude></ng-transclude>\\n    </div>\\n    <div class=\\\"modal-overlay\\\"></div>\\n</div>\\n\";","angular.module('ushahidi.common.custom-on-change', [])\n\n.directive('customOnChange', function () {\n    return {\n        restricet: 'A',\n        link: function ($scope, $element, $attrs) {\n            var onChangeFunc = $scope.$eval($attrs.customOnChange);\n            $element.bind('change', onChangeFunc);\n        }\n    };\n});\n","angular.module('ushahidi.user-profile', [])\n.directive('accountSettings', require('./account-settings.directive.js'))\n.directive('adminUserSetup', require('./admin-user-setup.directive'))\n.directive('userProfile', require('./user-profile.directive.js'))\n.directive('notifications', require('./notifications.directive.js'))\n;\n","module.exports = [\n    '$rootScope',\n    'UserEndpoint',\n    'ModalService',\nfunction (\n    $rootScope,\n    UserEndpoint,\n    ModalService\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        template: require('./account_settings.html'),\n        link: function (scope) {\n            scope.user = UserEndpoint.getFresh({id: 'me'});\n\n            scope.general = true;\n            scope.notifications = false;\n\n            scope.showGeneral = function () {\n                scope.general = true;\n                scope.notifications = false;\n            };\n\n            scope.showNotifications = function () {\n                scope.general = false;\n                scope.notifications = true;\n            };\n\n            scope.$on('event:close', function () {\n                ModalService.close();\n            });\n        }\n    };\n}];\n","module.exports = \"<div>\\n  <h3 class=\\\"modal-title\\\">\\n    {{user.realname || user.email}} <em translate>user_profile.title</em>\\n  </h3>\\n\\n  <nav class=\\\"tabs-menu init\\\">\\n    <ul>\\n      <li ng-class=\\\"{'active': general}\\\">\\n        <a ng-click=\\\"showGeneral()\\\" translate>\\n          user_profile.nav.general\\n        </a>\\n      </li>\\n      <li ng-class=\\\"{'active': notifications}\\\">\\n        <a ng-click=\\\"showNotifications()\\\" translate>\\n          user_profile.nav.notifications\\n        </a>\\n      </li>\\n    </ul>\\n  </nav>\\n\\n  <div class=\\\"modal-body\\\">\\n    <user-profile ng-show=\\\"general\\\"></user-profile>\\n    <notifications ng-show=\\\"notifications\\\"></notifications>\\n  </div>\\n</div>\\n\";","module.exports = [\n    '$rootScope',\n    'UserEndpoint',\n    'ModalService',\n    function (\n        $rootScope,\n        UserEndpoint,\n        ModalService\n    ) {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {},\n            template: require('./admin-user-setup.html'),\n            link: function (scope) {\n                scope.$on('event:close', function () {\n                    ModalService.close();\n                });\n            }\n        };\n    }];\n","module.exports = \"<div>\\n    <div class=\\\"modal-body\\\">\\n        <user-profile admin-user-setup=\\\"true\\\"></user-profile>\\n    </div>\\n</div>\";","module.exports = [\n    'UserEndpoint',\n    'Notify',\n    'Session',\n    '_',\n    '$translate',\n    function (\n        UserEndpoint,\n        Notify,\n        Session,\n        _,\n        $translate\n    ) {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                adminUserSetup: '='\n            },\n            template: require('./user-profile.html'),\n            link: function ($scope) {\n                $scope.state = {\n                    success: false,\n                    processing: false,\n                    changingPassword: false,\n                    password: ''\n                };\n\n                $scope.saveUser = function (user) {\n                    $scope.state.success = false;\n                    $scope.state.processing = true;\n\n                    var userPayload = angular.copy(user);\n\n                    // If we're not changing the password, drop that property from payload (just in case.)\n                    if ($scope.state.changingPassword) {\n                        userPayload.password = $scope.state.password;\n                    }\n\n                    var update = UserEndpoint.update({ id: 'me' }, userPayload);\n\n                    update.$promise.then(function (user) {\n                        Notify.notify('user_profile.update_success');\n                        Session.setSessionDataEntries({'email': user.email, 'realname': user.realname});\n\n                        $scope.state.success = true;\n                        $scope.state.processing = false;\n\n                        // Collapse password change form field.\n                        $scope.state.changingPassword = false;\n                        $scope.state.password = '';\n\n                        $scope.user = user;\n                        $scope.$emit('event:close');\n                    }, function (errorResponse) { // error\n                        Notify.apiErrors(errorResponse);\n                        $scope.state.processing = false;\n                    });\n                };\n\n                $scope.cancel = function () {\n                    $scope.$emit('event:close');\n                };\n\n                $scope.user = UserEndpoint.getFresh({id: 'me'});\n            }\n        };\n    }];\n","module.exports = \"<div>\\n        <p class=\\\"alert confirmation\\\" ng-show=\\\"state.success\\\" translate>user_profile.update_success</p>\\n        <form name=\\\"form\\\">\\n          <div class=\\\"form-field\\\">\\n              <label translate=\\\"nav.role\\\">Role</label>\\n              <em>{{user.role}}</em>\\n          </div>  \\n          <div class=\\\"form-field\\\">\\n            <label class=\\\"input-label\\\"\\n                ng-class=\\\"{ 'error': form.full_name.$invalid && form.full_name.$dirty, 'success': form.full_name.$valid }\\\"\\n                for=\\\"full_name\\\" translate>user.full_name</label>\\n            <input id=\\\"full_name\\\" name=\\\"full_name\\\" type=\\\"text\\\"\\n                ng-class=\\\"{ 'error': form.full_name.$invalid && form.full_name.$dirty }\\\"\\n                ng-disabled=\\\"state.processing\\\"\\n                placeholder=\\\"{{ 'user_create.full_name'|translate }}\\\"\\n                ng-maxlength=\\\"150\\\"\\n                ng-model=\\\"user.realname\\\"\\n                required>\\n            <p ng-repeat=\\\"(error, value) in form.full_name.$error\\\"\\n                ng-show=\\\"form.full_name.$dirty\\\"\\n                class=\\\"alert error\\\"\\n               translate=\\\"{{'user.valid.full_name.' + error}}\\\"></p>\\n          </div>\\n\\n          <div class=\\\"form-field\\\">\\n            <label class=\\\"input-label\\\"\\n                ng-class=\\\"{ 'error': form.email.$invalid && form.email.$dirty, 'success': form.email.$valid }\\\"\\n                for=\\\"email\\\" translate>user.email</label>\\n            <input id=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\"\\n                ng-class=\\\"{ 'error': form.email.$invalid && form.email.$dirty }\\\"\\n                ng-disabled=\\\"state.processing\\\"\\n                placeholder=\\\"{{ 'user_create.email'|translate }}\\\"\\n                ng-maxlength=\\\"150\\\"\\n                ng-model=\\\"user.email\\\"\\n                required>\\n            <p ng-repeat=\\\"(error, value) in form.email.$error\\\"\\n                ng-show=\\\"form.email.$dirty||adminUserSetup\\\"\\n                class=\\\"alert error\\\"\\n               translate=\\\"{{'user.valid.email.' + error}}\\\"></p>\\n            </div>\\n\\n            <p ng-hide=\\\"state.changingPassword\\\"><a href class=\\\"cta change-password\\\" ng-click=\\\"state.changingPassword = !state.changingPassword\\\" translate>user_profile.update_password</a></p>\\n\\n            <div ng-if=\\\"state.changingPassword\\\">\\n                <label class=\\\"input-label\\\"\\n                    ng-class=\\\"{ 'error': form.password.$invalid && form.password.$dirty, 'success': form.password.$valid }\\\"\\n                    for=\\\"password\\\" translate>user.password</label>\\n                <input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\"\\n                    ng-class=\\\"{ 'error': form.password.$invalid && form.password.$dirty }\\\"\\n                    ng-disabled=\\\"state.processing\\\"\\n                    ng-minlength=\\\"7\\\"\\n                    ng-maxlength=\\\"72\\\"\\n                    ng-model=\\\"state.password\\\"\\n                    required>\\n                <p ng-repeat=\\\"(error, value) in form.password.$error\\\"\\n                    ng-show=\\\"form.password.$dirty\\\"\\n                    class=\\\"alert error\\\"\\n                    translate=\\\"{{'user.valid.password.' + error}}\\\"></p>\\n            </div>\\n\\n            <div class=\\\"modal-actions\\\">\\n                <div class=\\\"form-field\\\">\\n                  <button ng-if=\\\"!adminUserSetup\\\" type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancel()\\\" translate>\\n                    user_profile.button.cancel\\n                  </button>\\n\\n                  <button type=\\\"submit\\\" class=\\\"button button-alpha\\\"\\n                          ng-click=\\\"saveUser(user)\\\" ng-disabled=\\\"form.$invalid || state.processing\\\">\\n                    <div class=\\\"loading\\\" ng-show=\\\"saving\\\"><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div></div>\\n                    <span translate>user_profile.button.save</span>\\n                  </button>\\n\\n                </div>\\n            </div>\\n        </form>\\n</div>\\n\";","module.exports = [\n    'UserEndpoint',\n    'ContactEndpoint',\n    'CollectionEndpoint',\n    'SavedSearchEndpoint',\n    'NotificationEndpoint',\n    'Notify',\n    '_',\n    '$translate',\n    '$q',\n    function (\n        UserEndpoint,\n        ContactEndpoint,\n        CollectionEndpoint,\n        SavedSearchEndpoint,\n        NotificationEndpoint,\n        Notify,\n        _,\n        $translate,\n        $q\n    ) {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {},\n            template: require('./notifications.html'),\n            link: function ($scope, elem) {\n\n                var loadNotifications = function () {\n                    NotificationEndpoint.query({user: 'me'}).$promise.then(function (notifications) {\n                        _.forEach(notifications, function (notification) {\n                            // Add name of the subscribed collection\n                            CollectionEndpoint.get({collectionId: notification.set.id}, function (collection) {\n                                notification.name = collection.name;\n                            }, function () {\n                                // Try to get the SavedSearch name instead\n                                SavedSearchEndpoint.get({id: notification.set.id}, function (savedSearch) {\n                                    notification.name = savedSearch.name;\n                                });\n                            });\n                        });\n\n                        $scope.notifications = notifications;\n                    });\n                };\n\n                var loadContacts = function () {\n                    ContactEndpoint.queryFresh({user: 'me'}).$promise.then(function (contacts) {\n                        _.forEach(contacts, function (contact) {\n                            // Save the original contact values\n                            // and use them to track changes\n                            contact.original = {\n                                contact: contact.contact,\n                                can_notify: contact.can_notify\n                            };\n\n                            // make inactive by default\n                            contact.active = false;\n                        });\n\n                        // Grab the user registration email if there are no contacts\n                        if (contacts.length === 0) {\n                            UserEndpoint.get({id: 'me'}, function (user) {\n                                contacts.push({\n                                    type: 'email',\n                                    contact: user.email,\n                                    original: user.email,\n                                    active: false,\n                                    isLoginEmail: true\n                                });\n                            });\n                        }\n\n                        $scope.contacts = contacts;\n                    });\n                };\n\n                var saveContact = function (contact) {\n                    if (!contact.id) {\n                        // Enable notifications for new contacts by default\n                        contact.can_notify = true;\n                    }\n\n                    return ContactEndpoint.saveCache(contact).$promise;\n                };\n\n                var contactHasChanged = function (contact) {\n                    return contact.original.contact !== contact.contact ||\n                        contact.original.can_notify !== contact.can_notify;\n\n                };\n\n                loadContacts();\n                loadNotifications();\n\n                $scope.deleteNotification = function (notification) {\n                    Notify.confirmDelete('notify.notification.delete_confirm').then(function () {\n                        NotificationEndpoint.delete({id: notification.id}).$promise.then(function () {\n                            Notify.notify('notify.notification.destroy_success', {name: notification.name});\n\n                            // Reload notifications\n                            loadNotifications();\n                        }, function () {\n                            Notify.error('notification.error_message');\n                        });\n                    });\n                };\n\n                $scope.deleteContact = function (contact) {\n                    Notify.confirmDelete('notify.contact.delete_confirm').then(function () {\n                        ContactEndpoint.delete({id: contact.id}).$promise.then(function () {\n                            Notify.notify('notify.contact.destroy_success');\n\n                            // Reload Contacts\n                            loadContacts();\n                        }, function () {\n                            Notify.error('contact.error_message');\n                        });\n                    });\n                };\n\n                // Default contact type for new contacts\n                $scope.contact = {\n                    type: 'email',\n                    active: false\n                };\n\n                // New contact listing is inactive by default\n                $scope.active = false;\n\n                $scope.toggleActive = function (contact) {\n                    contact.active = !contact.active;\n                };\n\n                // Only enable Save if active contacts are valid\n                $scope.canUpdate = function () {\n                    // Get contacts that are currently being edited\n                    var activeContacts = _.filter($scope.contacts, function (contact) {\n                        return contact.active === true;\n                    });\n\n                    return !_.isEmpty(activeContacts) && _.every(activeContacts, function (contact) {\n                        return contactHasChanged(contact) && !_.isUndefined(contact.contact);\n                    });\n                };\n\n                $scope.canAdd = function () {\n                    if ($scope.contact.active) {\n                        return !_.isUndefined($scope.contact.contact);\n                    }\n\n                    // Check if you can add the login email address as a contact\n                    return _.find($scope.contacts, function (contact) {\n                        return !_.isUndefined(contact.contact) && contact.isLoginEmail;\n                    });\n                };\n\n                $scope.saveContacts = function () {\n                    var validContacts,\n                        promises = [];\n\n                    $scope.saving = true;\n\n                    // Get Valid contacts\n                    validContacts = _.filter($scope.contacts, function (contact) {\n                        return !_.isUndefined(contact.contact);\n                    });\n\n                    // Add new contact if valid\n                    if (!_.isUndefined($scope.contact.contact)) {\n                        validContacts.push($scope.contact);\n                    }\n\n                    _.forEach(validContacts, function (contact) {\n                        promises.push(saveContact(contact));\n                    });\n\n                    $q.all(promises).then(function () {\n                        Notify.notify('notify.contact.save_success');\n\n                        $scope.$emit('event:close');\n                    }, function () {\n                        Notify.error('contact.error_message');\n                    });\n\n                    $scope.saving = false;\n                };\n\n                $scope.cancel = function () {\n                    $scope.$emit('event:close');\n                };\n            }\n        };\n    }];\n","module.exports = \"<div class=\\\"account-tab\\\">\\n  <div class=\\\"listing\\\">\\n\\n    <h3 class=\\\"listing-heading\\\" ng-if=\\\"contacts.length !== 0\\\" translate>notification.contacts_heading</h3>\\n\\n    <div class=\\\"listing-item\\\"\\n         ng-repeat=\\\"contact in contacts\\\"\\n         ng-class=\\\"{'active': contact.active}\\\">\\n      <div class=\\\"listing-item-secondary\\\">\\n        <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"toggleActive(contact)\\\">\\n          <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n          </svg>\\n          <span class=\\\"button-label\\\" translate>contact.configure</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"listing-item-primary\\\">\\n        <h2 class=\\\"listing-item-title\\\">\\n          {{contact.contact}}\\n          <span class=\\\"status-indicator\\\" ng-class=\\\"{green: contact.can_notify}\\\"></span>\\n        </h2>\\n      </div>\\n\\n      <!-- Edit existing contact -->\\n      <div class=\\\"listing-item-body\\\">\\n\\n        <div class=\\\"form-field switch\\\">\\n          <label translate>notification.send_to_address</label>\\n          <div class=\\\"toggle-switch\\\">\\n            <input class=\\\"tgl\\\"\\n                   id=\\\"{{contact.id || false}}\\\"\\n                   type=\\\"checkbox\\\"\\n                   ng-model=\\\"contact.can_notify\\\">\\n            <label class=\\\"tgl-btn\\\" for=\\\"{{contact.id || false}}\\\"></label>\\n          </div>\\n        </div>\\n\\n        <form name=\\\"editContactForm\\\">\\n\\n          <div class=\\\"form-field\\\">\\n            <label ng-if=\\\"contact.type === 'email'\\\"\\n                   class=\\\"input-label\\\"\\n                   ng-class=\\\"{ 'error': editContactForm.contact.$invalid && editContactForm.contact.$dirty, 'success': editContactForm.contact.$valid }\\\"\\n                   for=\\\"contact\\\" translate>contact.edit_email_address</label>\\n            <label ng-if=\\\"contact.type === 'phone'\\\"\\n                   class=\\\"input-label\\\"\\n                   for=\\\"contact\\\" translate>contact.edit_phone_number</label>\\n            <p ng-repeat=\\\"(error, value) in editContactForm.contact.$error\\\"\\n               ng-if=\\\"contact.type === 'email'\\\"\\n               ng-show=\\\"editContactForm.contact.$dirty\\\"\\n               class=\\\"alert error\\\"\\n               translate=\\\"{{'contact.valid.email.' + error}}\\\"></p>\\n            <p ng-repeat=\\\"(error, value) in editContactForm.contact.$error\\\"\\n               ng-if=\\\"contact.type === 'phone'\\\"\\n               ng-show=\\\"editContactForm.contact.$dirty\\\"\\n               class=\\\"alert error\\\"\\n               translate=\\\"{{'contact.valid.phone.' + error}}\\\"></p>\\n\\n            <input name=\\\"contact\\\"\\n                   id=\\\"contact\\\"\\n                   ng-if=\\\"contact.type === 'email'\\\"\\n                   type=\\\"email\\\"\\n                   ng-class=\\\"{ 'error': editContactForm.contact.$invalid && editContactForm.contact.$dirty }\\\"\\n                   ng-maxlength=\\\"150\\\"\\n                   ng-model=\\\"contact.contact\\\"\\n                   required>\\n            <input name=\\\"contact\\\"\\n                   id=\\\"contact\\\"\\n                   ng-if=\\\"contact.type === 'phone'\\\"\\n                   type=\\\"text\\\"\\n                   ng-class=\\\"{ 'error': editContactForm.contact.$invalid && editContactForm.contact.$dirty }\\\"\\n                   ng-maxlength=\\\"25\\\"\\n                   ng-model=\\\"contact.contact\\\"\\n                   ng-pattern=\\\"/^\\\\+?\\\\d+$/\\\"\\n                   required>\\n          </div>\\n        </form>\\n\\n        <div class=\\\"form-field\\\" ng-if=\\\"!contact.isLoginEmail\\\">\\n          <button class=\\\"button-destructive\\\" ng-click=\\\"deleteContact(contact)\\\" translate>contact.button.delete</button>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <!-- Add contact-->\\n\\n    <div class=\\\"listing-item\\\"\\n         ng-class=\\\"{'active': contact.active}\\\"\\n         >\\n      <div class=\\\"listing-item-primary\\\">\\n        <h2 class=\\\"listing-item-title\\\">\\n          <a class=\\\"button button-flat\\\"\\n             ng-click=\\\"toggleActive(contact)\\\"\\n             translate>\\n            <svg class=\\\"iconic\\\">\\n              <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n            </svg>\\n            contact.button.add\\n          </a>\\n        </h2>\\n      </div>\\n\\n      <div class=\\\"listing-item-body\\\">\\n        <form name=\\\"addContactForm\\\">\\n          <div class=\\\"form-field\\\">\\n            <label class=\\\"radio-label\\\">\\n              <input ng-model=\\\"contact.type\\\"\\n                     name=\\\"email\\\" value=\\\"email\\\" id=\\\"email\\\" type=\\\"radio\\\"\\n                     checked=\\\"checked\\\">\\n              {{'contact.type.email' | translate}}\\n            </label>\\n          </div>\\n\\n          <div class=\\\"form-field\\\">\\n            <label class=\\\"radio-label\\\">\\n              <input ng-model=\\\"contact.type\\\"\\n                     name=\\\"phone\\\" value=\\\"phone\\\" id=\\\"phone\\\" type=\\\"radio\\\">\\n              {{'contact.type.phone' | translate}}\\n            </label>\\n          </div>\\n\\n          <div class=\\\"form-field\\\">\\n            <label ng-if=\\\"contact.type === 'email'\\\"\\n                   class=\\\"input-label\\\"\\n                   ng-class=\\\"{ 'error': addContactForm.contact.$invalid && addContactForm.contact.$dirty, 'success': addContactForm.contact.$valid }\\\"\\n                   for=\\\"contact\\\" translate>contact.add_email_address</label>\\n            <label ng-if=\\\"contact.type === 'phone'\\\"\\n                   class=\\\"input-label\\\"\\n                   for=\\\"contact\\\" translate>contact.add_phone_number</label>\\n\\n            <p ng-repeat=\\\"(error, value) in addContactForm.contact.$error\\\"\\n               ng-if=\\\"contact.type === 'email'\\\"\\n               ng-show=\\\"addContactForm.contact.$dirty\\\"\\n               class=\\\"alert error\\\"\\n               translate=\\\"{{'contact.valid.email.' + error}}\\\"></p>\\n            <p ng-repeat=\\\"(error, value) in addContactForm.contact.$error\\\"\\n               ng-if=\\\"contact.type === 'phone'\\\"\\n               ng-show=\\\"addContactForm.contact.$dirty\\\"\\n               class=\\\"alert error\\\"\\n               translate=\\\"{{'contact.valid.phone.' + error}}\\\"></p>\\n            <input name=\\\"contact\\\"\\n                   id=\\\"contact\\\"\\n                   ng-if=\\\"contact.type === 'email'\\\"\\n                   type=\\\"email\\\"\\n                   placeholder=\\\"{{'contact.add_email_address' | translate}}\\\"\\n                   ng-class=\\\"{ 'error': addContactForm.contact.$invalid && addContactForm.contact.$dirty }\\\"\\n                   ng-maxlength=\\\"150\\\"\\n                   ng-model=\\\"contact.contact\\\"\\n                   required>\\n            <input name=\\\"contact\\\"\\n                   id=\\\"contact\\\"\\n                   ng-if=\\\"contact.type === 'phone'\\\"\\n                   type=\\\"text\\\"\\n                   placeholder=\\\"{{'contact.add_phone_number' | translate}}\\\"\\n                   ng-class=\\\"{ 'error': addContactForm.contact.$invalid && addContactForm.contact.$dirty }\\\"\\n                   ng-maxlength=\\\"25\\\"\\n                   ng-model=\\\"contact.contact\\\"\\n                   ng-pattern=\\\"/^\\\\d+$/\\\"\\n                   required>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Notifications -->\\n\\n  <div class=\\\"listing\\\" ng-if=\\\"notifications.length !== 0\\\">\\n    <h3 class=\\\"listing-heading\\\" translate>notification.notifications_heading</h3>\\n\\n    <div ng-repeat=\\\"notification in notifications\\\"\\n         class=\\\"listing-item\\\">\\n      <div class=\\\"listing-item-secondary\\\">\\n        <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"deleteNotification(notification)\\\">\\n          <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n          </svg>\\n          <span class=\\\"button-label\\\" translate>notification.button.delete</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"listing-item-primary\\\">\\n        <div class=\\\"listing-item-image\\\">\\n          <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#star\\\"></use>\\n          </svg>\\n        </div>\\n\\n        <h2 class=\\\"listing-item-title\\\">{{notification.name}}</h2>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n    <div class=\\\"modal-actions\\\">\\n      <div class=\\\"form-field\\\">\\n        <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancel()\\\" translate>user_profile.button.cancel</button>\\n        <button type=\\\"button\\\" class=\\\"button-alpha\\\"\\n                ng-disabled=\\\"!canAdd() && !canUpdate()\\\"\\n                ng-click=\\\"saveContacts()\\\">\\n          <div class=\\\"loading\\\" ng-show=\\\"saving\\\"><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div><div class=\\\"line\\\"></div></div>\\n          <span translate>user_profile.button.save</span>\\n        </button>\\n\\n      </div>\\n    </div>\\n</div>\\n\\n\";","angular.module('ushahidi.main', [\n    'ushahidi.posts',\n    'ushahidi.activity'\n]);\n\nrequire('./posts/posts-module.js');\nrequire('./activity/activity-module.js');\n","angular.module('ushahidi.posts', [])\n\n// Shared directives + services\n.directive('postActions', require('./common/post-actions.directive.js'))\n.directive('postMetadata', require('./common/post-metadata.directive.js'))\n.service('PostMetadataService', require('./common/post-metadata.service.js'))\n.service('PostSurveyService', require('./common/post-survey.service.js'))\n\n// Post Locking\n.service('PostLockService', require('./common/post-lock.service.js'))\n.directive('postLock', require('./common/post-lock.directive.js'))\n\n// Detail Screen\n.directive('postMessages', require('./detail/post-messages.directive.js'))\n.directive('postAddForm', require('./detail/post-add-form.directive.js'))\n.directive('postValue', require('./detail/post-value.directive.js'))\n.directive('postMediaValue', require('./detail/post-media-value.directive.js'))\n.directive('postVideoView', require('./detail/post-video-value.directive.js'))\n.directive('postDetailMap', require('./detail/map.directive.js'))\n.directive('postDetailData', require('./detail/post-detail-data.directive.js'))\n.service('PostActionsService', require('./common/post-actions.service.js'))\n\n// Create / Edit Screens\n.service('PostEntity', require('./modify/post-entity.service.js'))\n.service('PostEditService', require('./modify/post-edit.service.js'))\n.service('MediaEditService', require('./modify/media-edit.service.js'))\n.directive('postMedia', require('./modify/post-media.directive.js'))\n.directive('postVideoInput', require('./modify/post-video.directive.js'))\n.directive('postDatetime', require('./modify/post-datetime-value.directive.js'))\n.directive('postLocation', require('./modify/location.directive.js'))\n.directive('postRelation', require('./modify/post-relation.directive.js'))\n\n// Post editing workflows\n.directive('postEditor', require('./modify/post-editor.directive.js'))\n.directive('postValueEdit', require('./modify/post-value-edit.directive.js'))\n.directive('postCategoryEditor', require('./modify/post-category-editor.js'))\n.directive('postTabs', require('./modify/post-tabs.directive.js'))\n.directive('postToolbox', require('./modify/post-toolbox.directive.js'))\n.directive('filterPostSortingOptions', require('./views/filters/filter-post-sorting-options.directive.js'))\n.directive('filterPostOrderAscDesc', require('./views/filters/filter-post-order-asc-desc.directive.js'))\n.directive('filterUnlockedOnTop', require('./views/filters/filter-unlocked-on-top.directive.js'))\n.directive('postDataEditor', require('./modify/post-data-editor.directive.js'))\n\n// Timeline, data and Map screen\n.service('PostViewService', require('./views/post-view.service.js'))\n.directive('postViewMap', require('./views/post-view-map.directive.js'))\n.directive('postViewCreate', require('./views/post-view-create.directive.js'))\n.directive('postCard', require('./views/post-card.directive.js'))\n.directive('postPreviewMedia', require('./views/post-preview-media.directive.js'))\n.directive('addPostButton', require('./views/add-post-button.directive.js'))\n.directive('addPostSurveyList', require('./views/add-post-survey-list.directive.js'))\n.directive('addPostTextButton', require('./views/add-post-text-button.directive.js'))\n.directive('modeContext', require('./views/mode-context.directive.js'))\n.directive('modeContextFormFilter', require('./views/mode-context-form-filter.directive.js'))\n.directive('filterBySurvey', require('./views/filter-by-survey.directive.js'))\n.directive('filterBySurveyDropdown', require('./views/filter-by-survey-dropdown.directive.js'))\n.directive('postToolbar', require('./views/post-toolbar.directive.js'))\n.directive('filterByDatasource', require('./views/filter-by-datasource.directive.js'))\n.directive('postViewData', require('./views/post-view-data.directive.js'))\n// Filters\n.directive('filterPosts', require('./views/filters/filter-posts.directive.js'))\n.directive('filterCategory', require('./views/filters/filter-category.directive.js'))\n.directive('filterDate', require('./views/filters/filter-date.directive.js'))\n.directive('filterForm', require('./views/filters/filter-form.directive.js'))\n.directive('filterVisibleTo', require('./views/filters/filter-visible-to.directive.js'))\n.directive('filterStatus', require('./views/filters/filter-status.directive.js'))\n.directive('filterSource', require('./views/filters/filter-source.directive.js'))\n.directive('filterLocation', require('./views/filters/filter-location.directive.js'))\n.directive('filterHasLocation', require('./views/filters/filter-has-location.directive.js'))\n.directive('postActiveSearchFilters', require('./views/filters/active-search-filters.directive.js'))\n.service('PostFilters', require('./views/post-filters.service.js'))\n.service('FilterTransformers', require('./views/filters/filter-transformers.service.js'))\n.directive('filtersDropdown', require('./views/filters/filters-dropdown.directive.js'))\n.directive('filterSavedSearch', require('./views/filters/filter-saved-search.directive.js'))\n.directive('sortAndFilterCounter', require('./views/filters/sort-and-filter-counter.directive.js'))\n// Share\n.directive('postShare', require('./views/share/post-share.directive.js'))\n.directive('shareMenu', require('./views/share/share-menu.directive.js'))\n.directive('shareMenuModal', require('./views/share/share-menu-modal.directive.js'))\n.directive('postExport', require('./views/share/post-export.directive.js'))\n// @todo move elsewhere? Used in post-view and activity\n.directive('postViewUnavailable', require('./views/post-view-unavailable.directive.js'))\n\n\n.directive('savedSearchEditor', require('./savedsearches/editor-directive.js'))\n.directive('savedSearchCreate', require('./savedsearches/create-directive.js'))\n.directive('savedSearchUpdate', require('./savedsearches/update-directive.js'))\n.directive('savedSearchModal', require('./savedsearches/saved-search-modal.directive.js'))\n.directive('savedSearchListEditorModal', require('./savedsearches/saved-search-list-editor-modal.directive.js'))\n\n.directive('savedSearchModeContext', require('./savedsearches/mode-context.directive.js'))\n\n.service('CollectionsService', require('./collections/collections.service.js'))\n.directive('collectionModeContext', require('./collections/mode-context.directive.js'))\n.directive('collectionEditor', require('./collections/editor.directive.js'))\n.directive('collectionListing', require('./collections/listing.directive.js'))\n.directive('collectionToggleButton', require('./common/collection-toggle/collection-toggle-button.js'))\n.directive('collectionToggleLink', require('./common/collection-toggle/collection-toggle-link.js'))\n\n.config(require('./posts-routes.js'))\n\n.run(['Leaflet', function (L) {\n    L.Icon.Default.imagePath = '/img';\n}])\n;\n","module.exports = PostActionsDirective;\n\nPostActionsDirective.$inject = [\n    '$rootScope',\n    'PostEndpoint',\n    'Notify',\n    '$location',\n    '$state',\n    'PostActionsService',\n    'PostLockService',\n    '_'\n    ];\nfunction PostActionsDirective(\n    $rootScope,\n    PostEndpoint,\n    Notify,\n    $location,\n    $state,\n    PostActionsService,\n    PostLockService,\n    _) {\n    return {\n        restrict: 'E',\n        replace: false,\n        scope: {\n            post: '='\n        },\n        template: require('./post-actions.html'),\n        link: PostActionsLink\n    };\n\n    function PostActionsLink($scope) {\n        $scope.deletePost = deletePost;\n        $scope.updateStatus = updateStatus;\n        $scope.openEditMode = openEditMode;\n        $scope.postIsUnlocked = postIsUnlocked;\n\n        activate();\n\n        function activate() {\n            $scope.statuses = PostActionsService.getStatuses();\n        }\n\n        function deletePost() {\n            PostActionsService.delete($scope.post).then(function () {\n                $rootScope.$broadcast('event:edit:post:status:data:mode:saveSuccess', {post: $scope.post, deleted: true});\n                // If we're not already on some of the posts views\n                if (!$state.$current.includes.posts) {\n                    // Redirect to list\n                    $state.go('posts.data');\n                } else if ($state.$current.includes['posts.map']) {\n                    // only map needs to reload\n                    $state.reload();\n                }\n\n            });\n        }\n\n        function postIsUnlocked() {\n            return !PostLockService.isPostLockedForCurrentUser($scope.post);\n        }\n\n        function openEditMode(postId) {\n            // Ensure Post is not locked before proceeding\n            if (!postIsUnlocked()) {\n                Notify.error('post.already_locked');\n                return;\n            }\n\n            $state.go('posts.data.edit', {postId: postId});\n        }\n\n        function updateStatus(status) {\n            $scope.post.status = status;\n            PostEndpoint.update($scope.post).$promise.then(function () {\n                // @uirouter-refactor fix this to work with new states\n                // adding post to broadcast to make sure it gets filtered out from post-list if it does not match the filters.\n                $rootScope.$broadcast('event:edit:post:status:data:mode:saveSuccess', {post: $scope.post});\n                Notify.notify('notify.post.save_success', { name: $scope.post.title });\n            }, function (errorResponse) {\n                Notify.apiErrors(errorResponse);\n            });\n        }\n    }\n}\n","module.exports = \"<div class=\\\"postcard-actions\\\" dropdown >\\n  <button class=\\\"button-gamma button-flat init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle ng-click=\\\"$event.stopPropagation()\\\">\\n      <svg class=\\\"iconic\\\">\\n          <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#ellipses\\\"></use>\\n      </svg>\\n      <span class=\\\"hidden\\\">More</span>\\n  </button>\\n  <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n    <ul>\\n\\n\\n        <li ng-show=\\\"(post.allowed_privileges.indexOf('update') !== -1) && postIsUnlocked()\\\">\\n          <a ng-click=\\\"openEditMode(post.id)\\\">\\n              <svg class=\\\"iconic\\\">\\n                  <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#pencil\\\"></use>\\n              </svg>\\n              <span class=\\\"label\\\" translate=\\\"nav.edit\\\">Edit</span>\\n          </a>\\n        </li>\\n        <li>\\n            <!-- Collection toggle link -->\\n            <collection-toggle-link post=\\\"post\\\"></collection-toggle-link>\\n        </li>\\n        <li>\\n            <post-share post-id=\\\"post.id\\\"></post-share>\\n        </li>\\n      <!-- <li>\\n        <a href=\\\"\\\">\\n          <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#task\\\"></use>\\n          </svg>\\n          <span class=\\\"label\\\">Assign to ...</span>\\n        </a>\\n      </li>\\n      -->\\n    </ul>\\n    <div class=\\\"divider\\\" ng-show=\\\"(post.allowed_privileges.indexOf('change_status') !== -1 || post.allowed_privileges.indexOf('update') !== -1 ) && postIsUnlocked()\\\"></div>\\n    <ul>\\n      <li ng-repeat=\\\"status in statuses\\\"\\n          ng-show=\\\"post.allowed_privileges.indexOf('change_status') !== -1 && postIsUnlocked()\\\">\\n        <a ng-click=\\\"updateStatus(status)\\\">\\n          <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\" ng-if=\\\"status=='published'\\\"></use>\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#box\\\" ng-if=\\\"status=='archived'\\\"></use>\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#document\\\" ng-if=\\\"status=='draft'\\\"></use>\\n          </svg>\\n          <span class=\\\"label\\\" ng-if=\\\"status=='published'\\\" translate=\\\"post.post_actions.publish\\\">Publish</span>\\n          <span class=\\\"label\\\" ng-if=\\\"status=='draft'\\\" translate=\\\"post.post_actions.put_under_review\\\">Put under </span>\\n          <span class=\\\"label\\\" ng-if=\\\"status=='archived'\\\" translate=\\\"post.post_actions.archive\\\">Archive</span>\\n        </a>\\n      </li>\\n\\n      <li ng-show=\\\"post.allowed_privileges.indexOf('update') !== -1 && postIsUnlocked()\\\">\\n        <a ng-click=\\\"deletePost()\\\">\\n          <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n          </svg>\\n          <span class=\\\"label\\\" translate=\\\"nav.delete\\\">Delete</span>\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\";","module.exports = PostMetadataDirective;\n\nPostMetadataDirective.$inject = [\n    '$translate',\n    '_',\n    'moment',\n    'PostMetadataService'\n];\nfunction PostMetadataDirective(\n    $translate,\n    _,\n    moment,\n    PostMetadataService\n) {\n    return {\n        restrict: 'E',\n        scope: {\n            post:  '=',\n            // Should we hide the date for posts this week?\n            hideDateThisWeek: '@?'\n        },\n        template: require('./post-metadata.html'),\n        link: function ($scope) {\n            $scope.visibleTo = '';\n            $scope.displayTime = '';\n            $scope.displayTimeFull = '';\n            $scope.timeago = '';\n            $scope.hideDateThisWeek = $scope.hideDateThisWeek || false;\n\n            $scope.$watch('post.id', function (postId, oldPostId) {\n                if (postId !== oldPostId) {\n                    activate();\n                }\n            });\n\n            activate();\n\n            function activate() {\n                $scope.visibleTo = visibleTo($scope.post);\n                $scope.source = PostMetadataService.formatSource($scope.post.source);\n                $scope.post.user = PostMetadataService.loadUser($scope.post);\n                $scope.post.contact = PostMetadataService.loadContact($scope.post);\n\n                formatDates();\n            }\n\n            function formatDates() {\n                var postDate = moment($scope.post.post_date),\n                    now = moment();\n\n                if (now.isSame(postDate, 'day')) {\n                    $scope.displayTime = postDate.fromNow();\n                } else if (now.isSame(postDate, 'week') && $scope.hideDateThisWeek) {\n                    $scope.displayTime = postDate.format('LT');\n                } else {\n                    $scope.displayTime = postDate.format('LL');\n                }\n                $scope.displayTimeFull = postDate.format('LLL');\n\n                $scope.timeago = postDate.from(now);\n            }\n\n            function visibleTo(post) {\n                if (post.status === 'draft') {\n                    return 'draft';\n                }\n\n                if (!_.isEmpty(post.published_to)) {\n                    return post.published_to.join(', ');\n                }\n\n                return 'everyone';\n            }\n        }\n    };\n}\n","module.exports = \"<ul class=\\\"metadata\\\">\\n      <div class=\\\"listing-item-locked locked\\\" ng-show=\\\"$parent.isPostLocked()\\\">\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#lock-locked\\\"></use>\\n        </svg>\\n      </div>\\n      <li>\\n          <span class=\\\"status-indicator\\\" ng-if=\\\"post.status=='published'\\\">\\n              <span class=\\\"label\\\" translate=\\\"post.status_published\\\" ng-if=\\\"post.status=='published'\\\">post.status_published</span>\\n          </span>\\n          <span class=\\\"status-indicator yellow\\\" ng-if=\\\"post.status=='draft'\\\">\\n              <span class=\\\"label\\\" translate=\\\"post.status_review\\\" ng-if=\\\"post.status=='draft'\\\"></span>\\n          </span>\\n          <span class=\\\"status-indicator dark\\\" ng-if=\\\"post.status=='archived'\\\">\\n               <span class=\\\"label\\\" translate=\\\"post.status_archived\\\" ng-if=\\\"post.status=='archived'\\\"></span>\\n          </span>\\n      </li>\\n\\n      <li>\\n        <img src=\\\"//www.gravatar.com/avatar/{{ post.user.gravatar || '00000000000000000000000000000000' }}?d=retro&s=40\\\" class=\\\"avatar\\\">\\n        <strong class=\\\"label\\\" ng-show=\\\"post.user && !post.author_realname\\\">{{ post.user.realname }}</strong>\\n        <strong class=\\\"label\\\" ng-show=\\\"post.contact && !post.author_realname\\\">{{ post.contact.contact}}</strong>\\n        <strong class=\\\"label\\\" ng-show=\\\"post.author_realname\\\">{{ post.author_realname}}</strong>\\n        <strong class=\\\"label\\\" ng-show=\\\"!post.author_realname && !post.contact && !post.user\\\" translate=\\\"app.anonymous\\\">Anonymous</strong>\\n\\n    </li>\\n    <li class=\\\"tooltip\\\">\\n        <span class=\\\"label\\\">{{timeago}}</span>\\n        <span class=\\\"bug tooltip-visible-el\\\" aria-label=\\\"Post added {{ displayTimeFull }}\\\" role=\\\"tooltip\\\" title=\\\"{{ displayTimeFull }}\\\">{{ displayTimeFull }}</span>\\n\\n    </li>\\n    <li>\\n      <span class=\\\"label\\\" translate-values=\\\"{ source : source }\\\" translate=\\\"post.source\\\"></span>\\n    </li>\\n</ul>\\n\";","module.exports = PostMetadataService;\n\nPostMetadataService.$inject = [\n    'Util',\n    'UserEndpoint',\n    'ContactEndpoint',\n    '$rootScope'\n];\n\nfunction PostMetadataService(\n    Util,\n    UserEndpoint,\n    ContactEndpoint,\n    $rootScope\n) {\n    var PostMetadataService = {\n        // Format source (fixme!)\n        formatSource: function (source) {\n            if (source === 'sms') {\n                return 'SMS';\n            } else if (source) {\n                // Uppercase first character\n                return source.charAt(0).toUpperCase() + source.slice(1);\n            } else {\n                return 'Web';\n            }\n        },\n        loadUser: function (post) {\n            if (post.user && post.user.id && $rootScope.hasPermission('Manage Users')) {\n                return UserEndpoint.get({id: post.user.id});\n            } else {\n                return post.user;\n            }\n        },\n        loadContact: function (post) {\n            if (!post.user && post.contact && post.contact.id) {\n                return ContactEndpoint.get(\n                    { id: post.contact.id, ignore403: true },\n                    (resp) => {\n                        //what should we do here??? console.log(resp);\n                    },\n                    angular.noop\n                );\n            } else {\n                return post.contact;\n            }\n        }\n    };\n\n    return Util.bindAllFunctionsToSelf(PostMetadataService);\n}\n","module.exports = PostSurveyService;\n\nPostSurveyService.$inject = [\n    'Util',\n    'FormEndpoint',\n    '$rootScope',\n    '$q',\n    '_'\n];\n\nfunction PostSurveyService(\n    Util,\n    FormEndpoint,\n    $rootScope,\n    $q,\n    _\n) {\n    var PostSurveyService = {\n        allowedSurveys : allowedSurveys,\n        canCreatePostInSurvey : canCreatePostInSurvey\n    };\n\n    function canCreatePostInSurvey(form) {\n        // If the form isn't loaded yet, we definitely can't add to it\n        if (!form) {\n            return false;\n        }\n\n        if ($rootScope.hasPermission('Manage Posts')) {\n            return true;\n        }\n\n        // if everyone_can_create, include the form\n        if (form.everyone_can_create) {\n            return true;\n        }\n        // Otherwise, continue to check if the user has access\n\n        // If we're not logged in, we have no role so we definitely don't have access\n        if ($rootScope.currentUser === null) {\n            return false;\n        }\n\n        // Finally, if we are logged in, check if our role is in the list\n        if (_.contains(form.can_create, $rootScope.currentUser.role)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function allowedSurveys() {\n        var allowed_forms = $q.defer();\n\n        FormEndpoint.query()\n        .$promise\n        .then(function (forms) {\n            if ($rootScope.hasPermission('Manage Posts')) {\n                allowed_forms.resolve(forms);\n            } else {\n                allowed_forms.resolve(_.filter(forms, canCreatePostInSurvey));\n            }\n        });\n\n        return allowed_forms.promise;\n    }\n\n    return Util.bindAllFunctionsToSelf(PostSurveyService);\n}\n","module.exports = PostLockService;\n\nPostLockService.$inject = [\n    '$rootScope',\n    '_',\n    'PostLockEndpoint',\n    '$q',\n    'Notify'\n];\nfunction PostLockService(\n    $rootScope,\n    _,\n    PostLockEndpoint,\n    $q,\n    Notify\n) {\n\n    activate ();\n\n    return {\n        unlock: unlock,\n        unlockByPost: unlockByPost,\n        getLock: getLock,\n        isPostLockedForCurrentUser: isPostLockedForCurrentUser,\n        unlockSilent: unlockSilent\n    };\n\n    function activate() {\n\n    }\n\n    function isPostLockedForCurrentUser(post) {\n        /* We only wish to show the lock message when a lock exists\n         * a user is currently logged in and the owner of the lock is\n         * different from the currently logged in user\n         * Anonymous users should not see lock information\n         */\n        if (!$rootScope.loggedin) {\n            return false;\n        }\n        if (post.lock) {\n            if ($rootScope.currentUser) {\n                return $rootScope.currentUser.userId !== parseInt(post.lock.user.id);\n            }\n        } else {\n            return false;\n        }\n        return true;\n    }\n\n    function unlock(lock) {\n        PostLockEndpoint.unlock(lock).$promise.then(function () {\n            Notify.success('post.locking.unlocked');\n        }, handleFailure);\n    }\n\n    function unlockSilent(post) {\n        PostLockEndpoint.unlock({post_id: post.id}).$promise.then(function () {\n            // Do nothing\n        });\n    }\n\n    function unlockByPost(post) {\n        var deferred = $q.defer();\n\n        PostLockEndpoint.unlockByPost({post_id: post.id}).$promise.then(function () {\n            Notify.success('post.locking.unlocked');\n            deferred.resolve();\n        }, function (errorResponse) {\n            handleFailure(errorResponse);\n            deferred.reject(errorResponse);\n        });\n\n        return deferred.promise;\n    }\n\n    function getLock(post) {\n        PostLockEndpoint.unlock({post_id: post.id}).$promise.then(function () {\n            Notify.success('post.locking.locked');\n        }, handleFailure);\n    }\n\n    function handleFailure(errorResponse) {\n        Notify.apiErrors(errorResponse);\n    }\n}\n","module.exports = PostLockDirective;\n\nPostLockDirective.$inject = ['UserEndpoint', 'PostLockService', 'Notify', '$rootScope'];\nfunction PostLockDirective(UserEndpoint, PostLockService, Notify, $rootScope) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            post:  '='\n        },\n        template: require('./post-lock.html'),\n        link: function ($scope) {\n\n            $scope.canUnlock = false;\n            $scope.user = undefined;\n\n            $scope.unlock = unlock;\n\n            $scope.showLockMessage = showLockMessage;\n            $scope.isAdmin = $rootScope.isAdmin;\n\n            activate();\n\n            function activate() {\n                $scope.canUnlock = userHasUnlockPermission();\n                UserEndpoint.get({id: $scope.post.lock.user.id}).$promise.then(function (result) {\n                    $scope.user = result;\n                });\n            }\n\n            function showLockMessage() {\n                return PostLockService.isPostLockedForCurrentUser($scope.post);\n            }\n\n            function unlock() {\n                PostLockService.unlockByPost($scope.post).then(function () {\n                    $scope.post.lock = undefined;\n                });\n            }\n\n            function userHasUnlockPermission() {\n                return $scope.post.allowed_privileges.indexOf('update') !== -1;\n            }\n        }\n    };\n}\n","module.exports = \"<div class=\\\"message message-alt active\\\" ng-show=\\\"showLockMessage()\\\">\\n    <div class=\\\"message-image error\\\">\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#lock-locked\\\"></use>\\n        </svg>\\n    </div>\\n\\n    <div class=\\\"message-body\\\">\\n        <p translate-values=\\\"{ user: user.realname }\\\" translate=\\\"post.locking.locked_message\\\">The post is locked because <strong>Seth Hall</strong> is working on it right now. Try editing a different post.</p>\\n\\n        <div class=\\\"button-group\\\" ng-if=\\\"isAdmin()\\\">\\n             <button class=\\\"button button-alpha\\\" translate=\\\"post.locking.unlock\\\" ng-click=\\\"unlock()\\\">Unlock</button>\\n        </div>\\n    </div>\\n</div>\";","module.exports = [\n    '$rootScope',\n    '$translate',\n    'ContactEndpoint',\n    'MessageEndpoint',\n    'Notify',\n    'UserEndpoint',\n    '_',\n    'moment',\n    'ModalService',\nfunction (\n    $rootScope,\n    $translate,\n    ContactEndpoint,\n    MessageEndpoint,\n    Notify,\n    UserEndpoint,\n    _,\n    moment,\n    ModalService\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            post: '='\n        },\n        template: require('./post-messages.html'),\n        link: function ($scope) {\n\n            $scope.$watch('post.contact.id', function (contactId, oldContactId) {\n                if (contactId !== oldContactId) {\n                    activate();\n                }\n            });\n\n            // Pagination\n            $scope.currentPage = 1;\n            $scope.itemsPerPage = 5;\n            $scope.totalItems = $scope.itemsPerPage;\n            $scope.pageChanged = getMessagesForPagination;\n            $scope.showPagination = false;\n            $scope.getContactDisplay = getContactDisplay;\n\n            function activate() {\n                // Can't activate if we don't have a contact\n                if (!$scope.post.contact || !$scope.post.contact.id) {\n                    return;\n                }\n\n                $scope.messages = []; // init to blank\n                // Initialize\n                if ($scope.post.contact && $scope.post.contact.contact) {\n                    $scope.contact = $scope.post.contact;\n                    // Set contact user is available\n                    setContactUser($scope.contact);\n                } else {\n                    ContactEndpoint.get({ id: $scope.post.contact.id })\n                        .$promise.then(function (contact) {\n                            $scope.contact = contact;\n                            // Set contact user is available\n                            setContactUser($scope.contact);\n                        });\n                }\n\n                getMessagesForPagination();\n            }\n\n            activate();\n\n            function getContactDisplay() {\n                if ($scope.contact.user && $scope.contact.user.realname) {\n                    return $scope.contact.user.realname;\n                }\n\n                return $scope.contact.contact;\n            }\n\n            function setContactUser(contact) {\n                if ($scope.contact.user) {\n                    UserEndpoint.get({ id: $scope.contact.user.id })\n                        .$promise.then(function (user) {\n                            $scope.contact.user = user;\n                        });\n                }\n            }\n\n            function getMessagesForPagination() {\n\n                if ($scope.post.contact.id) {\n                    MessageEndpoint.allInThread({\n                        contact: $scope.post.contact.id,\n                        offset: ($scope.currentPage - 1) * $scope.itemsPerPage,\n                        limit: $scope.itemsPerPage\n                    }).$promise.then(function (response) {\n\n                        var created,\n                            messages = response.results;\n\n                        $scope.messages = messages;\n                        _.each(messages, function (message, index) {\n                            if (message.user) {\n                                message.user = UserEndpoint.get({id: message.user.id});\n                            }\n\n                            // Format update time for display\n                            created = message.updated || message.created;\n                            message.displayTime = formatDate(created);\n                        });\n\n                        $scope.totalItems = response.total_count;\n                        $scope.showPagination = $scope.totalItems > 0  ? $scope.totalItems / $scope.itemsPerPage > 1 : false;\n\n                    });\n                }\n            }\n\n            $scope.sendMessage = function () {\n                ModalService.close();\n\n                var reply = {\n                    message: $scope.message.reply_text,\n                    direction: 'outgoing',\n                    contact_id: $scope.post.contact.id,\n                    parent_id: $scope.messages[$scope.messages.length - 1].id\n                };\n\n                var request = MessageEndpoint.save(reply);\n\n                request.$promise.then(function (response) {\n                    // Update listing with new messages\n                    getMessagesForPagination();\n\n                    Notify.notify('notify.message.sent_to', {contact: $scope.contact.contact});\n                }, function (errorResponse) {\n                    Notify.apiErrors(errorResponse);\n                });\n            };\n\n            $scope.reply = function () {\n                $scope.message = {};\n                ModalService.openTemplate(require('./post-messages-reply.html'), 'post.messages.send', false, $scope, true, true);\n            };\n\n            function formatDate(date) {\n                var now = moment();\n                date = moment(date);\n\n                if (now.isSame(date, 'day')) {\n                    return date.fromNow();\n                }\n\n                return date.format('LLL');\n            }\n        }\n    };\n}];\n","module.exports = \"<div class=\\\"listing card\\\">\\n  <h3 class=\\\"listing-heading\\\" translate>post.messages.title</h3>\\n\\n    <div ng-repeat=\\\"message in messages track by message.id\\\" class=\\\"listing-item\\\">\\n      <div class=\\\"listing-item-primary\\\">\\n        <div class=\\\"listing-item-image\\\" ng-if=\\\"message.direction == 'outgoing'\\\">\\n            <img src=\\\"//www.gravatar.com/avatar/{{ message.user.gravatar || '00000000000000000000000000000000' }}?d=retro&s=40\\\" class=\\\"avatar\\\">\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#arrow-thick-left\\\"></use>\\n            </svg>\\n        </div>\\n      <h2 class=\\\"listing-item-title\\\">\\n\\n        <span ng-if=\\\"message.direction == 'incoming'\\\">{{ getContactDisplay() }}</span>\\n        <span ng-if=\\\"message.direction == 'outgoing' && message.user.realname\\\">{{ message.user.realname }}</span>\\n      </h2>\\n      <!--\\n      <p>{{message.updated || message.created | date:'mediumDate'}} at {{message.updated || message.created | date:'shortTime'}}</p>\\n      -->\\n      <p class=\\\"listing-item-secondary\\\">{{message.displayTime}}</p>\\n      <p>{{ message.message }}</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"listing-item\\\" ng-show=\\\"totalItems > itemsPerPage\\\">\\n    <div class=\\\"listing-item-primary\\\">\\n\\n      <nav class=\\\"pagination\\\" ng-show=\\\"showPagination\\\">\\n          <ul uib-pagination ng-model=\\\"currentPage\\\" items-per-page=\\\"itemsPerPage\\\" total-items=\\\"totalItems\\\" ng-change=\\\"pageChanged()\\\" max-size=\\\"5\\\" boundary-links=\\\"false\\\" rotate=\\\"false\\\"></ul>\\n      </nav>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"listing-item\\\">\\n    <div class=\\\"listing-item-primary\\\">\\n      <h2 class=\\\"listing-item-title\\\">\\n        <a href=\\\"\\\" class=\\\"button button-flat\\\" ng-click=\\\"reply()\\\">\\n          <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n          </svg>\\n          {{ 'post.messages.send' | translate }}\\n        </a>\\n      </h2>\\n    </div>\\n  </div>\\n\\n\\n<!--\\n  <div class=\\\"listing-item\\\">\\n    <div class=\\\"listing-item-primary\\\">\\n\\n    <form name=\\\"form\\\" ng-submit=\\\"sendMessage()\\\">\\n      <label class=\\\"input-label\\\"\\n\\t     ng-class=\\\"{ 'error': form.reply.$invalid && form.reply.$dirty, 'success': !form.reply.$invalid && form.reply.$dirty }\\\" for=\\\"reply\\\"\\n\\t     translate>post.messages.reply</label>\\n      <div class=\\\"form-field\\\" ng-class=\\\"{ 'error': form.reply.$invalid && form.reply.$dirty }\\\">\\n\\t<textarea id=\\\"reply\\\" name=\\\"reply\\\" placeholder=\\\"Send message to {{ contact.contact }}\\\" ng-model=\\\"reply_text\\\" ng-minlength=2 ng-maxlength=140 required></textarea>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"button button-flat\\\"\\n\\t      ng-submit=\\\"sendMessage()\\\"\\n\\t      ng-disabled=\\\"form.reply.$invalid\\\"\\n\\t      translate>post.messages.send</button>\\n    </form>\\n\\n            <button type=\\\"submit\\\" class=\\\"button button-flat\\\"\\n\\t      ng-click=\\\"reply()\\\"\\n\\t      ng-disabled=\\\"form.reply.$invalid\\\"\\n\\t      translate>post.messages.send</button>\\n    </div>\\n  </div>\\n  -->\\n</div>\\n\";","module.exports = \"<div>\\n  <form name=\\\"form\\\" ng-submit=\\\"sendMessage()\\\">\\n\\n    <div class=\\\"form-field\\\" ng-class=\\\"{ 'error': form.reply.$invalid && form.reply.$dirty }\\\">\\n      <textarea id=\\\"reply\\\" name=\\\"reply\\\" placeholder=\\\"Send message to {{ contact.contact }}\\\" ng-model=\\\"message.reply_text\\\" ng-minlength=2 ng-maxlength=140 required></textarea>\\n    </div>\\n    <div class=\\\"form-field\\\">\\n      <button type=\\\"submit\\\" class=\\\"button-alpha modal-trigger\\\"\\n\\t      ng-submit=\\\"sendMessage()\\\"\\n\\t      ng-disabled=\\\"form.reply.$invalid\\\"\\n\\t      translate>post.messages.simple_send</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\\n\";","module.exports = [\n    'FormEndpoint',\n    'PostEndpoint',\n    '$translate',\n    'Notify',\n    '$location',\nfunction (\n    FormEndpoint,\n    PostEndpoint,\n    $translate,\n    Notify,\n    $location\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            post: '='\n        },\n        template: require('./add-form.html'),\n        link: function ($scope) {\n            $translate('post.unstructured.add_survey.info', {source: $scope.post.source})\n            .then(function (message) {\n                $scope.surveyInfo = message;\n            });\n\n            $scope.addForm = function () {\n                $scope.post.form  = { id: $scope.selectedSurvey };\n\n                PostEndpoint.update($scope.post).$promise.then(function (response) {\n                    Notify.notify('notify.post.save_success', {name: $scope.post.title});\n                    $location.path('/posts/' + $scope.post.id + '/edit');\n                }, function (errorResponse) {\n                    Notify.apiErrors(errorResponse);\n                });\n            };\n\n            FormEndpoint.query().$promise.then(function (surveys) {\n                $scope.surveys = surveys;\n\n                if (surveys.length > 0) {\n                    $scope.selectedSurvey = surveys[0].id;\n                }\n            });\n        }\n    };\n}];\n","module.exports = \"<div class=\\\"form-sheet\\\" ng-show=\\\"surveys.length > 0\\\">\\n  <div class=\\\"form-sheet-summary\\\">\\n    <h3 class=\\\"form-sheet-title\\\" translate>post.unstructured.add_survey.title</h3>\\n  </div>\\n\\n  <div class=\\\"form-field\\\">\\n    <p ng-bind-html=\\\"surveyInfo\\\"></p>\\n  </div>\\n\\n  <form name=\\\"form\\\" ng-submit=\\\"addForm()\\\">\\n    <fieldset>\\n      <legend translate>\\n        post.unstructured.add_survey.choose\\n      </legend>\\n\\n      <div class=\\\"form-field radio\\\" ng-repeat=\\\"survey in surveys\\\">\\n        <input id=\\\"{{survey.id}}\\\" type=\\\"radio\\\" ng-model=\\\"$parent.selectedSurvey\\\" ng-value=\\\"survey.id\\\" />\\n        <label for=\\\"{{survey.id}}\\\">{{survey.name}}</label>\\n      </div>\\n    </fieldset>\\n\\n    <div class=\\\"form-field\\\">\\n      <button class=\\\"button-alpha\\\" type=\\\"submit\\\">\\n        <span class=\\\"button-label\\\" translate>post.unstructured.add_survey.save_and_edit</span>\\n        <svg class=\\\"iconic\\\">\\n          <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#arrow-right\\\"></use>\\n        </svg>\\n      </button>\\n    </div>\\n  </form>\\n</div>\\n\";","module.exports = ['PostEndpoint', 'moment', '_', function (PostEndpoint, moment, _) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            key: '=',\n            value: '=',\n            attribute: '=',\n            type: '=',\n            tags: '='\n        },\n        template: require('./post-value.html'),\n        link: function ($scope) {\n            // This whole directive is wrong and it should feel wrong\n            // Depending on whether we are dealing with a post task or a standard task\n            // the css class is swapped. This Boolean manages that distinction.\n            $scope.standardTask = $scope.type === 'standard';\n            // TODO Move to Service\n            $scope.formatTags = function (tagIds) {\n                // getting tag-names and formatting them for displaying\n                var formatedTags = ' ';\n                _.each(tagIds, function (tag, index) {\n                    var tagObj = _.where($scope.tags, {id: parseInt(tag)});\n                    if (tagObj[0]) {\n                        tag = tagObj[0].tag;\n                        if (index < tagIds.length - 1) {\n                            formatedTags += tag + ', ';\n                        } else {\n                            formatedTags += tag;\n                        }\n                    }\n                });\n                return formatedTags;\n            };\n            if ($scope.attribute.type === 'relation') {\n                $scope.value = $scope.value.map(function (entry) {\n                    return PostEndpoint.get({ id : entry });\n                });\n            }\n            if ($scope.attribute.input === 'tags') {\n                $scope.value = $scope.formatTags($scope.value);\n            }\n            if ($scope.attribute.type === 'datetime') {\n                if ($scope.attribute.input === 'date') {\n                    $scope.value = $scope.value.map(function (entry) {\n                        return moment(entry).format('LL');\n                    });\n                }\n                if ($scope.attribute.input === 'datetime') {\n                    $scope.value = $scope.value.map(function (entry) {\n                        return moment(entry).format('LLL');\n                    });\n                }\n                if ($scope.attribute.input === 'time') {\n                    $scope.value = $scope.value.map(function (entry) {\n                        return moment(entry).format('LT');\n                    });\n                }\n            }\n        }\n    };\n}];\n","module.exports = \"<div ng-class=\\\"{'postcard-field': !standardTask, 'listing-item-primary': standardTask}\\\">\\n\\n    <div ng-if=\\\"attribute.input !== 'video'\\\">\\n      <h2 class=\\\"form-label\\\">\\n          <bdi>{{attribute.label}}</bdi>\\n      </h2>\\n\\n      <div ng-if=\\\"attribute.input === 'tags'\\\">\\n       <p>\\n        <svg class=\\\"iconic\\\" style=\\\"margin-right:4px;\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#tag\\\"></use>\\n        </svg>\\n          <bdi>{{value}}</bdi>\\n        </p>\\n      </div>\\n\\n      <div ng-repeat=\\\"entry in value track by $index\\\" ng-if=\\\"attribute.type === 'relation'\\\">\\n          <a ui-sref=\\\"posts.detail.data({postId: entry.id})\\\"><bdi>{{entry.title}}<bdi></a>\\n      </div>\\n     <div ng-repeat=\\\"entry in value track by $index\\\" ng-if=\\\"attribute.type !== 'relation' && attribute.input !== 'tags'\\\">\\n          <p ng-if=\\\"attribute.type !== 'markdown'\\\" linkify><bdi>{{entry}}<bdi></p>\\n          <p ng-if=\\\"attribute.type === 'markdown'\\\" markdown-to-html=\\\"entry\\\"></p>\\n      </div>\\n    </div>\\n\\n    <post-video-view\\n      ng-if=\\\"attribute.input === 'video'\\\"\\n      label=\\\"{{attribute.label}}\\\"\\n      video-url=\\\"value\\\"></post-video-view>\\n</div>\\n\";","module.exports = ['MediaEndpoint', '_', function (MediaEndpoint, _) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            mediaId: '=',\n            label: '@',\n            mediaHasCaption: '='\n        },\n        template: require('./post-media-value.html'),\n        link: MediaValueLink\n    };\n\n    function MediaValueLink($scope) {\n        function loadMedia() {\n            $scope.mediaLoaded = true;\n            if ($scope.mediaId && $scope.mediaId.length > 0) {\n                $scope.mediaLoaded = false;\n                MediaEndpoint.get({id: $scope.mediaId}).$promise.then(function (media) {\n                    $scope.media = media;\n                    $scope.mediaLoaded = true;\n                });\n            }\n        }\n        loadMedia();\n\n        $scope.$watch('mediaId', function (newMediaId, oldMediaId) {\n            if (newMediaId !== oldMediaId) {\n                loadMedia();\n            }\n        });\n    }\n\n}];\n","module.exports = \"<div class=\\\"postcard-field\\\">\\n  <h2 class=\\\"form-label\\\">\\n    {{label}}\\n  </h2>\\n  <button ng-hide=\\\"mediaLoaded\\\" type=\\\"button\\\" class=\\\"button button-full-width button-beta\\\">\\n    <div class=\\\"loading\\\">\\n        <div class=\\\"line\\\"></div>\\n        <div class=\\\"line\\\"></div>\\n        <div class=\\\"line\\\"></div>\\n    </div>\\n    <span class=\\\"button-label\\\">Loading</span>\\n    </button>\\n  <img ng-show=\\\"mediaLoaded\\\" ng-src=\\\"{{ media.original_file_url }}\\\" class=\\\"postcard-image\\\">\\n  <p class=\\\"small\\\" ng-if=\\\"mediaHasCaption\\\"><em>{{ media.caption }}</em></p>\\n</div>\\n\";","module.exports = PostVideoValue;\n\nPostVideoValue.$inject = [];\n\nfunction PostVideoValue() {\n    return {\n        restrict: 'E',\n        scope: {\n            videoUrl: '=',\n            label: '@'\n        },\n        template: require('./post-video-value.html'),\n        controller: PostVideoValueController\n    };\n}\n\nPostVideoValueController.$inject = [\n    '$scope',\n    '$sce'\n];\n\nfunction PostVideoValueController(\n    $scope,\n    $sce\n) {\n    activate();\n\n    function activate() {\n        if ($scope.videoUrl && $scope.videoUrl.length > 0) {\n            $scope.videoUrl = $sce.trustAsResourceUrl($scope.videoUrl[0]);\n        }\n    }\n}\n","module.exports = \"<div class=\\\"postcard-field\\\">\\n  <h2 class=\\\"form-label\\\">\\n    <bdi>{{label}}</bdi>\\n  </h2>\\n  <div class=\\\"video_embed-fluid\\\" ng-if=\\\"videoUrl\\\">\\n    <iframe src=\\\"{{videoUrl}}\\\" frameborder=\\\"0\\\" allowfullscreen></iframe>\\n  </div>\\n</div>\\n\";","module.exports = PostDetailMap;\n\nPostDetailMap.$inject = ['PostEndpoint', 'Maps', '_', 'PostFilters', 'Leaflet', '$q', '$rootScope', '$compile'];\nfunction PostDetailMap(PostEndpoint, Maps, _, PostFilters, L, $q, $rootScope, $compile) {\n    return {\n        restrict: 'E',\n        scope: {\n            postId: '='\n        },\n        link: DetailMapLink,\n        template: require('./map.html')\n    };\n\n    function DetailMapLink($scope, element, attrs) {\n        var map;\n        $scope.hideMap = false;\n        $scope.emptyGeoJSON = false;\n        $scope.geojson = [];\n\n        activate();\n\n        $scope.$watch('postId', function (postId, oldPostId) {\n            if (postId !== oldPostId) {\n                if (map) {\n                    map.remove();\n                    map = null;\n                }\n                activate();\n            }\n        });\n\n        function activate() {\n            // Start loading data\n            $scope.hideMap = true;\n            var geojson = PostEndpoint.geojson({id: $scope.postId}).$promise;\n            var createMap = Maps.createMap(element[0].querySelector('#post-map'))\n            .then(function (data) {\n                map = data;\n            });\n\n            // When data is loaded\n            $q.all({\n                map: createMap,\n                geojson: geojson\n            })\n            // Create the map\n            .then(addGeoJSONToMap)\n            .then((data) => {\n                if (data.geojson) {\n                    // Save points to scope\n                    $scope.features = data.geojson.features.filter(f => f.geometry.type === 'Point');\n                } else {\n                    $scope.features = [];\n                }\n            })\n            ;\n\n            // Cleanup leaflet map\n            $scope.$on('$destroy', function () {\n                if (map) {\n                    map.remove();\n                    map = null;\n                }\n            });\n\n        }\n\n        function addGeoJSONToMap(data) {\n            var geojsonData = data.geojson;\n            // If theres no location data, drop out now\n            if (geojsonData.features && geojsonData.features.length === 0) {\n                $scope.hideMap = true;\n                $scope.emptyGeoJSON = true;\n                return;\n            }\n            $scope.hideMap = false;\n\n            var geojson = L.geoJson(geojsonData, {\n                pointToLayer: Maps.pointToLayer\n            });\n            geojson.addTo(map);\n\n            // Focus map on data points but..\n            // Avoid zooming further than 15 (particularly when we just have a single point)\n            map.fitBounds(geojson.getBounds());\n            if (map.getZoom() > 15) {\n                map.setZoom(15);\n            }\n\n            return data;\n        }\n    }\n}\n","module.exports = \"<div class=\\\"postcard-field\\\" ng-style=\\\"{'visibility': hideMap ? 'hidden' : 'visible'}\\\" ng-hide=\\\"emptyGeoJSON\\\">\\n    <h2 class=\\\"form-label\\\" translate>post.location</h2>\\n    <div id=\\\"post-map\\\" class=\\\"map\\\"></div>\\n    <p ng-repeat=\\\"feature in features track by $index\\\">{{ feature.geometry.coordinates[1] }}, {{ feature.geometry.coordinates[0] }}</p>\\n</div>\\n\";","module.exports = PostDetailData;\n\nPostDetailData.$inject = [];\nfunction PostDetailData() {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            post: '<',\n            '$transition$': '<'\n        },\n        controller: PostDetailDataController,\n        template: require('./post-detail-data.html')\n    };\n}\n\nPostDetailDataController.$inject = [\n    '$scope',\n    '$rootScope',\n    '$translate',\n    '$q',\n    '$filter',\n    '$location',\n    'PostEndpoint',\n    'CollectionEndpoint',\n    'UserEndpoint',\n    'TagEndpoint',\n    'FormAttributeEndpoint',\n    'FormStageEndpoint',\n    'FormEndpoint',\n    'Maps',\n    '_',\n    'Notify',\n    'moment',\n    'PostSurveyService',\n    '$state',\n    '$window'\n];\nfunction PostDetailDataController(\n    $scope,\n    $rootScope,\n    $translate,\n    $q,\n    $filter,\n    $location,\n    PostEndpoint,\n    CollectionEndpoint,\n    UserEndpoint,\n    TagEndpoint,\n    FormAttributeEndpoint,\n    FormStageEndpoint,\n    FormEndpoint,\n    Maps,\n    _,\n    Notify,\n    moment,\n    PostSurveyService,\n    $state,\n    $window\n) {\n    $scope.$watch('post', function (post) {\n        activate();\n    });\n    // /* need to check for embed here to set the correct class\n    // * if coming from map to detail-view in embed, TODO: should go to a service! */\n    // var isEmbed = ($window.self !== $window.top) ? true : false;\n    // isEmbed ? $rootScope.setLayout('layout-d layout-embed') : $rootScope.setLayout('layout-d');\n\n    $scope.post = $scope.post;\n    $scope.post_task = {};\n    $scope.hasPermission = $rootScope.hasPermission;\n    $scope.canCreatePostInSurvey = PostSurveyService.canCreatePostInSurvey;\n    $scope.mapDataLoaded = false;\n    $scope.form_attributes = [];\n    $scope.postValues = [];\n    $scope.selectedPost = {post: $scope.post};\n\n    activate();\n\n    function activate() {\n        // Set page title to post title, if there is one available.\n        if ($scope.post.title && $scope.post.title.length) {\n            $scope.$emit('setPageTitle', $scope.post.title);\n        } else {\n            $translate('post.post_details').then(function (title) {\n                $scope.title = title;\n                $scope.$emit('setPageTitle', title);\n            });\n        }\n\n        // Load the post form\n        if ($scope.post.form && $scope.post.form.id) {\n            $q.all([\n                FormEndpoint.get({id: $scope.post.form.id}),\n                FormStageEndpoint.query({formId: $scope.post.form.id, postStatus: $scope.post.status}).$promise,\n                FormAttributeEndpoint.query({formId: $scope.post.form.id}).$promise,\n                TagEndpoint.query().$promise\n            ]).then(function (results) {\n                $scope.form = results[0];\n                $scope.form_name = results[0].name;\n                $scope.form_description = results[0].description;\n                $scope.form_color = results[0].color;\n                $scope.tags = results[3];\n                $scope.postValues = [];\n                // Set page title to '{form.name} Details' if a post title isn't provided.\n                if (!$scope.post.title) {\n                    $translate('post.type_details', {type: results[0].name}).then(function (title) {\n                        $scope.$emit('setPageTitle', title);\n                    });\n                }\n                var tasks = _.sortBy(results[1], 'priority');\n                var attributes = _.chain(results[2])\n                    .sortBy('priority')\n                    .value();\n\n                attributes.forEach(attr => {\n                    $scope.form_attributes[attr.key] = attr;\n\n                    if ($scope.post.values && attr.type !== 'title' &&\n                        attr.type !== 'description' &&\n                        typeof $scope.post.values[attr.key] !== undefined\n                    ) {\n                        $scope.postValues.push({'key': attr.key, 'value': $scope.post.values[attr.key]});\n                    }\n                });\n\n                // Make the first task visible\n                if (!_.isEmpty(tasks) && tasks.length > 1) {\n                    $scope.visibleTask = tasks[1].id;\n                    tasks[1].hasFileIcon = true;\n                }\n\n                _.each(tasks, function (task) {\n                    // Set post task id\n                    // NOTE: This assumes that there is only one Post Task per Post\n                    if (task.type === 'post') {\n                        $scope.post_task = task;\n                    } else {\n                        // Mark completed tasks\n                        if (_.indexOf($scope.post.completed_stages, task.id) !== -1) {\n                            task.completed = true;\n                        }\n                    }\n                });\n\n                // Remove post task from tasks\n                tasks = _.filter(tasks, function (task) {\n                    return task.type !== 'post';\n                });\n\n                $scope.tasks = tasks;\n                // Figure out which tasks have values\n                $scope.tasks_with_attributes = [];\n\n                _.each($scope.post.values, function (value, key) {\n\n                    if ($scope.form_attributes[key]) {\n                        $scope.tasks_with_attributes.push($scope.form_attributes[key].form_stage_id);\n                    }\n\n                });\n\n                $scope.tasks_with_attributes = _.uniq($scope.tasks_with_attributes);\n            });\n        } else {\n            // for when user switch between posts, if new post has no form, there are no tasks either.\n            $scope.tasks = [];\n        }\n    }\n\n    $scope.publishedFor = function () {\n        if ($scope.post.status === 'draft') {\n            return 'post.publish_for_you';\n        }\n        if (!_.isEmpty($scope.post.published_to)) {\n            return $scope.post.published_to.join(', ');\n        }\n\n        return 'post.publish_for_everyone';\n    };\n\n    $scope.stageIsComplete = function (stageId) {\n        return _.includes($scope.post.completed_stages, stageId);\n    };\n\n    $scope.taskHasValues = function (task) {\n        return _.contains($scope.tasks_with_attributes, task.id);\n    };\n\n    $scope.showTasks = function () {\n        return $scope.tasks.length > 1;\n    };\n\n    $scope.isPostValue = function (key) {\n        let ret =  $scope.form_attributes[key] && $scope.post_task &&\n            $scope.form_attributes[key].form_stage_id === $scope.post_task.id;\n        return ret;\n    };\n\n    $scope.showType = function (type) {\n        if (type === 'point') {\n            return false;\n        }\n        if (type === 'geometry') {\n            return false;\n        }\n\n        return true;\n    };\n\n    $scope.activateTaskTab = function (selectedTaskId) {\n        $scope.visibleTask = selectedTaskId;\n    };\n\n    $scope.publishPostTo = function (updatedPost) {\n        // first check if tasks required have been marked complete\n        var requiredTasks = _.where($scope.tasks, {required: true}),\n            errors = [];\n\n        _.each(requiredTasks, function (task) {\n            // if this stage isn't complete, add to errors\n            if (_.indexOf($scope.post.completed_stages, task.id) === -1) {\n                errors.push($filter('translate')('post.modify.incomplete_step', {stage: task.label}));\n            }\n        });\n\n        if (errors.length) {\n            Notify.errorsPretranslated(errors); // todo WTF\n            return;\n        }\n\n        $scope.post = updatedPost;\n\n        PostEndpoint.update($scope.post).$promise\n            .then(function () {\n                var message = $scope.post.status === 'draft' ? 'notify.post.set_draft' : 'notify.post.publish_success';\n                var role = message === 'draft' ? 'draft' : (_.isEmpty($scope.post.published_to) ? 'everyone' : $scope.post.published_to.join(', '));\n\n                Notify.notify(message, {role: role});\n            }, function (errorResponse) {\n                Notify.apiErrors(errorResponse);\n            });\n    };\n\n    $scope.close = function () {\n        // Return to previous state, whatever that was.\n        let previousState = $scope.$transition$.$from().name;\n        // If we've jumped between 2 different posts\n        // Or we loaded this view directly\n        if (previousState === 'posts.data.detail' || previousState === '' || previousState === 'posts.data.edit') {\n            // ... just return to the data list\n            $state.go('posts.data');\n        } else {\n            // ... otherwise go to the previous stat\n            $state.go(previousState);\n        }\n        $scope.$parent.deselectPost();\n    };\n}\n\n","module.exports = \"<div>\\n  <layout-class layout=\\\"d\\\"></layout-class>\\n  <article class=\\\"postcard\\\" role=\\\"article\\\">\\n    <button class=\\\"button-beta button-flat postcard-close\\\" ng-click=\\\"close()\\\">\\n      <svg class=\\\"iconic\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#x\\\"></use>\\n      </svg>\\n    </button>\\n    <div class=\\\"post-band\\\"  ng-style=\\\"{backgroundColor: form.color}\\\"></div>\\n    <post-lock ng-if=\\\"post.lock\\\" post=\\\"post\\\"></post-lock>\\n    <div class=\\\"postcard-body\\\">\\n      <h1 class=\\\"form-sheet-title survey-title\\\" linkify>\\n        <bdi>{{post.title}}</bdi>\\n      </h1>\\n      <div class=\\\"postcard-header\\\">\\n        <post-metadata post=\\\"post\\\" hide-date-this-week=\\\"true\\\"></post-metadata>\\n        <post-actions post=\\\"post\\\"></post-actions>\\n      </div>\\n      <twitter-widget ng-if=\\\"post.source==='twitter'\\\" twitter-widget-id=\\\"post.data_source_message_id\\\">\\n      </twitter-widget>\\n      <!-- <div\\n        ng-repeat=\\\"postValue in postValues\\\"\\n        ng-if=\\\"isPostValue(postValue.key) && form_attributes[postValue.key] && showType(form_attributes[postValue.key].type)\\\"\\n        class=\\\"postcard-field\\\"\\n      >\\n        <post-media-value\\n          ng-if=\\\"form_attributes[postValue.key].type === 'media'\\\"\\n          media-has-caption=\\\"form_attributes[postValue.key].config.hasCaption\\\"\\n          label=\\\"{{form_attributes[postValue.key].label}}\\\"\\n          media-id=\\\"postValue.value\\\"></post-media-value>\\n      </div> -->\\n      <div\\n        ng-if=\\\"post.content\\\"\\n        class=\\\"postcard-field\\\">\\n        <p markdown-to-html=\\\"post.content\\\"></p>\\n      </div>\\n      <span \\n        ng-repeat=\\\"postValue in postValues\\\"\\n        ng-if=\\\"isPostValue(postValue.key) && showType(form_attributes[postValue.key].type)\\\"\\n      >\\n        <post-media-value\\n          ng-if=\\\"form_attributes[postValue.key].type === 'media'\\\"\\n          media-has-caption=\\\"form_attributes[postValue.key].config.hasCaption\\\"\\n          label=\\\"{{form_attributes[postValue.key].label}}\\\"\\n          media-id=\\\"postValue.value\\\"></post-media-value>\\n        <post-value\\n          ng-if=\\\"form_attributes[postValue.key].type !== 'media'\\\"\\n          key=\\\"postValue.key\\\"\\n          value=\\\"postValue.value\\\"\\n          attribute=\\\"form_attributes[postValue.key]\\\"\\n          tags=\\\"tags\\\"\\n          type=\\\"'post'\\\"></post-value>\\n      </span>\\n      <post-detail-map post-id=\\\"post.id\\\"></post-detail-map>\\n    </div>\\n  </article>\\n  <div class=\\\"listing card init\\\" ng-show=\\\"tasks.length\\\">\\n    <h3 class=\\\"listing-heading\\\" translate=\\\"app.tasks\\\">Tasks</h3>\\n    <nav class=\\\"tabs-menu\\\" data-tabs=\\\"tasks-tabs\\\" data-tabs-hash>\\n      <ul>\\n        <li\\n          ng-repeat=\\\"task in tasks\\\"\\n          ng-class=\\\"{'active': visibleTask == task.id}\\\">\\n          <a ng-click=\\\"activateTaskTab(task.id)\\\">\\n            <bdi>{{task.label}}</bdi>\\n          </a>\\n          <span class=\\\"status\\\" ng-class=\\\"{'completed': taskIsComplete(visibleTask)}\\\">\\n          </span>\\n        </li>\\n      </ul>\\n    </nav>\\n    <div class=\\\"listing-item tasks-tabs tabs-target active\\\">\\n      <div class=\\\"alert\\\"\\n          ng-repeat=\\\"task in tasks\\\"\\n          ng-if=\\\"!taskHasValues(task)\\\"\\n          ng-show=\\\"task.id === visibleTask\\\">\\n        <p translate=\\\"post.modify.no_task_values\\\">There are currently no saved values for this task.</p>\\n      </div>\\n      <div\\n        ng-repeat=\\\"postValue in postValues\\\"\\n        ng-if=\\\"!isPostValue(postValue.key) && form_attributes[postValue.key] && showType(form_attributes[postValue.key].type)\\\"\\n        ng-show=\\\"form_attributes[postValue.key].form_stage_id === visibleTask\\\"\\n        ng-class=\\\"{'listing-item-primary': form_attributes[postValue.key].type === 'media'}\\\"\\n      >\\n        <post-media-value\\n          ng-if=\\\"form_attributes[postValue.key].type === 'media'\\\"\\n          label=\\\"{{form_attributes[postValue.key].label}}\\\"\\n          media-id=\\\"postValue.value\\\"></post-media-value>\\n        <post-value\\n            ng-if=\\\"form_attributes[postValue.key].type !== 'media'\\\"\\n            tags=\\\"tags\\\"\\n            key=\\\"postValue.key\\\"\\n            value=\\\"postValue.value\\\"\\n            attribute=\\\"form_attributes[postValue.key]\\\"\\n            type=\\\"'standard'\\\">\\n        </post-value>\\n      </div>\\n    </div>\\n  </div>\\n  <post-messages post=\\\"post\\\" ng-if=\\\"post.contact.id && post.source !== 'twitter'\\\"></post-messages>\\n</div>\\n\";","module.exports = [\n    '_',\n    'Util',\n    '$translate',\n    'PostEndpoint',\n    'Notify',\n    '$q',\nfunction (\n    _,\n    Util,\n    $translate,\n    PostEndpoint,\n    Notify,\n    $q\n) {\n    var PostActionsService = {\n        delete: function (post) {\n            var deferred = $q.defer();\n\n            Notify.confirmDelete('notify.post.destroy_confirm').then(function () {\n                PostEndpoint.delete({ id: post.id }).$promise.then(function () {\n                    Notify.notify('notify.post.destroy_success', { name: post.title });\n                    deferred.resolve();\n                }, function (errorResponse) {\n                    Notify.apiErrors(errorResponse);\n                    deferred.reject(errorResponse);\n                });\n            });\n\n            return deferred.promise;\n        },\n        getStatuses: function () {\n            return ['published', 'draft', 'archived'];\n        },\n        filterPostEditorCategories: function (attributeOptions, categories) {\n            // adding category-objects attribute-options\n            return _.chain(attributeOptions)\n                .map((category) => {\n                    const ret = angular.copy(_.findWhere(categories, {id: category}));\n                    if (ret && ret.children.length > 0) {\n                        ret.children = _.chain(ret.children)\n                            .map((child) => {\n                                if (attributeOptions.find((o) => o === child.id)) {\n                                    return _.findWhere(categories, {id: child.id});\n                                }\n                            })\n                            .filter()\n                            .value();\n                    }\n                    return ret;\n                })\n                .filter()\n                .value();\n        }\n    };\n\n    return Util.bindAllFunctionsToSelf(PostActionsService);\n}];\n","module.exports = [\n    'CONST',\nfunction (\n    CONST\n) {\n    return function (data) {\n        return angular.extend({}, {\n            // id: 0,\n            title: '',\n            content: '',\n            locale: CONST.DEFAULT_LOCALE,\n            values: {},\n            completed_stages: [],\n            published_to: [],\n            post_date: new Date()\n        }, data);\n    };\n}];\n","module.exports = [\n    '_',\n    'Util',\n    '$translate',\n    'Notify',\nfunction (\n    _,\n    Util,\n    $translate,\n    Notify\n) {\n    var PostEditService = {\n        cleanPostValues: function (post) {\n            _.each(post.values, function (value, key) {\n                // Strip out empty values\n                post.values[key] = _.filter(value);\n                // Remove entirely if no values are left\n                if (!post.values[key].length) {\n                    delete post.values[key];\n                }\n            });\n            return post;\n        },\n        validatePost: function (post, form, tasks) {\n            // First get tasks to be validated\n            // The post task is always validated\n            // Other tasks are only validated if marked completed\n            var isPostValid = true;\n            var tasks_to_validate = [];\n\n            _.each(tasks, function (task) {\n                if (task.type === 'post' || _.contains(post.completed_stages, task.id)) {\n                    tasks_to_validate.push(task);\n                }\n            });\n\n            // Validate Post default fields\n            if (!form) {\n                return false;\n            }\n\n            if (!post.form) {\n                return false;\n            }\n\n            if (form.title.$invalid) {\n                return false;\n            }\n\n            if (!form.content || form.content.$invalid) {\n                return false;\n            }\n\n            // Validate required fields for each task that needs to be validated\n            _.each(tasks_to_validate, function (task) {\n                var required_attributes = _.where(task.attributes, {required: true});\n\n                _.each(required_attributes, function (attribute) {\n                    if (attribute.type !== 'title' && attribute.type !== 'description') {\n                        if (attribute.input === 'checkbox') {\n                            var checkboxValidity = false;\n                            _.each(attribute.options, function (option) {\n                                if (!_.isUndefined(form['values_' + attribute.id + '_' + option]) && !form['values_' + attribute.id + '_' + option].$invalid) {\n                                    checkboxValidity = isPostValid;\n                                }\n                            });\n                            isPostValid = checkboxValidity;\n                        } else {\n\n                            if (_.isUndefined(form['values_' + attribute.id]) || form['values_' + attribute.id].$invalid) {\n                                if (!_.isUndefined(form['values_' + attribute.id])) {\n                                    form['values_' + attribute.id].$dirty = true;\n                                }\n\n                                isPostValid = false;\n                            }\n                        }\n                    }\n                });\n            });\n            return isPostValid;\n        }\n    };\n\n    return Util.bindAllFunctionsToSelf(PostEditService);\n}];\n","module.exports = [\n    '$q',\n    '$http',\n    '_',\n    'Util',\n    '$translate',\n    'MediaEndpoint',\n    'Notify',\nfunction (\n    $q,\n    $http,\n    _,\n    Util,\n    $translate,\n    MediaEndpoint,\n    Notify\n) {\n    var MediaEditService = {\n        saveMedia: function (medias, post) {\n            var deferred = $q.defer();\n            var calls = [];\n\n            // Loop over medias and check for changes\n            _.each(medias, function (media, key) {\n                // Check if media needs to be updated\n                if (media.changed) {\n                    // Checking if media is marked for deletion\n                    if (media.deleted) {\n                        MediaEditService.deleteMedia(media.id);\n                        post.values[key][0] = null;\n                        // Check if new media or if the media file has changed\n                        // otherwise just update the caption\n                    // Check if a new file was uploaded\n                    } else if (media.file) {\n                        calls.push(MediaEditService.uploadFile(media).then(function (media) {\n                            post.values[key][0] = media ? media.id : null;\n                        }));\n                    // Otherwise update the media as it has changed\n                    } else {\n                        // Remove irrelevant fields\n                        delete media.changed;\n                        calls.push(MediaEditService.update(media).then(function (media) {\n                            post.values[key][0] = media ? media.id : null;\n                        }));\n                    }\n                }\n            });\n            // Wait for all media updates to complete\n            // then resolve the promise and continue\n            // saving the post\n            $q.all(calls).then(function () {\n                deferred.resolve(post);\n            });\n            return deferred.promise;\n        },\n        deleteMedia: function (mediaId) {\n            if (mediaId) {\n                return MediaEndpoint.delete({id: mediaId}).$promise;\n            }\n            // Return a promise anyway if there is no media to delete\n            return $q.when();\n        },\n        update: function (media) {\n            var deferred = $q.defer();\n\n            MediaEndpoint.update(media).$promise.then(function (media) {\n                deferred.resolve(media);\n            }, function (error) {\n                Notify.apiErrors(error);\n                // We warn the user about image errors but\n                // we continue to save the post\n                deferred.resolve({});\n            });\n            return deferred.promise;\n        },\n        uploadFile: function (media) {\n            var deferred = $q.defer();\n            // Delete current file\n            this.deleteMedia(media.id).then(function () {\n                var formData = new FormData();\n\n                formData.append('file', media.file);\n\n                if (media.caption) {\n                    formData.append('caption', media.caption);\n                }\n\n                $http.post(\n                    Util.apiUrl('/media'),\n                    formData,\n                    {\n                        headers: {\n                            'Content-Type': undefined\n                        }\n                    }\n                ).then(function (response) {\n                    media.id = response.data.id;\n                    deferred.resolve(media);\n                }, function (error) {\n                    Notify.apiErrors(error);\n                    // We warn the user about image errors but\n                    // we continue to save the post\n                    deferred.resolve({});\n                });\n            }, function (error) {\n                Notify.apiErrors(error);\n                // We warn the user about image errors but\n                // we continue to save the post\n                deferred.resolve({});\n            });\n\n            return deferred.promise;\n        }\n    };\n\n    return Util.bindAllFunctionsToSelf(MediaEditService);\n}];\n","module.exports = [\n    '$http',\n    'MediaEndpoint',\n    'MediaEditService',\n    'Util',\n    'Notify',\n    '$q',\n    '_',\nfunction (\n    $http,\n    MediaEndpoint,\n    MediaEditService,\n    Util,\n    Notify,\n    $q,\n    _\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        require: 'ngModel',\n        scope: {\n            media: '=',\n            name: '@',\n            mediaHasCaption: '<'\n        },\n        template: require('./media.html'),\n        link: function ($scope, element, attr, ngModel) {\n            // Initialize media object\n            $scope.media = { id: null, file: null, caption: '', dataURI: null, changed: false, deleted: false };\n            $scope.mediaId = null;\n            $scope.showAdd = showAdd;\n            $scope.showReplace = showReplace;\n            $scope.showDelete = showDelete;\n            $scope.deleteMedia = deleteMedia;\n\n            activate();\n\n            function activate() {\n                renderViewValue();\n\n                // Watch for media changes\n                $scope.$watch('media.changed', handleMediaChange);\n\n                // Watch for media changes\n                $scope.$watch('mediaId', handleMediaIdChange);\n\n                // Watch for deleted images\n                $scope.$watch('media.deleted', handleMediaDeleted);\n\n                // Set up rendering any model changes\n                ngModel.$render = renderViewValue;\n            }\n\n            function renderViewValue() {\n                if (ngModel.$viewValue) {\n                    $scope.mediaId = parseInt(ngModel.$viewValue);\n                    // Load the media from the API\n                    if ($scope.media.id !== $scope.mediaId && _.isNumber($scope.mediaId)) {\n                        MediaEndpoint.get({id: $scope.mediaId}).$promise.then(function (media) {\n                            $scope.media = media;\n                            // Set initial media state\n                            $scope.media.changed = false;\n                        });\n                    }\n                }\n            }\n\n            function handleMediaChange(changed) {\n                if (changed) {\n                    // Make sure the model is set dirty if media changes\n                    ngModel.$setViewValue($scope.mediaId);\n                    ngModel.$setDirty();\n                }\n\n            }\n\n            function handleMediaIdChange(id) {\n                if (id === 'changed') {\n                    // Make sure the model is set dirty if media changes\n                    ngModel.$setViewValue($scope.mediaId);\n                    ngModel.$setDirty();\n                }\n            }\n\n            function handleMediaDeleted(deleted) {\n                // // Make sure we update the view-value both if an image is deleted and deleted and then replaced\n                if (deleted) {\n                    ngModel.$setViewValue(null);\n                } else {\n                    ngModel.$setViewValue($scope.mediaId);\n                }\n            }\n\n            function showAdd() {\n                return (!$scope.media.id && !$scope.media.changed || $scope.media.deleted);\n            }\n\n            function showReplace() {\n                return $scope.media.dataURI || ($scope.media.id && !$scope.media.deleted);\n            }\n\n            function showDelete() {\n                return $scope.media.id || ($scope.media.changed && !$scope.media.deleted);\n            }\n\n            function deleteMedia(mediaId) {\n                // Mark for deletion\n                $scope.media = {id: mediaId, changed: true, deleted: true};\n            }\n        }\n    };\n}];\n","module.exports = \"\\n<form>\\n    <div class=\\\"form-field file\\\">\\n      <file-upload id=\\\"{{name}}\\\" validation=\\\"'image'\\\" validation=true container=\\\"media\\\" model=\\\"mediaId\\\">\\n      </file-upload>\\n\\n      <label for=\\\"{{name}}\\\" class=\\\"button button-gamma\\\" ng-show=\\\"showAdd()\\\">\\n          <svg class=\\\"iconic\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n          </svg>\\n          <span class=\\\"button-label\\\" translate=\\\"post.media.add_photo\\\"></span>\\n      </label>\\n\\n      <figure ng-show=\\\"showReplace()\\\">\\n        <img ng-src=\\\"{{media.original_file_url}}\\\" ng-show=\\\"media.id && !media.dataURI\\\">\\n        <img ng-src=\\\"{{media.dataURI}}\\\" ng-show=\\\"media.dataURI\\\">\\n\\n        <div class=\\\"form-field\\\">\\n          <button class=\\\"button-destructive\\\" ng-click=\\\"deleteMedia(media.id)\\\" ng-show=\\\"showDelete()\\\">\\n            <svg class=\\\"iconic\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n            </svg>\\n             <span class=\\\"hidden\\\" translate=\\\"post.media.delete_photo\\\"></span>\\n          </button>\\n\\n          <file-upload id=\\\"{{name}}\\\" validation=\\\"'image'\\\" container=\\\"media\\\" model=\\\"mediaId\\\"></file-upload>\\n            <label for=\\\"{{name}}\\\" class=\\\"button button-gamma\\\">\\n              <svg class=\\\"iconic\\\">\\n                  <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#image\\\"></use>\\n              </svg>\\n              <span class=\\\"button-label\\\" translate=\\\"post.media.replace_image\\\"></span>\\n            </label>\\n        </div>\\n      </figure>\\n      <div ng-hide=\\\"!mediaHasCaption\\\">\\n        <figure>\\n          <p class=\\\"small\\\" translate>post.media.add_caption</p>\\n          <input\\n            type=\\\"text\\\"\\n            placeholder=\\\"{{ 'post.media.add_caption' | translate }}\\\"\\n            ng-model=\\\"media.caption\\\">\\n        </figure>\\n      </div>\\n    </div>\\n</form>\\n\";","module.exports = PostVideo;\n\nPostVideo.$inject = [];\n\nfunction PostVideo() {\n    return {\n        restrict: 'E',\n        scope: {\n            videoUrl: '='\n        },\n        template: require('./video.html'),\n        controller: PostVideoController\n    };\n}\n\nPostVideoController.$inject = [\n    '$scope',\n    '$sce',\n    'Util',\n    'Notify'\n];\n\nfunction PostVideoController(\n    $scope,\n    $sce,\n    Util,\n    Notify\n) {\n    $scope.constructIframe = constructIframe;\n    // $scope.getVideoThumbnail = getVideoThumbnail;\n    activate();\n    function activate() {\n        // Here we make a statement of trust of the URL based on having previously constructed it\n        $scope.video = $sce.trustAsResourceUrl($scope.videoUrl);\n        $scope.previewId = $scope.videoId ? $scope.videoId : Util.simpluUUID();\n    }\n\n    function constructIframe(videoUrl) {\n        parseVideo(videoUrl);\n\n        var preview = angular.element(document.getElementById($scope.previewId));\n\n        if ($scope.videoUrl === undefined) {\n            preview.empty();\n        } else {\n            preview.empty();\n            preview.html(createVideo()).wrap('<div class=\"video_embed-fluid\" />');\n        }\n    }\n\n    // Originates from PL\n    function parseVideo(url) {\n        // - Supported YouTube URL formats:\n        //   - http://www.youtube.com/watch?v=My2FRPA3Gf8\n        //   - http://youtu.be/My2FRPA3Gf8\n        //   - https://youtube.googleapis.com/v/My2FRPA3Gf8\n        // - Supported Vimeo URL formats:\n        //   - http://vimeo.com/25451551\n        //   - http://player.vimeo.com/video/25451551\n        // - Also supports relative URLs:\n        //   - //player.vimeo.com/video/25451551\n        if (url) {\n            // NOTE: It is very important to pay special attention to the santization needs of this regex if it is changed.\n            // It is important that it does not allow subdomains other than player or www in order to ensure that a malicious user\n            // can not exploit this field to insert malicious content in an iframe\n            var match = url.match(/(http:|https:|)\\/\\/(player.|www.)?(vimeo\\.com|youtu(be\\.com|\\.be|be\\.googleapis\\.com))\\/(video\\/|embed\\/|watch\\?v=|v\\/)?([A-Za-z0-9._%-]*)(\\&\\S+)?/);\n            $scope.videoUrl = undefined;\n            if (match) {\n                if (match[3].indexOf('youtu') > -1) {\n                    // Here we make a statement of trust of the URL based on having pulled out just the id\n                    $scope.videoUrl = 'https://www.youtube.com/embed/' + match[6];\n                    $scope.video = $sce.trustAsResourceUrl($scope.videoUrl);\n                } else if (match[3].indexOf('vimeo') > -1) {\n                    // Here we make a statement of trust of the URL based on having pulled out just the id\n                    $scope.videoUrl = 'https://player.vimeo.com/video/' + match[6];\n                    $scope.video = $sce.trustAsResourceUrl($scope.videoUrl);\n                } else {\n                    urlError(url);\n                }\n            } else {\n                urlError(url);\n            }\n        }\n    }\n\n    function urlError(url) {\n        Notify.error('notify.video.incorrect_url', {url: url});\n    }\n\n    // Originates from PL\n    function createVideo() {\n        return '<iframe src=\"' + $scope.video + '\" frameborder=\"0\" allowfullscreen>';\n    }\n\n    // // Originates from PL\n    // function getVideoThumbnail(url, cb) {\n    //     // Obtains the video's thumbnail and passed it back to a callback function.\n    //     var videoObj = parseVideo(url);\n    //     if (videoObj.type === 'youtube') {\n    //         cb('//img.youtube.com/vi/' + videoObj.id + '/maxresdefault.jpg');\n    //     } else if (videoObj.type === 'vimeo') {\n    //         // Requires jQuery\n    //         $.get('http://vimeo.com/api/v2/video/' + videoObj.id + '.json', function(data) {\n    //             cb(data[0].thumbnail_large);\n    //         });\n    //     }\n    // }\n}\n","module.exports = \"\\n<form>\\n  <div class=\\\"form-field video_embed\\\">\\n    <label>{{label}}</label>\\n    <p>\\n      <span translate=\\\"post.video.enter_a\\\">Enter a</span>\\n\\n      <img src=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/youtube.png\") + \"\\\" class=\\\"wordmark-replace\\\">\\n      <span translate=\\\"post.video.or\\\"> or </span>\\n      <img src=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/vimeo.png\") + \"\\\" class=\\\"wordmark-replace\\\">\\n      <span translate=\\\"post.video.video_url\\\"> video URL</span>\\n    </p>\\n    <input type=\\\"text\\\" ng-model=\\\"videoUrl\\\" ng-change=\\\"constructIframe(videoUrl)\\\" placeholder=\\\"https://youtu.be/123456\\\">\\n\\n    <div id=\\\"{{previewId}}\\\" class=\\\"form-field-preview\\\" ng-show=\\\"videoUrl\\\">\\n      <div class=\\\"video_embed-fluid\\\">\\n        <iframe frameborder=\\\"0\\\" ng-src=\\\"{{video}}\\\" allowfullscreen></iframe>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\";","module.exports = ['moment', '_', function (moment, _) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        require: 'ngModel',\n        template: require('./post-datetime-value.html'),\n        link: function ($scope, element, attrs, ngModel) {\n            // Split date time in time and date fields\n            $scope.timeOptions = { format: 'HH:i', interval: 15, onClose: save };\n            $scope.dateOptions = { format: 'yyyy-mm-dd', onClose: save };\n            $scope.model = null;\n\n            // If no ngModel, skip the rest\n            if (!ngModel) {\n                return;\n            }\n\n            // Update models on render\n            ngModel.$render = render;\n\n            // Render ngModel viewValue into scope\n            function render() {\n                $scope.model = moment(ngModel.$viewValue).toDate();\n            }\n\n            // Save model value\n            // Only runs when modal closes, this avoids overwriting the time\n            // and rounding it to 15mins, even when the user never changed it\n            function save() {\n                ngModel.$setViewValue($scope.model);\n            }\n        }\n    };\n}];\n","module.exports = \"<div>\\n  <div class=\\\"form-field date\\\">\\n    <div class=\\\"input-with-icon\\\">\\n      <svg class=\\\"iconic\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#calendar\\\"></use>\\n      </svg>\\n      <input\\n        type=\\\"text\\\"\\n        pick-a-date=\\\"model\\\"\\n        pick-a-date-options=\\\"dateOptions\\\"\\n        />\\n    </div>\\n  </div>\\n  <div class=\\\"form-field date\\\">\\n    <div class=\\\"input-with-icon\\\">\\n      <svg class=\\\"iconic\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#clock\\\"></use>\\n      </svg>\\n      <input\\n        type=\\\"text\\\"\\n        pick-a-time=\\\"model\\\"\\n        pick-a-time-options=\\\"timeOptions\\\"\\n        />\\n    </div>\\n  </div>\\n</div>\\n\";","module.exports = PostLocationDirective;\n\nPostLocationDirective.$inject = ['$document', '$http', 'Leaflet', 'Geocoding', 'Maps', '_', 'Notify', '$window'];\nfunction PostLocationDirective($document, $http, L, Geocoding, Maps, _, Notify, $window) {\n    return {\n        restrict: 'E',\n        replace: true,\n        require: 'ngModel',\n        scope: {\n            id: '@',\n            name: '@',\n            required: '='\n        },\n        template: require('./location.html'),\n        link: PostLocationLink\n    };\n\n    function PostLocationLink($scope, element, attrs, ngModel) {\n        var currentPositionControl, map, marker,\n            zoom = 8;\n\n        $scope.processing = false;\n        $scope.searchLocationTerm = '';\n        $scope.searchLocation = searchLocation;\n        $scope.manualModel = { lat: null, lon: null };\n        $scope.searchTimeout;\n        $scope.handleActiveSearch = handleActiveSearch;\n        $scope.clear = clear;\n\n        // for dropdown\n        $scope.showSearchResults = showSearchResults;\n        $scope.hideSearchResults = hideSearchResults;\n        $scope.chooseLocation = chooseLocation;\n        $scope.chooseCurrentLocation = chooseCurrentLocation;\n        $scope.searchResults = [];\n        $scope.showCurrentPositionControl = false;\n        $scope.updateMapFromLatLon = updateMapFromLatLon;\n        activate();\n\n        function activate() {\n\n            Maps.createMap(element[0].querySelector('.map'))\n            .then(function (data) {\n                map = data;\n\n                // Init marker with current model value\n                renderViewValue();\n\n                // Update Map if model changes\n                ngModel.$render = renderViewValue;\n\n                map.on('click', onMapClick);\n                // treat locationfound same as map click\n                map.on('locationfound', onMapClick);\n                // handle failure to find location\n                map.on('locationerror', onLocationError);\n                // Add locate control, but only on https\n                if (window.location.protocol === 'https:' || window.location.hostname === 'localhost') {\n                    $scope.showCurrentPositionControl = true;\n                    currentPositionControl = L.control.locate({\n                        locateOptions: {\n                            maximumAge: 60000 // 1 minute\n                        }\n                    }).addTo(map);\n                }\n            });\n\n            $document.on('click', onDocumentClick);\n        }\n\n        function onDocumentClick(event) {\n            if (!element[0].querySelector('.searchbar').contains(event.target)) {\n                $scope.hideSearchResults();\n            }\n        }\n\n        function onMapClick(e) {\n            $scope.$apply(() => {\n                var wrappedLatLng = e.latlng.wrap(),\n                    lat = wrappedLatLng.lat,\n                    lon = wrappedLatLng.lng;\n\n                updateMarkerPosition(lat, lon);\n                updateModelLatLon(lat, lon);\n            });\n        }\n\n        function onLocationError() {\n            Notify.error('location.my_location_error');\n        }\n\n        function renderViewValue() {\n            if (ngModel.$viewValue &&\n                typeof ngModel.$viewValue.lat !== 'undefined' &&\n                typeof ngModel.$viewValue.lon !== 'undefined'\n            ) {\n                updateMarkerPosition(ngModel.$viewValue.lat, ngModel.$viewValue.lon);\n                centerMapTo(ngModel.$viewValue.lat, ngModel.$viewValue.lon);\n                updateManualLatLon(ngModel.$viewValue.lat, ngModel.$viewValue.lon);\n            }\n        }\n\n        function updateModelLatLon(lat, lon) {\n            ngModel.$setViewValue({\n                lat: lat,\n                lon: lon\n            });\n            updateManualLatLon(lat, lon);\n        }\n\n        function updateManualLatLon(lat, lon) {\n            $scope.manualModel.lat = lat;\n            $scope.manualModel.lon = lon;\n        }\n\n        function updateMapFromLatLon(lat, lon) {\n            updateMarkerPosition(lat, lon);\n            centerMapTo(lat, lon);\n            updateModelLatLon(lat, lon);\n        }\n\n        function updateMarkerPosition(lat, lon) {\n            if (marker) {\n                marker.setLatLng([lat, lon]);\n            } else {\n                marker = L.marker([lat, lon], {\n                    draggable: true,\n                    icon: Maps.pointIcon()\n                });\n                marker.addTo(map);\n\n                marker.on('dragend', function (ev) {\n                    $scope.$apply(() => {\n                        var latLng = ev.target.getLatLng();\n                        updateModelLatLon(latLng.lat, latLng.lng);\n                    });\n                });\n            }\n        }\n\n        function centerMapTo(lat, lon) {\n            map.setView([lat, lon], zoom);\n        }\n\n        function clear() {\n            ngModel.$setViewValue(null);\n            if (marker) {\n                map.removeLayer(marker);\n                marker = null;\n            }\n        }\n\n        // for dropdown\n        function showSearchResults() {\n            element[0].querySelector('#searchbar-results').classList.add('active');\n        }\n\n        function hideSearchResults() {\n            element[0].querySelector('#searchbar-results').classList.remove('active');\n        }\n\n        function handleActiveSearch(event) {\n            var del = event.keyCode === 8 || event.keyCode === 46;\n            var letter = event.keyCode > 47 && event.keyCode < 58;\n            var number = event.keyCode > 64 && event.keyCode < 91;\n            if (del || letter || number) {\n                $scope.processing = true;\n                if ($scope.searchTimeout) {\n                    clearTimeout($scope.searchTimeout);\n                }\n                $scope.searchTimeout = setTimeout($scope.searchLocation, 250);\n            }\n            if (event.keyCode === 13) {\n                event.preventDefault();\n                return false;\n            }\n        }\n\n        function searchLocation() {\n            $scope.processing = true;\n            Geocoding.searchAllInfo($scope.searchLocationTerm).then(function (results) {\n                $scope.processing = false;\n                $scope.searchResults = results;\n            });\n        }\n\n        function chooseLocation(location) {\n            $scope.searchLocationTerm = '';\n            updateModelLatLon(location.lat, location.lon);\n            updateMarkerPosition(location.lat, location.lon);\n            centerMapTo(location.lat, location.lon);\n            $scope.hideSearchResults();\n        }\n\n        function chooseCurrentLocation() {\n            currentPositionControl.start();\n            $scope.hideSearchResults();\n        }\n    }\n}\n","module.exports = \"\\n<div class=\\\"location-wrapper\\\">\\n    <div id=\\\"{{id}}-map\\\" class=\\\"map\\\" style=\\\"height: 265px; width: 100%;\\\"></div>\\n    <form class=\\\"searchbar\\\">\\n        <div class=\\\"searchbar-input init\\\" role=\\\"search\\\">\\n            <div class=\\\"form-field tooltip\\\">\\n                <input name=\\\"{{name}}\\\"\\n                    type=\\\"search\\\"\\n                    maxlength=\\\"250\\\"\\n                    placeholder=\\\"{{'location.placeholder' | translate}}\\\"\\n                    ng-model=\\\"searchLocationTerm\\\"\\n                    ng-focus=\\\"showSearchResults()\\\"\\n                    ng-keydown=\\\"handleActiveSearch($event)\\\"\\n                />\\n            </div>\\n            <div id=\\\"searchbar-results\\\" class=\\\"searchbar-results dropdown-menu init\\\">\\n                <div class=\\\"form-field\\\">\\n                    <button class=\\\"button-beta button-plain\\\" ng-click=\\\"chooseCurrentLocation()\\\" ng-if=\\\"showCurrentPositionControl\\\" >\\n                        <svg class=\\\"iconic\\\">\\n                            <use\\n                                xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                                xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#location\\\">\\n                            </use>\\n                        </svg>\\n                        <span class=\\\"button-label\\\" translate>location.use_current_location</span>\\n                    </button>\\n                </div>\\n             <div class=\\\"tool\\\">\\n                    <h6 class=\\\"tool-heading\\\" translate>location.search_results</h6>\\n                    <dl ng-repeat=\\\"result in searchResults\\\" ng-if=\\\"!processing && searchResults.length > 0\\\">\\n                        <dt class=\\\"list-item\\\" ng-click=\\\"chooseLocation(result)\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use\\n                                    xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                                    xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#map-marker\\\">\\n                                </use>\\n                            </svg>\\n                            <em>{{result.display_name}}</em>\\n                        </dt>\\n                    </dl>\\n                    <dl class=\\\"dropdown-menu-body\\\" ng-if=\\\"processing\\\">\\n                        <dt class=\\\"list-item\\\">\\n                            <div class=\\\"loading\\\" style=\\\"width: auto;\\\">\\n                                <div class=\\\"line\\\"></div>\\n                                <div class=\\\"line\\\"></div>\\n                                <div class=\\\"line\\\"></div>\\n                            </div>\\n                        </dt>\\n                    </dl>\\n                    <dl class=\\\"dropdown-menu-body\\\" ng-if=\\\"!processing && !searchResults\\\">\\n                        <dt class=\\\"list-item\\\" translate=\\\"location.no_matching_locations\\\">\\n                            No matching locations.\\n                        </dt>\\n                    </dl>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n    <p translate>location.click_map</p>\\n    <div class=\\\"form-field\\\">\\n      <label>Lat</label>\\n      <input type=\\\"text\\\" ng-model=\\\"manualModel.lat\\\">\\n   </div>\\n   <div class=\\\"form-field\\\">\\n      <label>Long</label>\\n      <input type=\\\"text\\\" ng-model=\\\"manualModel.lon\\\">\\n   </div>\\n   <button type=\\\"button\\\" class=\\\"button-primary\\\" ng-click=\\\"updateMapFromLatLon(manualModel.lat, manualModel.lon)\\\">\\n        <svg class=\\\"iconic\\\">\\n       <use\\n                                xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                                xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#location\\\">\\n                            </use>\\n        </svg>\\n        <span class=\\\"button-label\\\" translate>location.update_map</span>\\n    </button>\\n</div>\\n\";","module.exports = [\n    'PostEndpoint',\n    '_',\nfunction (\n    PostEndpoint,\n    _\n) {\n\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            id: '@',\n            name: '@',\n            model: '=',\n            required: '=',\n            attribute: '='\n        },\n        template: require('./relation.html'),\n        link: function ($scope) {\n\n            $scope.noResults = false;\n            $scope.searching = false;\n\n            $scope.$watch(function () {\n                return $scope.model;\n            }, function (newValue, oldValue) {\n                if (!$scope.selectedPost || $scope.selectedPost.id !== newValue) {\n                    $scope.selectedPost = PostEndpoint.get({ id: $scope.model });\n                }\n            });\n\n            $scope.search = function (event) {\n                event.preventDefault();\n                var query = { q : $scope.searchTerm };\n\n                if ($scope.attribute.config.input && $scope.attribute.config.input.form) {\n                    query.form = $scope.attribute.config.input.form.join(',');\n                }\n\n                $scope.noResults = false;\n                $scope.searching = true;\n\n                PostEndpoint.query(query).$promise.then(function (response) {\n                    $scope.searching = false;\n                    $scope.results = response.results;\n                    if (!response.results.length) {\n                        $scope.noResults = true;\n                    }\n                });\n            };\n\n            $scope.selectPost = function (post) {\n                $scope.model = post.id;\n                $scope.selectedPost = post;\n                $scope.results = null;\n            };\n\n            $scope.clearPost = function () {\n                $scope.model = null;\n                $scope.selectedPost = null;\n            };\n        }\n    };\n\n}];\n","module.exports = \"<form class=\\\"input-relation\\\">\\n\\t<p ng-if=\\\"model\\\">{{ selectedPost.title }} ({{ model }}) <button class=\\\"button-secondary icon-only alt trash\\\" type=\\\"button\\\" ng-click=\\\"clearPost()\\\" translate></button></p>\\n    <div class=\\\"input-inline\\\">\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Search..\\\" ng-model=\\\"searchTerm\\\">\\n        <button type=\\\"button\\\" ng-click=\\\"search($event)\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"loading\\\" ng-if=\\\"searching\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"line\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"line\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"line\\\"></div>\\n\\t\\t\\t\\t\\t\\t </div>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"button-label\\\" translate=\\\"nav.search\\\" ng-if=\\\"!searching\\\">Search</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"button-label\\\" translate=\\\"app.searching\\\" ng-if=\\\"searching\\\">Searching</span>\\n\\t\\t\\t\\t</button>\\n    </div>\\n\\t\\t<div class=\\\"alert error\\\" ng-if=\\\"noResults\\\">\\n\\t\\t\\t\\t<svg class=\\\"iconic\\\">\\n\\t\\t\\t\\t\\t<use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t<p translate=\\\"post.no_search_results\\\">Your search didn't match any posts</p>\\n\\t\\t</div>\\n    <ul>\\n    \\t<li ng-repeat=\\\"post in results\\\">\\n    \\t\\t<button type=\\\"button\\\" class=\\\"button-secondary icon-only check\\\" ng-click=\\\"selectPost(post)\\\" translate></button> {{ post.id }} : {{ post.title }}\\n    \\t</li>\\n    </ul>\\n</form>\\n\";","module.exports = PostEditor;\n\nPostEditor.$inject = [];\n\nfunction PostEditor() {\n    return {\n        restrict: 'E',\n        scope: {\n            post: '=',\n            form: '='\n        },\n        template: require('./post-editor.html'),\n        controller: PostEditorController\n    };\n}\n\nPostEditorController.$inject = [\n    '$scope',\n    '$q',\n    '$filter',\n    '$location',\n    '$translate',\n    '$timeout',\n    'moment',\n    'PostEntity',\n    'PostEndpoint',\n    'PostLockEndpoint',\n    'PostEditService',\n    'PostLockService',\n    'FormEndpoint',\n    'FormStageEndpoint',\n    'FormAttributeEndpoint',\n    'UserEndpoint',\n    'TagEndpoint',\n    'Notify',\n    '_',\n    'PostActionsService',\n    'MediaEditService',\n    '$state'\n  ];\n\nfunction PostEditorController(\n    $scope,\n    $q,\n    $filter,\n    $location,\n    $translate,\n    $timeout,\n    moment,\n    postEntity,\n    PostEndpoint,\n    PostLockEndpoint,\n    PostEditService,\n    PostLockService,\n    FormEndpoint,\n    FormStageEndpoint,\n    FormAttributeEndpoint,\n    UserEndpoint,\n    TagEndpoint,\n    Notify,\n    _,\n    PostActionsService,\n    MediaEditService,\n    $state\n  ) {\n\n    // Setup initial stages container\n    $scope.everyone = $filter('translate')('post.modify.everyone');\n    $scope.isEdit = !!$scope.post.id;\n    $scope.validationErrors = [];\n    $scope.visibleStage = 1;\n    $scope.enableTitle = true;\n\n    $scope.setVisibleStage = setVisibleStage;\n    $scope.loadData = loadData;\n\n    $scope.allowedChangeStatus = allowedChangeStatus;\n    $scope.deletePost = deletePost;\n    $scope.canSavePost = canSavePost;\n    $scope.savePost = savePost;\n    $scope.cancel = cancel;\n    $scope.tagKeys = [];\n    $scope.save = $translate.instant('app.save');\n    $scope.saving = $translate.instant('app.saving');\n    $scope.submit = $translate.instant('app.submit');\n    $scope.submitting = $translate.instant('app.submitting');\n    activate();\n\n    function activate() {\n        $scope.post.form = $scope.form;\n        $scope.loadData().then(function () {\n            // Use $timeout to delay this check till after form fields are rendered.\n            $timeout(() => {\n                // If the post in marked as 'Published' but it is not in\n                // a valid state to be saved as 'Published' warn the user\n                if ($scope.post.status === 'published' && !canSavePost()) {\n                    Notify.error('post.valid.invalid_state');\n                }\n            });\n        });\n\n        $scope.medias = {};\n        $scope.savingText = $translate.instant('app.saving');\n        $scope.submittingText = $translate.instant('app.submitting');\n    }\n\n    function setVisibleStage(stageId) {\n        $scope.visibleStage = stageId;\n    }\n\n    function loadData() {\n\n        var requests = [\n            FormStageEndpoint.queryFresh({ formId: $scope.post.form.id }).$promise,\n            FormAttributeEndpoint.queryFresh({ formId: $scope.post.form.id }).$promise,\n            TagEndpoint.queryFresh().$promise\n        ];\n\n        // If existing Post attempt to acquire lock\n        if ($scope.post.id) {\n            requests.push(PostLockEndpoint.getLock({'post_id': $scope.post.id}).$promise);\n        }\n\n        return $q.all(requests).then(function (results) {\n\n            if ($scope.post.id && !results[3]) {\n                // Failed to get a lock\n                // Bounce user back to the detail page where admin/manage post perm\n                // have the option to break the lock\n                $state.go('postEdit', {id: $scope.post.id});\n            }\n\n            var post = $scope.post;\n            var tasks = _.sortBy(results[0], 'priority');\n            var attributes = _.chain(results[1])\n                .sortBy('priority')\n                .value();\n            var categories = results[2];\n\n            // Initialize values on post (helps avoid madness in the template)\n            attributes.map(function (attr) {\n                // Create associated media entity\n                if (attr.input === 'upload') {\n                    $scope.medias[attr.key] = {};\n                }\n                if (attr.input === 'tags') {\n                    // adding category-objects attribute-options\n                    attr.options = PostActionsService.filterPostEditorCategories(attr.options, categories);\n                }\n                // @todo don't assign default when editing? or do something more sane\n                if (!$scope.post.values[attr.key]) {\n                    if (attr.input === 'location') {\n                        // Prepopulate location fields from message location\n                        if ($scope.post.values.message_location) {\n                            $scope.post.values[attr.key] = angular.copy($scope.post.values.message_location);\n                        } else {\n                            $scope.post.values[attr.key] = [null];\n                        }\n                    }  else if (attr.input === 'number') {\n                        $scope.post.values[attr.key] = [parseInt(attr.default)];\n                    } else if (attr.input === 'date' || attr.input === 'datetime') {\n                        $scope.post.values[attr.key] = attr.default ? [new Date(attr.default)] : [new Date()];\n                    } else {\n                        $scope.post.values[attr.key] = [attr.default];\n                    }\n                } else if (attr.input === 'date' || attr.input === 'datetime') {\n                    // Date picker requires date object\n                    // ensure that dates are preserved in UTC\n                    if ($scope.post.values[attr.key][0]) {\n                        $scope.post.values[attr.key][0] = moment($scope.post.values[attr.key][0]).toDate();\n                    }\n                } else if (attr.input === 'number') {\n                    // Number input requires a number\n                    if ($scope.post.values[attr.key][0]) {\n                        $scope.post.values[attr.key][0] = parseFloat($scope.post.values[attr.key][0]);\n                    }\n                } else if (attr.input === 'tags') {\n                    // tag.id needs to be a number\n                    if ($scope.post.values[attr.key]) {\n                        $scope.post.values[attr.key] = $scope.post.values[attr.key].map(function (id) {\n                            return parseInt(id);\n                        });\n                    }\n                }\n            });\n\n            _.each(tasks, function (task) {\n                task.attributes = _.filter(attributes, function (attribute) {\n                    return attribute.form_stage_id === task.id;\n                });\n            });\n\n            // If number of completed stages matches number of tasks - not including Post,\n            // assume they're all complete, and just show the first task\n            if (post.completed_stages.length === tasks.length - 1 && tasks.length > 1) {\n                $scope.setVisibleStage(tasks[1].id);\n            } else {\n                // Get incomplete stages\n                var incompleteStages = _.filter(tasks, function (task) {\n                    return !_.contains(post.completed_stages, task.id);\n                });\n\n                // Return lowest priority incomplete task - not including post\n                incompleteStages.length > 1 ? $scope.setVisibleStage(incompleteStages[1].id) : '';\n            }\n            $scope.tasks = tasks;\n        });\n\n    }\n\n    function canSavePost() {\n        return PostEditService.validatePost($scope.post, $scope.postForm, $scope.tasks);\n    }\n\n    function cancel() {\n        PostLockEndpoint.unlock($scope.post.lock).$promise.then(function (result) {\n            if ($scope.post.id) {\n                $state.go('posts.data.detail', {view: 'data', postId: $scope.post.id});\n            } else {\n                $state.go('posts.data');\n            }\n        });\n    }\n\n    function deletePost(post) {\n        PostActionsService.delete(post).then(function () {\n            $location.path('/');\n        });\n    }\n\n    function allowedChangeStatus() {\n        return $scope.post.allowed_privileges && $scope.post.allowed_privileges.indexOf('change_status') !== -1;\n    }\n\n    function resolveMedia() {\n        return MediaEditService.saveMedia($scope.medias, $scope.post);\n    }\n\n    function savePost() {\n        $scope.saving_post = true;\n        if (!$scope.canSavePost()) {\n            Notify.error('post.valid.validation_fail');\n            $scope.saving_post = false;\n            return;\n        }\n        // Create/update any associated media objects\n        // Media creation must be completed before we can progress with saving\n        resolveMedia().then(function () {\n\n            // Avoid messing with original object\n            // Clean up post values object\n            if ('message_location' in $scope.post.values) {\n                $scope.post.values.message_location = [];\n            }\n            var post = PostEditService.cleanPostValues(angular.copy($scope.post));\n            // adding neccessary tags to post.tags, needed for filtering\n            if ($scope.tagKeys.length > 0) {\n                post.tags = _.chain(post.values)\n                .pick($scope.tagKeys) // Grab just the 'tag' fields        { key1: [0,1], key2: [1,2], key3: undefined }\n                .values()             // then take their values            [ [0,1], [1,2], undefined ]\n                .flatten()            // flatten them into a single array  [0,1,1,2,undefined]\n                .filter()             // Remove nulls                      [0,1,1,2]\n                .uniq()               // Remove duplicates                 [0,1,2]\n                .value();             // and output\n            }\n            var request;\n            if (post.id) {\n                request = PostEndpoint.update(post);\n            } else {\n                request = PostEndpoint.save(post);\n            }\n            request.$promise.then(function (response) {\n                var success_message = (response.status && response.status === 'published') ? 'notify.post.save_success' : 'notify.post.save_success_review';\n\n                if (response.id && response.allowed_privileges.indexOf('read') !== -1) {\n                    $scope.saving_post = false;\n                    $scope.post.id = response.id;\n                    Notify.notify(success_message, { name: $scope.post.title });\n                    $state.go('posts.data.detail', {postId: response.id});\n                } else {\n                    Notify.notify(success_message, { name: $scope.post.title });\n                    $state.go('posts.map.all');\n                }\n            }, function (errorResponse) { // errors\n                var validationErrors = [];\n                // @todo refactor limit handling\n                _.each(errorResponse.data.errors, function (value, key) {\n                    // Ultimately this should check individual status codes\n                    // for the moment just check for the message we expect\n                    if (value.title === 'limit::posts') {\n                        Notify.limit('limit.post_limit_reached');\n                    } else {\n                        validationErrors.push(value);\n                    }\n                });\n                Notify.errors(_.pluck(validationErrors, 'message'));\n                $scope.saving_post = false;\n            });\n        });\n    }\n}\n","module.exports = \"<form name=\\\"postForm\\\" ng-submit=\\\"savePost()\\\" novalidate>\\n  <div class=\\\"mode-context init\\\" dropdown>\\n    <layout-class layout=\\\"a\\\"></layout-class>\\n    <header class=\\\"mode-context-header\\\">\\n        <ol class=\\\"breadcrumbs\\\">\\n            <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\"><bdi>{{nav.site.name}}</bdi></a></li>\\n        </ol>\\n\\n        <h1 class=\\\"mode-context-title\\\"><bdi>{{post.form.name}}</bdi></h1>\\n    </header>\\n\\n    <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n        <span class=\\\"label hidden\\\" translate=\\\"app.show_more_less\\\">Show more/less</span>\\n    </span>\\n\\n    <div class=\\\"mode-context-body\\\">\\n      <p markdown-to-html=\\\"post.form.description\\\"></p>\\n    </div>\\n  </div>\\n\\n  <main role=\\\"main\\\">\\n      <div class=\\\"toolbar\\\">\\n          <div class=\\\"button-group\\\" ng-show=\\\"post.id\\\">\\n              <button type=\\\"button\\\" class=\\\"button-flat\\\" ng-click=\\\"cancel()\\\" translate=\\\"app.cancel\\\">Cancel</button>\\n              <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  ng-if=\\\"!saving_post\\\">{{save}}</button>\\n              <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  disabled ng-if=\\\"saving_post\\\">{{saving}}\\n                <div class=\\\"loading\\\">\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                </div>\\n              </button>\\n          </div>\\n          <div class=\\\"button-group\\\" ng-show=\\\"!post.id\\\">\\n              <post-share button=\\\"true\\\" ng-show=\\\"!post.id\\\"></post-share>\\n              <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  ng-if=\\\"!saving_post\\\">{{submit}}</button>\\n              <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  disabled ng-if=\\\"saving_post\\\">{{submitting}}\\n                <div class=\\\"loading\\\">\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                </div>\\n              </button>\\n          </div>\\n\\n      </div>\\n\\n     <div class=\\\"main-col\\\">\\n\\n          <div class=\\\"form-sheet\\\">\\n              <div class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: form.color}\\\"></div>\\n\\n              <!-- Start Post custom fields -->\\n              <post-value-edit\\n                  ng-repeat=\\\"attribute in tasks[0].attributes | orderBy: 'priority' as filtered_result track by attribute.id\\\"\\n                  post=\\\"post\\\"\\n                  post-field=true\\n                  form=\\\"postForm\\\"\\n                  medias=\\\"medias\\\"\\n                  attribute=\\\"attribute\\\"\\n              ></post-value-edit>\\n              <!-- End Post custom fields -->\\n              <!-- IF: Editing an existing post -->\\n\\n              <!-- ELSE IF: Adding a new post w/o permission to manage who it's visible to\\n              <div class=\\\"postcard-metadata\\\">\\n                  <strong>This post will need to be moderated</strong> before it's visible to the public.\\n              </div>\\n              END: IF -->\\n\\n\\n\\n             <!-- IF: User has permission to see other 'Tasks' -->\\n\\n              <post-toolbox form=\\\"postForm\\\" post=\\\"post\\\"></post-toolbox>\\n\\n\\n         </div>\\n         <post-tabs\\n             ng-show=\\\"tasks.length > 1\\\"\\n             form=\\\"postForm\\\"\\n             post=\\\"post\\\"\\n             stages=\\\"tasks\\\"\\n             attributes=\\\"attributes\\\"\\n             medias=\\\"medias\\\"\\n             visible-stage=\\\"visibleStage\\\">\\n          </post-tabs>\\n\\n          <post-messages post=\\\"post\\\" ng-if=\\\"post.contact.id\\\"></post-messages>\\n          <!-- <div class=\\\"form-sheet\\\">\\n            <div class=\\\"form-sheet-actions\\\">\\n                  <div class=\\\"form-field\\\" ng-show=\\\"!post.id\\\">\\n                      <a href=\\\"timeline.html\\\" type=\\\"submit\\\" class=\\\"button button-alpha\\\" translate=\\\"app.submit\\\">Submit</a>\\n                      <a href=\\\"post-add.html\\\" class=\\\"button button-gamma button-flat\\\" translate\\\"app.submit_antoher\\\">Submit &amp; add another</a>\\n                  </div>\\n                  <div class=\\\"form-field\\\" ng-show=\\\"post.id\\\">\\n                      <a href=\\\"timeline.html\\\" type=\\\"submit\\\" class=\\\"button button-alpha\\\" translate=\\\"app.save\\\">Save</a>\\n                      <a href=\\\"post-add.html\\\" class=\\\"button button-gamma button-flat\\\" ng-click=\\\"cancel()\\\" translate\\\"app.cancel\\\">Cancel</a>\\n                  </div>\\n            </div>\\n          </div> -->\\n          <div class=\\\"form-sheet\\\" ng-if=\\\"post.id\\\">\\n              <div class=\\\"form-sheet-summary\\\">\\n                  <h3 class=\\\"form-sheet-title\\\" translate=\\\"post.delete_post\\\">Delete this post</h3>\\n              </div>\\n\\n              <div class=\\\"form-field\\\">\\n                  <p translate=\\\"post.delete_post_desc\\\"><strong>If you delete this post</strong>, all of its comments and messages will also be deleted. Proceed with caution.</p>\\n\\n                  <button class=\\\"button-destructive\\\" ng-click=\\\"deletePost(post)\\\">\\n                      <svg class=\\\"iconic\\\">\\n                          <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                      </svg>\\n                      <span class=\\\"button-label\\\" translate=\\\"post.delete_post\\\">Delete post</span>\\n                  </button>\\n              </div>\\n          </div>\\n\\n          <ush-logo></ush-logo>\\n      </div> <!-- END main column -->\\n\\n  </main>\\n</form>\\n\";","module.exports = PostValueEdit;\n\nPostValueEdit.$inject = [];\n\nfunction PostValueEdit() {\n    return {\n        restrict: 'E',\n        scope: {\n            form: '=',\n            post: '=',\n            attribute: '=',\n            postField: '=',\n            medias: '=',\n            categories: '='\n        },\n        controller: PostValueEditController,\n        template: require('./post-value-edit.html')\n    };\n}\n\nPostValueEditController.$inject = [\n    '$scope',\n    '_'\n];\n\nfunction PostValueEditController(\n    $scope,\n    _\n) {\n    var fieldSetAttributes = [\n        'checkbox',\n        'radio',\n        'tags'\n    ];\n    $scope.isDate = isDate;\n    $scope.isDateTime = isDateTime;\n    $scope.isText = isText;\n    $scope.isTextarea = isTextarea;\n    $scope.isCheckbox = isCheckbox;\n\n    $scope.dateFormat = { format: 'yyyy-mm-dd' };\n\n    $scope.canAddValue = canAddValue;\n    $scope.canRemoveValue = canRemoveValue;\n    $scope.addValue = addValue;\n    $scope.removeValue = removeValue;\n    $scope.taskIsMarkedCompleted = taskIsMarkedCompleted;\n\n    $scope.isFieldSetStructure = isFieldSetStructure;\n    activate();\n\n    function activate() {\n    }\n\n    function taskIsMarkedCompleted() {\n        // If we are dealing with a Post Field we want to always show errors for required post fields\n        // Otherwise we only want to show errors for required fields of Tasks marked as completed\n        return !_.isUndefined($scope.postField) ? true : _.contains($scope.post.completed_stages, $scope.attribute.form_stage_id);\n    }\n\n    function isFieldSetStructure(attr) {\n        if (_.contains(fieldSetAttributes, attr.input)) {\n            return true;\n        }\n        return false;\n    }\n    function isDate(attr) {\n        return attr.input === 'date';\n    }\n    function isDateTime(attr) {\n        return attr.input === 'datetime';\n    }\n    function isText(attr) {\n        return attr.input === 'text';\n    }\n    function isTextarea(attr) {\n        return attr.input === 'textarea';\n    }\n    function isCheckbox(attr) {\n        return attr.input === 'checkbox';\n    }\n\n    // Can more values be added for this attribute?\n    function canAddValue(attr) {\n        return (\n            // Attribute allows unlimited values\n            attr.cardinality === 0 ||\n            // Less values than cardinality allows\n            $scope.post.values[attr.key].length < attr.cardinality\n        );\n    }\n    // Can this values be removed?\n    function canRemoveValue(attr, key) {\n        return $scope.post.values[attr.key].length > 1;\n    }\n    // Add a new value\n    function addValue(attr) {\n        $scope.post.values[attr.key].push(null);\n    }\n    // Remove a value\n    function removeValue(attr, key) {\n        $scope.post.values[attr.key].splice(key, 1);\n    }\n}\n","module.exports = \"<div>\\n    <!-- Container for form-field structured elements -->\\n    <div ng-if=\\\"attribute.type === 'description' || attribute.type === 'title'\\\">\\n        <!-- Split between Title Desc and other values -->\\n        <div\\n            ng-if=\\\"attribute.type==='title'\\\"\\n            class=\\\"form-field init required\\\"\\n            adaptive-form\\n            ng-class=\\\"{\\n                'error': form.title.$invalid && form.title.$dirty,\\n                'success': !form.title.$invalid && form.title.$dirty\\n            }\\\"\\n        >\\n             <label>\\n                <bdi>{{attribute.label}}</bdi>\\n            </label>\\n            <p markdown-to-html=\\\"attribute.instructions\\\" ng-if=\\\"attribute.instructions\\\">\\n            </p>\\n            <input id=\\\"title\\\"\\n                name=\\\"title\\\" type=\\\"text\\\" ng-model=\\\"post.title\\\" ng-required=\\\"true\\\" ng-minlength=2 ng-maxlength=150 adaptive-input>\\n\\n            <div\\n                class=\\\"alert error\\\"\\n                ng-show=\\\"form.title.$dirty\\\"\\n                ng-repeat=\\\"(error, value) in form.title.$error\\\"\\n            >\\n                <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                </svg>\\n                <span translate=\\\"{{'post.valid.title.' + error}}\\\"></span>\\n            </div>\\n        </div>\\n\\n        <!-- Post stage default fields -->\\n        <div\\n            ng-if=\\\"attribute.type==='description'\\\"\\n            class=\\\"form-field init required\\\"\\n            ng-class=\\\"{\\n                'error': form.content.$invalid && form.content.$dirty,\\n                'success': !form.content.$invalid && form.content.$dirty\\n            }\\\"\\n            adaptive-form\\n        >\\n            <label>\\n                <bdi>{{attribute.label}}</bdi>\\n            </label>\\n            <p markdown-to-html=\\\"attribute.instructions\\\" ng-if=\\\"attribute.instructions\\\">\\n            </p>\\n            <textarea id=\\\"content\\\" name=\\\"content\\\" data-min-rows=\\\"1\\\" rows=\\\"1\\\"\\n                ng-model=\\\"post.content\\\" ng-required=\\\"true\\\" adaptive-input msd-elastic>\\n            </textarea>\\n\\n            <div class=\\\"alert error\\\" ng-show=\\\"form.content.$dirty\\\" ng-repeat=\\\"(error, value) in form.content.$error\\\">\\n                <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                </svg>\\n                <span translate=\\\"{{'post.valid.content.' + error}}\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-if=\\\"attribute.type !== 'description' && attribute.type !== 'title'\\\">\\n        <div\\n            ng-if=\\\"!isFieldSetStructure(attribute)\\\"\\n            class=\\\"form-field init\\\"\\n            adaptive-form\\n            ng-class=\\\"{\\n                'error': form['values_' + attribute.key].$invalid && form['values_' + attribute.key].$dirty,\\n                'success': ! form['values_' + attribute.key].$invalid && form['values_' + attribute.key].$dirty,\\n                'required': attribute.required,\\n                'date' : isDate(attribute) || isDateTime(attribute),\\n                'location' : attribute.input === 'location'\\n            }\\\"\\n        >\\n            <!-- Attribute Label -->\\n            <label for=\\\"values[{{attribute.key}}][0]\\\">\\n                <svg ng-show=\\\"attribute.response_private\\\" class=\\\"iconic\\\">\\n                    <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#lock-locked\\\"></use>\\n                </svg>\\n                <bdi>{{attribute.label}}</bdi>\\n            </label>\\n            <!-- Attribute Instructions -->\\n            <p markdown-to-html=\\\"attribute.instructions\\\" ng-if=\\\"attribute.instructions\\\"></p>\\n            <!-- attributes which use the form-field structure -->\\n            <div ng-repeat=\\\"(key, value) in post.values[attribute.key] track by key\\\">\\n                <div ng-switch=\\\"attribute.input\\\">\\n                    <!-- Standard fields -->\\n                    <!-- type: date -->\\n                    <div ng-switch-when=\\\"date\\\" >\\n                        <!-- Date icon -->\\n                        <div class=\\\"input-with-icon\\\">\\n                            <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#calendar\\\"></use>\\n                            </svg>\\n                            <input\\n                                type=\\\"date\\\"\\n                                pick-a-date=\\\"date\\\"\\n                                pick-a-date-options=\\\"dateFormat\\\"\\n\\n                                name=\\\"values_{{attribute.id}}\\\"\\n                                ng-model=\\\"post.values[attribute.key][key]\\\"\\n                                ng-required=\\\"attribute.required\\\"\\n                            />\\n                        </div>\\n                    </div>\\n                    <!-- type: datetime -->\\n                    <div ng-switch-when=\\\"datetime\\\" class=\\\"input-with-icon\\\">\\n                        <post-datetime\\n                            id=\\\"values[{{attribute.key}}][{{key}}]\\\"\\n                            name=\\\"values_{{attribute.id}}\\\"\\n                            ng-model=\\\"post.values[attribute.key][key]\\\"\\n                            ng-required=\\\"attribute.required\\\"\\n                        ></post-datetime>\\n                    </div>\\n                    <!-- type: select -->\\n                    <select\\n                        ng-switch-when=\\\"select\\\"\\n                        id=\\\"values[{{attribute.key}}][{{key}}]\\\"\\n                        name=\\\"values_{{attribute.id}}\\\"\\n                        ng-model=\\\"post.values[attribute.key][key]\\\"\\n                        ng-required=\\\"attribute.required\\\"\\n                        >\\n                        <option ng-repeat=\\\"opt in attribute.options\\\" value=\\\"{{opt}}\\\"><bdi>{{opt}}</bdi></option>\\n                    </select>\\n                    <!-- type: number -->\\n                    <input\\n                        ng-switch-when=\\\"number\\\"\\n                        id=\\\"values[{{attribute.key}}][{{key}}]\\\"\\n                        name=\\\"values_{{attribute.id}}\\\"\\n                        type=\\\"number\\\"\\n                        ng-model=\\\"post.values[attribute.key][key]\\\"\\n                        ng-required=\\\"attribute.required\\\"\\n                        >\\n                    <!-- type: text -->\\n                    <input\\n                        ng-switch-when=\\\"text\\\"\\n                        id=\\\"values[{{attribute.key}}][{{key}}]\\\"\\n                        name=\\\"values_{{attribute.id}}\\\"\\n                        type=\\\"text\\\"\\n                        ng-model=\\\"post.values[attribute.key][key]\\\"\\n                        ng-required=\\\"attribute.required\\\"\\n                        adaptive-input\\n                        >\\n                    <!-- type: textarea -->\\n                    <textarea\\n                        ng-switch-when=\\\"textarea\\\"\\n                        data-min-rows=\\\"1\\\"\\n                        rows=\\\"1\\\"\\n                        class=\\\"adapt-field\\\"\\n                        style=\\\"overflow-x: hidden; word-wrap: break-word; height: 55px;\\\"\\n                        id=\\\"values[{{attribute.key}}][{{key}}]\\\"\\n                        name=\\\"values_{{attribute.id}}\\\"\\n                        ng-model=\\\"post.values[attribute.key][key]\\\"\\n                        ng-required=\\\"attribute.required\\\"\\n                        adaptive-input\\n                        msd-elastic>\\n                    </textarea>\\n\\n                    <!-- Non standard fields -->\\n                    <!-- type: textarea -->\\n                    <textarea\\n                        ng-switch-when=\\\"markdown\\\"\\n                        data-min-rows=\\\"1\\\"\\n                        rows=\\\"1\\\"\\n                        class=\\\"adapt-field\\\"\\n                        style=\\\"overflow-x: hidden; word-wrap: break-word; height: 55px;\\\"\\n                        id=\\\"values[{{attribute.key}}][{{key}}]\\\"\\n                        name=\\\"values_{{attribute.id}}\\\"\\n                        ng-model=\\\"post.values[attribute.key][key]\\\"\\n                        ng-required=\\\"attribute.required\\\"\\n                        adaptive-input\\n                        msd-elastic>\\n                    </textarea>\\n                    <!-- type: relation -->\\n                    <post-relation\\n                        attribute=\\\"attribute\\\"\\n                        key=\\\"key\\\"\\n                        id=\\\"values[{{attribute.key}}][{{key}}]\\\"\\n                        name=\\\"values_{{attribute.id}}\\\"\\n                        model=\\\"post.values[attribute.key][key]\\\"\\n                        ng-required=\\\"attribute.required\\\"\\n                        ng-switch-when=\\\"relation\\\"></post-relation>\\n                    <!-- type: location -->\\n                    <post-location\\n                        attribute=\\\"attribute\\\"\\n                        key=\\\"key\\\"\\n                        id=\\\"values[{{attribute.key}}][{{key}}]\\\"\\n                        name=\\\"values_{{attribute.id}}\\\"\\n                        ng-model=\\\"post.values[attribute.key][key]\\\"\\n                        ng-required=\\\"attribute.required\\\"\\n                        ng-switch-when=\\\"location\\\"></post-location>\\n                    <!-- type: upload -->\\n                    <post-media\\n                        ng-switch-when=\\\"upload\\\"\\n                        name=\\\"values_{{attribute.id}}\\\"\\n                        media-has-caption=\\\"attribute.config.hasCaption\\\"\\n                        media=\\\"medias[attribute.key]\\\"\\n                        ng-model=\\\"post.values[attribute.key][key]\\\"\\n                        ng-required=\\\"attribute.required\\\"\\n                    ></post-media>\\n                    <!-- type: upload -->\\n                    <post-video-input\\n                        ng-switch-when=\\\"video\\\"\\n                        name=\\\"values_{{attribute.id}}\\\"\\n                        video-url=\\\"post.values[attribute.key][key]\\\"\\n                        ng-model=\\\"post.values[attribute.key][key]\\\"\\n                        ng-required=\\\"attribute.required\\\"\\n                    ></post-video-input>\\n                </div>\\n            </div>\\n            <div class=\\\"alert error\\\" ng-show=\\\"form['values_' + attribute.id].$dirty && taskIsMarkedCompleted()\\\" ng-repeat=\\\"(error, value) in form['values_' + attribute.id].$error\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                </svg>\\n                <span translate=\\\"{{'post.valid.values.' + error}}\\\" translate-values=\\\"{ label : attribute.label }\\\"></span>\\n            </div>\\n        </div>\\n        <!-- Container for fieldset structured elements -->\\n        <fieldset ng-if=\\\"isFieldSetStructure(attribute) && attribute.options.length > 0\\\">\\n            <!-- Attribute Label -->\\n            <label ng-class=\\\"{\\n                'error': form['values_' + attribute.key].$invalid && form['values_' + attribute.key].$dirty,\\n                'success': ! form['values_' + attribute.key].$invalid && form['values_' + attribute.key].$dirty,\\n                'required': attribute.required\\n            }\\\">\\n                <svg ng-show=\\\"attribute.response_private\\\" class=\\\"iconic\\\">\\n                    <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#lock-locked\\\"></use>\\n                </svg>\\n                <bdi>{{attribute.label}}<bdi>\\n                \\n            </label>\\n            <!-- Attribute Instructions -->\\n            <p markdown-to-html=\\\"attribute.instructions\\\" ng-if=\\\"attribute.instructions\\\"></p>\\n\\n            <!-- attributes which use the form-field structure -->\\n            <div ng-switch=\\\"attribute.input\\\">\\n                <!-- type: radio -->\\n                <div ng-switch-when=\\\"radio\\\">\\n                    <div ng-repeat=\\\"(key, value) in post.values[attribute.key] track by key\\\">\\n                    <div class=\\\"form-field radio\\\" ng-repeat=\\\"option in attribute.options\\\">\\n                        <label>\\n                            <input\\n                                name=\\\"values_{{attribute.id}}\\\"\\n                                type=\\\"radio\\\"\\n                                ng-model=\\\"post.values[attribute.key][key]\\\"\\n                                ng-required=\\\"attribute.required\\\"\\n                                value=\\\"{{option}}\\\"\\n                            >\\n                            <bdi>{{option}}</bdi>\\n                        </label>\\n                    </div>\\n                    </div>\\n                </div>\\n                <!-- type: checkbox -->\\n                <div ng-switch-when=\\\"checkbox\\\">\\n                    <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"option in attribute.options\\\">\\n                    <label>\\n                        <input\\n                            type=\\\"checkbox\\\"\\n                            checklist-model=\\\"post.values[attribute.key]\\\"\\n                            ng-required=\\\"attribute.required\\\"\\n                            name=\\\"values_{{attribute.id}}_{{option}}\\\"\\n                            checklist-value=\\\"option\\\"\\n                            value=\\\"option\\\"\\n                        >\\n                            <bdi>{{option}}</bdi>\\n                    </label>\\n                    </div>\\n                </div>\\n                <!-- type: categories -->\\n                <div ng-switch-when=\\\"tags\\\">\\n                    <post-category-editor\\n                        available=\\\"attribute.options\\\"\\n                        selected=\\\"post.values[attribute.key]\\\"\\n                        form=\\\"form\\\"\\n                        form-id=\\\"post.form.id\\\"\\n                        attribute=\\\"attribute\\\"\\n                        post-value=\\\"post.values[attribute.key]\\\"\\n                    ></post-category-editor>\\n                </div>\\n                <div class=\\\"alert error\\\" ng-show=\\\"form['values_' + attribute.id].$dirty && taskIsMarkedCompleted()\\\" ng-repeat=\\\"(error, value) in form['values_' + attribute.id].$error\\\">\\n                    <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                    </svg>\\n                    <span translate=\\\"{{'post.valid.values.' + error}}\\\" translate-values=\\\"{ label : attribute.label }\\\"></span>\\n                </div>\\n            </div>\\n        </fieldset>\\n    </div>\\n</div>\\n\";","module.exports = PostCategoryEditorDirective;\n\nPostCategoryEditorDirective.$inject = [];\n\nfunction PostCategoryEditorDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            formId: '=',\n            attribute: '=',\n            postValue: '=',\n            available: '=',\n            selected: '=',\n            form: '='\n        },\n        controller: PostCategoryEditorController,\n        template: require('./post-category-editor.html')\n    };\n}\nPostCategoryEditorController.$inject = ['$rootScope','$scope', 'TagEndpoint', 'FormAttributeEndpoint', 'Notify', '_'];\n\nfunction PostCategoryEditorController($rootScope, $scope, TagEndpoint, FormAttributeEndpoint, Notify, _) {\n}\n","module.exports = \"<category-selector\\n        enable-parents=\\\"false\\\"\\n        selected=\\\"selected\\\"\\n        form=\\\"form\\\"\\n        available=\\\"available\\\"\\n></category-selector>\\n<add-category\\n        form-id=\\\"formId\\\"\\n        attribute=\\\"attribute\\\"\\n        post-value=\\\"postValue\\\"\\n        available=\\\"available\\\"\\n></add-category>\";","module.exports = PostVerticalTabs;\n\nPostVerticalTabs.$inject = [];\nfunction PostVerticalTabs() {\n    return {\n        restrict: 'E',\n        scope: {\n            form: '=',\n            post: '=',\n            stages: '=',\n            attributes: '=',\n            visibleStage: '=',\n            medias: '='\n        },\n        template: require('./post-tabs.html'),\n        controller: PostVerticalTabsController\n    };\n}\n\nPostVerticalTabsController.$inject = [\n    '$scope',\n    'FormEndpoint',\n    'FormStageEndpoint',\n    'FormAttributeEndpoint',\n    'PostEditService',\n    '_'\n];\nfunction PostVerticalTabsController(\n    $scope,\n    FormEndpoint,\n    FormStageEndpoint,\n    FormAttributeEndpoint,\n    PostEditService,\n    _\n) {\n    $scope.setVisibleStage = setVisibleStage;\n    $scope.stageIsComplete = stageIsComplete;\n    $scope.toggleStageCompletion = toggleStageCompletion;\n\n\n    activate();\n\n    function activate() {\n        $scope.setVisibleStage($scope.visibleStage);\n    }\n\n    function setVisibleStage(stageId) {\n        $scope.visibleStage = stageId;\n    }\n\n    function stageIsComplete(stageId) {\n        return $scope.post.completed_stages.indexOf(stageId) > -1;\n    }\n\n    function toggleStageCompletion(stageId) {\n        stageId = parseInt(stageId);\n        if (_.includes($scope.post.completed_stages, stageId)) {\n            $scope.post.completed_stages = _.without($scope.post.completed_stages, stageId);\n\n        } else {\n            $scope.post.completed_stages.push(stageId);\n        }\n    }\n}\n","module.exports = \"<div class=\\\"form-sheet\\\" ng-repeat=\\\"stage in stages | limitTo: 1 - stages.length\\\">\\n    <header class=\\\"form-sheet-summary\\\">\\n        <h1 class=\\\"form-sheet-title section-title\\\">{{stage.label}}</h1>\\n    </header>\\n    <div ng-show=\\\"stage.show_when_published\\\" class=\\\"alert\\\">\\n        <p translate=\\\"survey.task_visible_when_published\\\">This task will be visible when post is published</p>\\n    </div>\\n    <!-- Handle stage completion -->\\n    <div ng-show=\\\"stage.task_is_internal_only\\\" class=\\\"alert\\\">\\n        <p>This task is marked for internal use only. It is not seen by users when they create a post.</p>\\n    </div>\\n    <div class=\\\"form-field switch\\\">\\n        <label translate=\\\"post.task_completed\\\" ng-class=\\\"{'required': stage.required}\\\">Task completed</label>\\n        <div class=\\\"toggle-switch\\\">\\n            <input\\n                class=\\\"tgl\\\"\\n                ng-attr-id=\\\"{{ 'toggle-complete-' + stage.id }}\\\"\\n                type=\\\"checkbox\\\"\\n                ng-checked=\\\"stageIsComplete(stage.id)\\\"\\n                ng-click=\\\"toggleStageCompletion(stage.id)\\\">\\n            <label class=\\\"tgl-btn\\\" for=\\\"toggle-complete-{{stage.id}}\\\" ng-attr-id=\\\"{{ 'toggle-complete-label-' + stage.id }}\\\"></label>\\n\\n        </div>\\n    </div>\\n    <post-value-edit\\n            ng-repeat=\\\"attribute in stage.attributes | orderBy: 'priority' as filtered_result track by attribute.id\\\"\\n            post=\\\"post\\\"\\n            form=\\\"form\\\"\\n            medias=\\\"medias\\\"\\n            attribute=\\\"attribute\\\"\\n    ></post-value-edit>\\n</div>\\n\";","module.exports = PostToolboxDirective;\n\nPostToolboxDirective.$inject = [\n    'PostActionsService',\n    'PostMetadataService',\n    'moment',\n    '$rootScope'\n];\nfunction PostToolboxDirective(\n    PostActionsService,\n    PostMetadataService,\n    moment,\n    $rootScope\n) {\n    return {\n        restrict: 'E',\n        scope: {\n            post:  '=',\n            form: '='\n        },\n        template: require('./post-toolbox.html'),\n        link: PostToolboxLink\n    };\n\n    function PostToolboxLink($scope) {\n        $scope.changeStatus = changeStatus;\n        $scope.allowedChangeStatus = allowedChangeStatus;\n        $scope.allowedChangeOwner = allowedChangeOwner;\n        $scope.editAuthor = editAuthor;\n        $scope.showUserRealname = showUserRealname;\n        $scope.showAuthorRealname = showAuthorRealname;\n        $scope.loadAuthorFormDefaults = loadAuthorFormDefaults;\n\n        activate();\n\n        function activate() {\n            $scope.source = PostMetadataService.formatSource($scope.post.source);\n            $scope.post.user = PostMetadataService.loadUser($scope.post);\n            $scope.statuses = PostActionsService.getStatuses();\n            formatDates();\n        }\n\n        function changeStatus(status) {\n            $scope.post.status = status;\n            $scope.form.status.$setDirty();\n        }\n\n        // TODO: this function should be moved to a general service handling permissions\n        function allowedChangeStatus() {\n            return $scope.post.allowed_privileges && $scope.post.allowed_privileges.indexOf('change_status') !== -1;\n        }\n\n        // FIXME: Enable after allowing change of author in API\n        function allowedChangeOwner() {\n            return false;\n        }\n\n        function editAuthor() {\n            $scope.showEditAuthorButton = false;\n            $scope.showEditAuthorForm = true;\n        }\n\n        function showUserRealname() {\n            return !$scope.showEditAuthorForm && !$scope.post.author_realname && $scope.post.user;\n        }\n\n        function showAuthorRealname() {\n            return !$scope.showEditAuthorForm && $scope.post.author_realname;\n        }\n\n        function loadAuthorFormDefaults() {\n            if ($scope.post.author_realname || $scope.post.user) {\n                $scope.showEditAuthorButton = true;\n                $scope.showEditAuthorForm = false;\n            } else {\n                $scope.showEditAuthorButton = false;\n                $scope.showEditAuthorForm = true;\n            }\n        }\n\n        function formatDates() {\n            $scope.displayCreated = moment($scope.post.created).format('LLL');\n\n            if ($scope.post.updated) {\n                $scope.displayUpdated = moment($scope.post.updated).format('LLL');\n            }\n        }\n    }\n}\n","module.exports = \"<div class=\\\"toolbox\\\" ng-if=\\\"post.id\\\">\\n  <!-- IF: User has permission to manage post status -->\\n  <div class=\\\"tool\\\" ng-if=\\\"allowedChangeStatus()\\\" dropdown>\\n    <fieldset class=\\\"custom-fieldset init\\\">\\n      <legend class=\\\"dropdown-trigger init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n        <span class=\\\"legend-label\\\">\\n          <span class=\\\"custom-fieldset-value\\\">\\n            <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\" ng-if=\\\"post.status=='published'\\\"></use>\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#document\\\" ng-if=\\\"post.status=='draft'\\\"></use>\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#box\\\" ng-if=\\\"post.status=='archived'\\\"></use>\\n            </svg>\\n            <span translate=\\\"post.published\\\" ng-if=\\\"post.status == 'published'\\\">Published</span>\\n            <span translate=\\\"post.draft\\\" ng-if=\\\"post.status == 'draft'\\\">Under review</span>\\n            <span translate=\\\"post.archived\\\" ng-if=\\\"post.status == 'archived'\\\">Archived</span>\\n\\n          </span>\\n        </span>\\n        <svg class=\\\"iconic chevron\\\">\\n          <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n      </legend>\\n      <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n        <div class=\\\"form-field radio icon-input\\\"\\n             name=\\\"status\\\"\\n             ng-model=\\\"post.status\\\"\\n             ng-repeat=\\\"status in statuses\\\"\\n             ng-class=\\\"{'checked' : status == post.status}\\\"\\n             ng-click=\\\"changeStatus(status)\\\"\\n             >\\n          <label for=\\\"{{status}}\\\">\\n          <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\" ng-if=\\\"status=='published'\\\"></use>\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#document\\\" ng-if=\\\"status=='draft'\\\"></use>\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#box\\\" ng-if=\\\"status=='archived'\\\"></use>\\n          </svg>\\n          <input type=\\\"radio\\\" id=\\\"{{status}}\\\" />\\n          <span translate=\\\"post.published\\\" ng-if=\\\"status == 'published'\\\">Published</span>\\n            <span translate=\\\"post.draft\\\" ng-if=\\\"status == 'draft'\\\">Under review</span>\\n            <span translate=\\\"post.archived\\\" ng-if=\\\"status == 'archived'\\\">Archived</span>\\n        </label>\\n      </div>\\n      </div>\\n    </fieldset>\\n  </div>\\n  <!-- END: IF -->\\n\\n  <!--// IF: User has permission to change the author & post timestamp //-->\\n  <div class=\\\"tool\\\" dropdown auto-close=\\\"disabled\\\" ng-if=\\\"allowedChangeOwner()\\\">\\n    <h6 class=\\\"tool-heading\\\" translate=\\\"post.author\\\">Author</h6>\\n\\n    <span class=\\\"tool-trigger init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle ng-click=\\\"loadAuthorFormDefaults()\\\">\\n      <svg class=\\\"iconic\\\">\\n        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n      </svg>\\n      <span class=\\\"label hidden\\\">Show/hide</span>\\n    </span>\\n\\n    <div class=\\\"toggle-content init\\\" dropdown-menu>\\n      <div class=\\\"listing-item\\\">\\n        <div class=\\\"listing-item-primary\\\" ng-if=\\\"showUserRealname()\\\">\\n          <div class=\\\"listing-item-image\\\">\\n            <img src=\\\"//www.gravatar.com/avatar/{{ post.user.gravatar || '00000000000000000000000000000000' }}?d=retro&s=40\\\" class=\\\"avatar\\\">\\n          </div>\\n          <h2 class=\\\"listing-item-title\\\">{{ post.user.realname }}</h2>\\n          <p class=\\\"listing-item-secondary\\\"></p>\\n        </div>\\n        <div class=\\\"listing-item-primary\\\" ng-if=\\\"showAuthorRealname()\\\">\\n          <h2 class=\\\"listing-item-title\\\">{{ post.author_realname }}</h2>\\n          <p class=\\\"listing-item-secondary\\\"></p>\\n        </div>\\n        <div class=\\\"listing-item-primary\\\" ng-if=\\\"showEditAuthorForm\\\">\\n          <div class=\\\"form-field init\\\">\\n            <input type=\\\"text\\\" class=\\\"adapt-field\\\" ng-model=\\\"post.author_realname\\\" focus=\\\"showEditAuthorForm\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"button-gamma button-flat\\\" data-modal=\\\"edit-author\\\" ng-click=\\\"editAuthor()\\\" ng-if=\\\"showEditAuthorButton\\\" translate=\\\"post.change_author\\\">Change author</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"tool\\\" dropdown auto-close=\\\"disabled\\\">\\n    <h6 class=\\\"tool-heading\\\" translate=\\\"post.post_date\\\">Post date</h6>\\n\\n    <span class=\\\"tool-trigger init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n      <svg class=\\\"iconic\\\">\\n        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n      </svg>\\n      <span class=\\\"label hidden\\\">Show/hide</span>\\n    </span>\\n\\n    <div class=\\\"toggle-content init\\\" dropdown-menu>\\n      <fieldset>\\n        <post-datetime ng-model=\\\"post.post_date\\\"></post-datetime>\\n        <ul class=\\\"metadata\\\">\\n            <li><span translate=\\\"post.created_at\\\"></span> {{displayCreated}} <span translate-values=\\\"{ source : source }\\\" translate=\\\"post.source\\\"></span></li>\\n            <li ng-if=\\\"post.updated\\\"><span translate=\\\"post.updated_at\\\"></span> {{displayUpdated}}</li>\\n        </ul>\\n      </fieldset>\\n    </div>\\n  </div>\\n\\n  <!-- END: IF -->\\n</div>\\n\";","module.exports = FilterPostSortingOptionsDirective;\n\nFilterPostSortingOptionsDirective.$inject = [\n    'moment',\n    '$rootScope',\n    '_'\n];\nfunction FilterPostSortingOptionsDirective(moment, $rootScope, _) {\n    return {\n        restrict: 'E',\n        require: 'ngModel',\n        scope: {},\n        template: require('./filter-post-sorting-options.html'),\n        link: PostSortingOptionsLink\n    };\n    function PostSortingOptionsLink($scope, $element, $attrs, ngModel) {\n        $scope.orderValue = {\n            value: 'created',\n            labelTranslateKey: 'global_filter.sort.orderby.created'\n        };\n        $scope.orderByOptions = {\n            value: 'created',\n            labelTranslateKey: 'global_filter.sort.orderby.filter_type_tag',\n            options: [\n                {\n                    value: 'post_date',\n                    labelTranslateKey: 'global_filter.sort.orderby.post_date'\n                },\n                {\n                    value: 'updated',\n                    labelTranslateKey: 'global_filter.sort.orderby.updated'\n                },\n                {\n                    value: 'created',\n                    labelTranslateKey: 'global_filter.sort.orderby.created'\n                }\n            ]\n        };\n        function activate() {\n            ngModel.$render = renderModelValue;\n            $scope.$watch('orderValue', saveToView, true);\n        }\n        function renderModelValue() {\n            $scope.orderValue = {\n                value: ngModel.$viewValue,\n                labelTranslateKey: 'global_filter.sort.orderby.' + ngModel.$viewValue\n            };\n        }\n        activate();\n        function saveToView(orderGroup) {\n            /** @DEVNOTE  this is not something we should need.\n             * We should be consistently getting the same type here. FIX FIX FIX before we merge\n            **/\n            if (_.isUndefined(orderGroup.value)) {\n                orderGroup = {value: orderGroup};\n            }\n            ngModel.$setViewValue(angular.copy(orderGroup.value));\n        }\n    }\n}\n","module.exports = \"<fieldset>\\n    <div class=\\\"toggle-content init active\\\">\\n        <div class=\\\"custom-select\\\">\\n            <select\\n                    name=\\\"orderByOptions\\\"\\n                    id=\\\"order\\\"\\n                    ng-options=\\\"option.labelTranslateKey | translate for option in orderByOptions.options track by option.value\\\"\\n                    ng-model=\\\"orderValue\\\">\\n            </select>\\n        </div>\\n    </div>\\n</fieldset>\\n\";","module.exports = FilterPostOrderAscDescDirective;\n\nFilterPostOrderAscDescDirective.$inject = [\n    'moment',\n    '$rootScope',\n    '_'\n];\nfunction FilterPostOrderAscDescDirective(moment, $rootScope, _) {\n    return {\n        restrict: 'E',\n        require: 'ngModel',\n        scope: {},\n        template: require('./filter-post-order-asc-desc.html'),\n        link: FilterPostOrderAscDescLink\n    };\n    function FilterPostOrderAscDescLink($scope, $element, $attrs, ngModel) {\n        $scope.selectedValue = {\n            value: 'desc',\n            labelTranslateKey: 'global_filter.sort.order.desc'};\n        $scope.activeOrderOptions = {\n            labelTranslateKey: 'global_filter.sort.order.filter_type_tag',\n            options: [\n                {\n                    value: 'desc',\n                    labelTranslateKey: 'global_filter.sort.order.desc'\n                },\n                {\n                    value: 'asc',\n                    labelTranslateKey: 'global_filter.sort.order.asc'\n                }\n            ]\n        };\n        //$scope.$watch('activeOrderOptions', saveToView, true);\n        function activate() {\n            ngModel.$render = renderModelValue;\n            $scope.$watch('selectedValue', saveToViewSelected, true);\n        }\n        function renderModelValue() {\n            $scope.selectedValue = {\n                value: ngModel.$viewValue,\n                labelTranslateKey: 'global_filter.sort.order.' + ngModel.$viewValue\n            };\n        }\n        activate();\n        function saveToViewSelected(orderGroup) {\n            ngModel.$setViewValue(angular.copy(orderGroup ? orderGroup.value.toString() : ''), 'radio');\n        }\n    }\n}\n","module.exports = \"<div class=\\\"form-field radio\\\" ng-repeat=\\\"orderOption in activeOrderOptions.options\\\">\\n    <label>\\n        <input type=\\\"radio\\\" id=\\\"{{orderOption.value}}\\\" value=\\\"{{orderOption.value}}\\\" name=\\\"order\\\" ng-model=\\\"selectedValue.value\\\" />\\n        <span>{{orderOption.labelTranslateKey|translate}}</span>\\n    </label>\\n</div>\\n\";","module.exports = FilterUnlockedOnTopDirective;\n\nFilterUnlockedOnTopDirective.$inject = [\n    '_'\n];\nfunction FilterUnlockedOnTopDirective(_) {\n    return {\n        restrict: 'E',\n        require: 'ngModel',\n        template: require('./filter-unlocked-on-top.html'),\n        scope: {},\n        link: FilterUnlockedOnTopDirectiveLink\n    };\n    function FilterUnlockedOnTopDirectiveLink($scope, $element, $attrs, ngModel) {\n        $scope.unlockedOnTop = {\n            value: 'true',\n            labelTranslateKey: 'global_filter.sort.unlockedOnTop.filter_type_tag'\n        };\n\n        function activate() {\n            ngModel.$render = renderModelValue;\n            $scope.$watch('unlockedOnTop', saveToView, true);\n        }\n\n        function renderModelValue() {\n            $scope.unlockedOnTop = {\n                value: ngModel.$viewValue,\n                labelTranslateKey: 'global_filter.sort.unlockedOnTop.filter_type_tag'\n            };\n        }\n        activate();\n        function saveToView(unlockedOnTop) {\n            ngModel.$setViewValue(angular.copy(unlockedOnTop ? unlockedOnTop.value.toString() : ''));\n        }\n    }\n}\n","module.exports = \"<div class=\\\"form-field checkbox\\\" ng-model-options=\\\"{ updateOn: 'default' }\\\">\\n    <label>\\n        <input type=\\\"checkbox\\\" id=\\\"unlockedOnTop\\\" value=\\\"unlockedOnTop\\\"\\n               name=\\\"unlockedOnTop\\\" ng-model=\\\"unlockedOnTop.value\\\"\\n               ng-true-value=\\\"'true'\\\" ng-false-value=\\\"'false'\\\"\\n               ng-model-options=\\\"{updateOn: 'default'}\\\">\\n        {{unlockedOnTop.labelTranslateKey|translate}}\\n    </label>\\n</div>\";","module.exports = PostDataEditor;\n\nPostDataEditor.$inject = [];\n\nfunction PostDataEditor() {\n    return {\n        restrict: 'E',\n        scope: {\n            post: '<'\n        },\n        template: require('./post-data-editor.html'),\n        controller: PostDataEditorController\n    };\n}\n\nPostDataEditorController.$inject = [\n    '$scope',\n    '$rootScope',\n    '$q',\n    '$filter',\n    '$location',\n    '$translate',\n    '$timeout',\n    'moment',\n    'PostEntity',\n    'PostEndpoint',\n    'PostLockEndpoint',\n    'PostLockService',\n    'PostEditService',\n    'FormEndpoint',\n    'FormStageEndpoint',\n    'FormAttributeEndpoint',\n    'UserEndpoint',\n    'TagEndpoint',\n    'Notify',\n    '_',\n    'PostActionsService',\n    'MediaEditService',\n    '$state',\n    '$transitions',\n    'LoadingProgress'\n];\nfunction PostDataEditorController(\n    $scope,\n    $rootScope,\n    $q,\n    $filter,\n    $location,\n    $translate,\n    $timeout,\n    moment,\n    postEntity,\n    PostEndpoint,\n    PostLockEndpoint,\n    PostLockService,\n    PostEditService,\n    FormEndpoint,\n    FormStageEndpoint,\n    FormAttributeEndpoint,\n    UserEndpoint,\n    TagEndpoint,\n    Notify,\n    _,\n    PostActionsService,\n    MediaEditService,\n    $state,\n    $transitions,\n    LoadingProgress\n  ) {\n\n    // Setup initial stages container\n    $scope.everyone = $filter('translate')('post.modify.everyone');\n\n    $scope.validationErrors = [];\n    $scope.visibleStage = 1;\n    $scope.enableTitle = true;\n    $scope.setVisibleStage = setVisibleStage;\n    $scope.loadData = loadData;\n    $scope.allowedChangeStatus = allowedChangeStatus;\n    $scope.deletePost = deletePost;\n    $scope.canSavePost = canSavePost;\n    $scope.savePost = savePost;\n    $scope.tagKeys = [];\n    $scope.save = $translate.instant('app.save');\n    $scope.saving = $translate.instant('app.saving');\n    $scope.cancel = cancel;\n    $scope.submit = $translate.instant('app.submit');\n    $scope.submitting = $translate.instant('app.submitting');\n    $scope.hasPermission = $rootScope.hasPermission('Manage Posts');\n    $scope.selectForm = selectForm;\n    $scope.isSaving = LoadingProgress.getSavingState;\n\n    var ignoreCancelEvent = false;\n    // Need state management\n    $scope.$on('event:edit:post:reactivate', function () {\n        activate();\n    });\n\n    $scope.$on('event:edit:post:data:mode:save', function () {\n        $scope.savePost();\n    });\n\n    /**\n     * $transitions.onStart is a handler for when a transition starts.\n     * When a transition starts here you want to either let it go or cancel it here,\n     * because you need the leavePost functionality with the warning modal and all that.\n     * The ignoreCancelEvent bool is for a special case where you literally are transitioning after the user accepts\n     * (you don't want to show it again) and you have the transition.from().name making sure you were in a posts.data.edit state\n     * (editing mode). If you are there, you either resolve or reject a promise depending on form state, user actions, etc.\n     * Resolve will let the transition continue. Reject will stop the transition meaning you stay in the edit mode\n     */\n    let unbindOnStart = $transitions.onStart({}, function (transition) {\n        //where is it going? transition.to().name\n        // return rejected promise or false to cancel the transition\n        // saveChangesAndContinue calls cancel which then resolves or rejects the state change.\n        if (!ignoreCancelEvent && transition.from().name === 'posts.data.edit') {\n            return saveChangesAndContinue();\n        }\n        return true;\n    });\n    $scope.$on('$destroy', () => {\n        unbindOnStart();\n    });\n\n    /**\n     *\n     * @returns {Promise}\n     */\n    function unlockPost() {\n        return new Promise(function (resolve, reject) {\n            /** @DEVNOTE I think we shouldn't need to check this,\n             * but in unstructured posts the lock is not available consistently.\n             **/\n            if ($scope.post.lock) {\n                PostLockEndpoint.unlock({\n                    post_id: $scope.post.id\n                }).$promise.then(resolve, reject);\n            } else {\n                return reject();\n            }\n        });\n    }\n\n    /**\n     * This function is called when the user attempts to leave the post edit form.\n     * - No changes: resolve and let the transition out of it continue\n     * - There are Changes: warn the user they will lose data if they don't save\n     * -  - Continue with no saving: let the transition continue (resolve)\n     * -  - Cancel button with no saving: let the transition continue (resolve)\n     * - - Save success:  let the transition continue (resolve)\n     * - - Save failure: cancel the transition, show errors or whatever the save post does.\n     */\n    function saveChangesAndContinue() {\n        return new Promise (function (resolve, reject) {\n            // Do we have unsaved changes? If not , leave them continue\n            if (!$scope.editForm || ($scope.editForm && !$scope.editForm.$dirty)) {\n                unlockPost().then(resolve, resolve); // Resolve even if unlock fails\n            } else {\n                // @uirouter-refactor if we end up having onbeforeunload features,we need to add this back\n                // if (ev) {\n                //     ev.preventDefault();\n                // }\n                Notify.confirmLeave('notify.post.leave_without_save').then(function () {\n                    // continue without saving goes here,\n                    // save goes here too, because it's a RESOLVE.\n                    unlockPost().then(resolve, resolve); // Resolve even if unlock fails\n                }, function () {\n                    // when reject, we should not change state/transition. This happens in save errors\n                    reject();\n                });\n            }\n        });\n    }\n\n    activate();\n\n    function activate() {\n        if ($scope.post.form) {\n            $scope.selectForm();\n        } else {\n            FormEndpoint.queryFresh().$promise.then(function (results) {\n                $scope.forms = results;\n            });\n        }\n        $scope.medias = {};\n        $scope.savingText = $translate.instant('app.saving');\n        $scope.submittingText = $translate.instant('app.submitting');\n\n    }\n\n    function setVisibleStage(stageId) {\n        $scope.visibleStage = stageId;\n    }\n    function selectForm() {\n        $scope.form = $scope.post.form;\n        $scope.loadData().then(function () {\n            // Use $timeout to delay this check till after form fields are rendered.\n            $timeout(() => {\n                // If the post in marked as 'Published' but it is not in\n                // a valid state to be saved as 'Published' warn the user\n                if ($scope.post.status === 'published' && !canSavePost()) {\n                    Notify.error('post.valid.invalid_state');\n                }\n            });\n        });\n    }\n\n    function loadData() {\n\n        var requests = [\n            FormStageEndpoint.queryFresh({ formId: $scope.post.form.id }).$promise,\n            FormAttributeEndpoint.queryFresh({ formId: $scope.post.form.id }).$promise,\n            TagEndpoint.queryFresh().$promise\n        ];\n\n        // If existing Post attempt to acquire lock\n        if ($scope.post.id) {\n            requests.push(PostLockEndpoint.getLock({'post_id': $scope.post.id}).$promise);\n        }\n\n        return $q.all(requests).then(function (results) {\n\n            if ($scope.post.id && !results[3]) {\n                // Failed to get a lock\n                // Bounce user back to the detail page where admin/manage post perm\n                // have the option to break the lock\n                $state.go('posts.data.detail', {view: 'data', postId: $scope.post.id});\n                return;\n            }\n\n            var post = $scope.post;\n            var tasks = _.sortBy(results[0], 'priority');\n            var attributes = _.chain(results[1])\n                .sortBy('priority')\n                .value();\n            var categories = results[2];\n\n            // Set Post Lock\n            $scope.post.lock = results[3];\n\n            // Initialize values on post (helps avoid madness in the template)\n            attributes.map(function (attr) {\n                // Create associated media entity\n                if (attr.input === 'upload') {\n                    $scope.medias[attr.key] = {};\n                }\n                if (attr.input === 'tags') {\n                    // adding category-objects attribute-options\n                    attr.options = PostActionsService.filterPostEditorCategories(attr.options, categories);\n                }\n\n                // @todo don't assign default when editing? or do something more sane\n                if (!$scope.post.values[attr.key]) {\n                    if (attr.input === 'location') {\n                        // Prepopulate location fields from message location\n                        if ($scope.post.values.message_location) {\n                            $scope.post.values[attr.key] = angular.copy($scope.post.values.message_location);\n                        } else {\n                            $scope.post.values[attr.key] = [null];\n                        }\n                    }  else if (attr.input === 'number') {\n                        $scope.post.values[attr.key] = [parseInt(attr.default)];\n                    } else if (attr.input === 'date' || attr.input === 'datetime') {\n                        $scope.post.values[attr.key] = attr.default ? [new Date(attr.default)] : [new Date()];\n                    } else {\n                        $scope.post.values[attr.key] = [attr.default];\n                    }\n                } else if (attr.input === 'date' || attr.input === 'datetime') {\n                    // Date picker requires date object\n                    // ensure that dates are preserved in UTC\n                    if ($scope.post.values[attr.key][0]) {\n                        $scope.post.values[attr.key][0] = moment($scope.post.values[attr.key][0]).toDate();\n                    }\n                } else if (attr.input === 'number') {\n                    // Number input requires a number\n                    if ($scope.post.values[attr.key][0]) {\n                        $scope.post.values[attr.key][0] = parseFloat($scope.post.values[attr.key][0]);\n                    }\n                } else if (attr.input === 'tags') {\n                    // tag.id needs to be a number\n                    if ($scope.post.values[attr.key]) {\n                        $scope.post.values[attr.key] = $scope.post.values[attr.key].map(function (id) {\n                            return parseInt(id);\n                        });\n                    }\n                }\n            });\n\n            _.each(tasks, function (task) {\n                task.attributes = _.filter(attributes, function (attribute) {\n                    return attribute.form_stage_id === task.id;\n                });\n            });\n\n            // If number of completed stages matches number of tasks - not including Post,\n            // assume they're all complete, and just show the first task\n            if (post.completed_stages.length === tasks.length - 1 && tasks.length > 1) {\n                $scope.setVisibleStage(tasks[1].id);\n            } else {\n                // Get incomplete stages\n                var incompleteStages = _.filter(tasks, function (task) {\n                    return !_.contains(post.completed_stages, task.id);\n                });\n\n                // Return lowest priority incomplete task - not including post\n                incompleteStages.length > 1 ? $scope.setVisibleStage(incompleteStages[1].id) : '';\n            }\n            $scope.tasks = tasks;\n        });\n\n    }\n\n    function canSavePost() {\n        return PostEditService.validatePost($scope.post, $scope.editForm, $scope.tasks);\n    }\n\n    function deletePost(post) {\n        PostActionsService.delete(post).then(function () {\n            $location.path('/');\n        });\n    }\n\n    function allowedChangeStatus() {\n        return $scope.post.allowed_privileges && $scope.post.allowed_privileges.indexOf('change_status') !== -1;\n    }\n\n    function resolveMedia() {\n        return MediaEditService.saveMedia($scope.medias, $scope.post);\n    }\n\n    function savePost() {\n        // Checking if changes are made\n        if ($scope.editForm && !$scope.editForm.$dirty) {\n            Notify.infoModal('post.valid.no_changes');\n            $rootScope.$broadcast('event:edit:post:data:mode:saveError');\n            return;\n        }\n\n        if (!$scope.canSavePost()) {\n            Notify.error('post.valid.validation_fail');\n            $rootScope.$broadcast('event:edit:post:data:mode:saveError');\n            return;\n        }\n        // Create/update any associated media objects\n        // Media creation must be completed before we can progress with saving\n        resolveMedia().then(function () {\n\n            // Avoid messing with original object\n            // Clean up post values object\n            if ('message_location' in $scope.post.values) {\n                $scope.post.values.message_location = [];\n            }\n            var post = PostEditService.cleanPostValues(angular.copy($scope.post));\n\n            // adding neccessary tags to post.tags, needed for filtering\n            if ($scope.tagKeys.length > 0) {\n                post.tags = _.chain(post.values)\n                .pick($scope.tagKeys) // Grab just the 'tag' fields        { key1: [0,1], key2: [1,2], key3: undefined }\n                .values()             // then take their values            [ [0,1], [1,2], undefined ]\n                .flatten()            // flatten them into a single array  [0,1,1,2,undefined]\n                .filter()             // Remove nulls                      [0,1,1,2]\n                .uniq()               // Remove duplicates                 [0,1,2]\n                .value();             // and output\n            }\n            var request;\n            if (post.id) {\n                request = PostEndpoint.update(post);\n            } else {\n                request = PostEndpoint.save(post);\n            }\n            request.$promise.then(function (response) {\n                var success_message = (response.status && response.status === 'published') ? 'notify.post.save_success' : 'notify.post.save_success_review';\n                $scope.editForm.$dirty = false;\n                // Save the updated post back to outside context\n                ignoreCancelEvent = true;\n                $state.go('posts.data.detail', {view: 'data', postId: response.id});\n\n                // DEVNOTE: Not sure how this would ever happen in the case of data view\n                // ideally this will go away when the two editors are integrated\n                // This is not currently relevant to the data view directive\n                // if data view becomes capable of creating Posts this will need to be changed\n                // as it will not currently prevent display of the Post\n\n                if (response.id && response.allowed_privileges.indexOf('read') !== -1) {\n                    $scope.post.id = response.id;\n                }\n\n                Notify.notify(success_message, { name: $scope.post.title });\n\n                // adding post to broadcast to make sure it gets filtered out from post-list if it does not match the filters.\n                $rootScope.$broadcast('event:edit:post:data:mode:saveSuccess', {post: response});\n            }, function (errorResponse) { // errors\n                var validationErrors = [];\n                // @todo refactor limit handling\n                _.each(errorResponse.data.errors, function (value, key) {\n                    // Ultimately this should check individual status codes\n                    // for the moment just check for the message we expect\n                    if (value.title === 'limit::posts') {\n                        Notify.limit('limit.post_limit_reached');\n                    } else {\n                        validationErrors.push(value);\n                    }\n                });\n                Notify.errors(_.pluck(validationErrors, 'message'));\n                $rootScope.$broadcast('event:edit:post:data:mode:saveError');\n\n            });\n        });\n    }\n        \n    function cancel() {\n        $state.go('posts.data.detail',{postId: $scope.post.id});\n    }\n}\n","module.exports = \"<form name=\\\"editForm\\\" novalidate>\\n  <div class=\\\"form-sheet\\\" role=\\\"article\\\">\\n    <div class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: form.color}\\\"></div>\\n        <!-- End post stage default fields -->\\n        <div class=\\\"form-field\\\">\\n          <twitter-widget ng-if=\\\"post.data_source_message_id\\\" twitter-widget-id=\\\"post.data_source_message_id\\\" twitter-widget-options=\\\"{'align': 'left'}\\\">\\n          </twitter-widget>\\n        </div>\\n\\n          <div\\n            ng-if=\\\"!form\\\"\\n            class=\\\"form-field init required\\\"\\n            ng-class=\\\"{'error': editForm.form.$invalid && editForm.form.$dirty, 'success': !editForm.form.$invalid && editForm.form.$dirty}\\\"\\n          >\\n\\n          <p translate=\\\"post.unstructured.add_survey.info\\\" translate-values=\\\"{source:post.source}\\\"></p>\\n          <label translate>post.unstructured.add_survey.title</label>\\n              <select\\n              class=\\\"custom-select\\\"\\n              ng-change=\\\"selectForm(form)\\\"\\n              ng-model=\\\"post.form\\\"\\n            >\\n              <option selected disabled translate>post.unstructured.add_survey.choose</option>\\n              <option ng-repeat=\\\"form in forms\\\" ng-value=\\\"form\\\">{{form.name}}</option>\\n            </select>\\n          <div class=\\\"alert error\\\" ng-show=\\\"editForm.form.$dirty\\\" ng-repeat=\\\"(error, value) in editForm.form.$error\\\">\\n            <svg class=\\\"iconic\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n            </svg>\\n            <p translate=\\\"{{'post.valid.content.' + error}}\\\"></p>\\n          </div>\\n        </div>\\n\\n        <!-- Start Post custom fields -->\\n\\n        <post-value-edit\\n            ng-repeat=\\\"attribute in tasks[0].attributes | orderBy: 'priority' as filtered_result track by attribute.id\\\"\\n            post=\\\"post\\\"\\n            post-field=true\\n            form=\\\"editForm\\\"\\n            medias=\\\"medias\\\"\\n            attribute=\\\"attribute\\\"\\n            ng-if=\\\"form\\\"\\n        ></post-value-edit>\\n      </div>\\n        <!-- End Post custom fields -->\\n        <!-- IF: Editing an existing post -->\\n\\n        <!-- ELSE IF: Adding a new post w/o permission to manage who it's visible to\\n        <div class=\\\"postcard-metadata\\\">\\n            <strong>This post will need to be moderated</strong> before it's visible to the public.\\n        </div>\\n        END: IF -->\\n        <!-- IF: User has permission to see other 'Tasks' -->\\n\\n        <post-toolbox form=\\\"editForm\\\" post=\\\"post\\\" ng-if=\\\"form\\\"></post-toolbox>\\n        <post-tabs\\n          ng-show=\\\"tasks.length > 1\\\"\\n          form=\\\"editForm\\\"\\n          post=\\\"post\\\"\\n          stages=\\\"tasks\\\"\\n          attributes=\\\"attributes\\\"\\n          medias=\\\"medias\\\"\\n          visible-stage=\\\"visibleStage\\\"\\n          ng-if=\\\"form\\\"\\n        >\\n        </post-tabs>\\n        <post-messages post=\\\"post\\\" ng-if=\\\"post.contact.id && post.source !== 'twitter'\\\"></post-messages>\\n      <div class=\\\"toolbar toolbar-secondary\\\">\\n        <div class=\\\"button-group\\\">\\n\\n          <button class=\\\"button-flat\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n          <button class=\\\"button button-alpha\\\" ng-click=\\\"savePost()\\\" ng-if=\\\"!isSaving()\\\" translate=\\\"\\\">app.save</button>\\n          <loading-dots button-class=\\\"'button-alpha'\\\" ng-if=\\\"isSaving()\\\" disabled=true label=\\\"'app.saving'\\\"></loading-dots>\\n        </div>\\n      </div>\\n  </form>\\n\";","module.exports = [\n    '_',\n    'Util',\n    '$translate',\n    '$rootScope',\n    'SliderService',\nfunction (\n    _,\n    Util,\n    $translate,\n    $rootScope,\n    SliderService\n) {\n    var scope;\n\n    var PostViewService = {\n        showNoPostsSlider: function () {\n            var scope = getScope();\n            // TODO review translation sanitization\n            $translate(['post.there_are_no_posts', 'post.in_this_deployment']).then(function (noPostText) {\n                scope.noPostText = noPostText;\n                SliderService.openTemplate(\n                    '<p><strong>{{noPostText[\"post.there_are_no_posts\"]}}</strong>{{noPostText[\"post.in_this_deployment\"]}}</p>' +\n                    '<add-post-text-button></add-post-text-button>' +\n                    '<button class=\"button-flat message-trigger\" ng-click=\"close()\">Dismiss</button>',\n                'file', false, scope, false, false, true);\n            });\n\n        }\n    };\n\n    function getScope() {\n        if (scope) {\n            scope.$destroy();\n        }\n        scope = $rootScope.$new();\n        return scope;\n    }\n\n    return Util.bindAllFunctionsToSelf(PostViewService);\n}];\n","module.exports = PostViewMap;\n\nPostViewMap.$inject = ['PostEndpoint', 'Maps', '_', 'PostFilters', 'Leaflet', '$q', '$rootScope', '$compile', '$location', '$timeout', '$state', '$translate'];\nfunction PostViewMap(PostEndpoint, Maps, _, PostFilters, L, $q, $rootScope, $compile, $location, $timeout, $state, $translate) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            noui: '@',\n            $transition$: '<',\n            filters: '<'\n        },\n        template: require('./post-view-map.html'),\n        link: PostViewMapLink\n    };\n\n    function PostViewMapLink($scope, element, attrs, controller) {\n        var map, markers;\n        var geoJsonLayers = [];\n        var limit = 200;\n        var requestBlockSize = 5;\n        var numberOfChunks = 0;\n        var currentGeoJsonRequests = [];\n\n        activate();\n\n        function activate() {\n            // Set the page title\n            $translate('post.posts').then(function (title) {\n                $scope.title = title;\n                $scope.$emit('setPageTitle', title);\n            });\n\n            // Grab initial filters\n            //$scope.filters = PostFilters.getFilters();\n\n            var posts = loadPosts();\n\n            // Start loading data\n            var mapSelector = $scope.noui ? '#map-noui' : '#map-full-size';\n            var createMapDirective =  Maps.createMap(element[0].querySelector(mapSelector));\n            var createMap = createMapDirective.then(function (data) {\n                map = data;\n            });\n            // When data is loaded\n            $q.all({\n                map: createMap,\n                posts: posts\n            })\n                .then(function (data) {\n                    addPostsToMap(data.posts);\n                    return data;\n                })\n                .then(watchFilters);\n\n            // Change state on mode change\n            $scope.$watch(() => {\n                return PostFilters.getModeId();\n            }, (mode) => {\n                if (PostFilters.getMode() === 'savedsearch') {\n                    $state.go('posts.map.savedsearch', {savedSearchId: PostFilters.getModeId()});\n                } else if (PostFilters.getMode() === 'collection') {\n                    $state.go('posts.map.collection', {collectionId: PostFilters.getModeId()});\n                } else {\n                    $state.go('posts.map.all');\n                }\n            });\n\n            // Cleanup leaflet map\n            $scope.$on('$destroy', function () {\n                if (map) {\n                    map.remove();\n                }\n            });\n\n        }\n\n        function clearData() {\n            if (geoJsonLayers.length > 0) {\n                angular.forEach(geoJsonLayers, function (layer) {\n                    //map.removeLayer(layer)\n                    layer.clearLayers();\n                });\n                markers = undefined;\n                geoJsonLayers = [];\n            }\n        }\n\n        function addPostsToMap(posts) {\n            var geojson = L.geoJson(posts, {\n                pointToLayer: Maps.pointToLayer,\n                onEachFeature: onEachFeature\n            });\n\n            if (map.options.clustering) {\n\n                markers = markers ? markers : L.markerClusterGroup();\n                // This has to be done individually.\n                // Using clusterLayer.addLayers() breaks the clustering.\n                // Need to investigate as this should have been fixing in v1.0.0\n                angular.forEach(geojson.getLayers(), function (layer) {\n                    markers.addLayer(layer);\n                });\n            } else {\n                markers = geojson;\n            }\n            markers.addTo(map);\n            geoJsonLayers.push(markers);\n\n            if (posts.features.length > 0) {\n                map.fitBounds(geojson.getBounds());\n            }\n            // Focus map on data points but..\n            // Avoid zooming further than 15 (particularly when we just have a single point)\n            if (map.getZoom() > 15) {\n                map.setZoom(15);\n            }\n            $timeout(function () {\n                map.invalidateSize();\n            }, 1);\n        }\n\n        function watchFilters() {\n            // whenever filters change, reload the posts on the map\n            $scope.$watch(function () {\n                return $scope.filters;\n            }, function (newValue, oldValue) {\n                var diff = _.omit(newValue, function (value, key, obj) {\n                    return _.isEqual(oldValue[key], value);\n                });\n                var diffLength = _.keys(diff).length;\n\n                if (diffLength > 0) {\n                    cancelCurrentRequests();\n                    clearData();\n                    reloadMapPosts();\n                }\n            }, true);\n        }\n\n        function cancelCurrentRequests() {\n            _.each(currentGeoJsonRequests, function (request) {\n                request.$cancelRequest();\n            });\n            currentGeoJsonRequests = [];\n        }\n\n        function reloadMapPosts(query) {\n            var test = loadPosts(query);\n            test.then(addPostsToMap);\n        }\n\n        function loadPosts(query, offset, currentBlock) {\n            offset = offset || 0;\n            currentBlock = currentBlock || 1;\n\n            query = query || PostFilters.getQueryParams($scope.filters);\n\n            var conditions = _.extend(query, {\n                limit: limit,\n                offset: offset,\n                has_location: 'mapped'\n            });\n\n            var request = PostEndpoint.geojson(conditions);\n            currentGeoJsonRequests.push(request);\n\n            return request.$promise.then(function (posts) {\n\n                // Set number of chunks\n                if (offset === 0 && posts.total > limit) {\n                    numberOfChunks = Math.floor((posts.total - limit) / limit);\n                    numberOfChunks += ((posts.total - limit) % limit) > 0 ? 1 : 0;\n                }\n\n                // Retrieve blocks of chunks\n                // At the end of a block request the next block of chunks\n                if (numberOfChunks > 0 && currentBlock === 1) {\n                    var block = numberOfChunks > requestBlockSize ? requestBlockSize : numberOfChunks;\n                    numberOfChunks -= requestBlockSize;\n                    while (block > 0) {\n                        block -= 1;\n                        offset += limit;\n                        loadPosts(query, offset, block).then(addPostsToMap);\n                    }\n                }\n                return posts;\n            });\n        }\n\n        function goToPost(post) {\n            // reload because otherwise the layout does not reload and that is wrong because we change layouts on data and map\n            $state.go('posts.data.detail', {postId: post.id}, {reload: true});\n        }\n\n        function onEachFeature(feature, layer) {\n            layer.on('click', function (e) {\n                // Grab the layer that was actually clicked on\n                var layer = e.layer;\n                // If we somehow got the feature group: grab the first child\n                // because the FeatureGroup doesn't get added to the map when clustering\n                if (layer instanceof L.FeatureGroup) {\n                    layer = layer.getLayers()[0];\n                }\n\n                if (layer.getPopup()) {\n                    layer.openPopup();\n                } else {\n                    getPostDetails(feature).then(function (details) {\n                        var scope = $rootScope.$new();\n                        scope.post = details;\n                        scope.goToPost = goToPost;\n                        scope.selectedPost = {post : details};\n\n                        var el = $compile('<post-card selected-post=\"selectedPost\" post=\"post\" short-content=\"true\" click-action=\"goToPost\"></post-card>')(scope);\n\n                        layer.bindPopup(el[0], {\n                            'minWidth': '300',\n                            'maxWidth': '300',\n                            'className': 'pl-popup'\n                        });\n                        layer.openPopup();\n                    });\n                }\n            });\n        }\n\n        function getPostDetails(feature) {\n            return PostEndpoint.get({id: feature.properties.id}).$promise;\n        }\n\n    }\n}\n","module.exports = \"<div>\\n    <layout-class layout=\\\"a\\\"></layout-class>\\n    <div ui-view=\\\"mode-context\\\" noanimation=\\\"true\\\" filters=\\\"filters\\\"></div>\\n    <main role=\\\"main\\\">\\n\\t\\t<post-toolbar is-loading=\\\"isLoading\\\" filters=\\\"filters\\\" edit-mode=\\\"{ editing: false }\\\"></post-toolbar>\\n    \\t<div class=\\\"map-view\\\">\\n\\t\\t    <div id=\\\"map-full-size\\\" class=\\\"map full-size\\\" ng-show=\\\"!noui\\\"></div>\\n\\t\\t    <div id=\\\"map-noui\\\" class=\\\"map map-only\\\" ng-show=\\\"noui\\\"></div>\\n\\t\\t</div>\\n\\t</main>\\n</div>\\n\";","module.exports = PostViewCreate;\n\nPostViewCreate.$inject = [];\n\nfunction PostViewCreate() {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        controller: PostViewCreateController\n    };\n}\nPostViewCreateController.$inject = ['$rootScope', '$scope', 'PostSurveyService', 'MainsheetService', '$location', 'Notify'];\n\nfunction PostViewCreateController($rootScope, $scope, PostSurveyService, MainsheetService, $location, Notify) {\n    // resetting path to map-view when mainsheet-modal is closed\n    $rootScope.$on('mainsheet:statechange', function () {\n                if (MainsheetService.getState() && $location.path() === '/views/create') {\n                    $location.path('/views/map');\n                }\n            });\n\n    activate();\n    function activate() {\n        PostSurveyService\n            .allowedSurveys()\n            .then(function (forms) {\n                $scope.forms = forms;\n                if (forms.length > 0) {\n                    $scope.disabled = false;\n                }\n                if ($scope.forms.length === 1) {\n                    $location.path('/posts/create/' + $scope.forms[0].id);\n                } else {\n                    MainsheetService.openTemplate(\n                    '<add-post-survey-list></add-post-survey-list>', 'app.submit_response', $scope\n                );\n                }\n            }, function (errorResponse) {\n                Notify.apiErrors(errorResponse);\n            });\n    }\n}\n","module.exports = PostCardDirective;\n\nPostCardDirective.$inject = ['FormEndpoint', 'PostLockService', '$rootScope'];\nfunction PostCardDirective(FormEndpoint, PostLockService, $rootScope) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            post:  '=',\n            canSelect: '=',\n            selectedPosts: '=',\n            shortContent: '@',\n            externalClickAction: '=clickAction',\n            selectedPost: '='\n        },\n        template: require('./card.html'),\n        link: function ($scope, $element) {\n            $scope.isPostLocked = isPostLocked;\n            $scope.clickAction = clickAction;\n            activate();\n\n            $scope.stopClickPropagation = function ($event) {\n                $event.stopPropagation();\n            };\n\n            function isPostLocked() {\n                return PostLockService.isPostLockedForCurrentUser($scope.post);\n            }\n\n            function activate() {\n                loadForm($scope.post.form);\n            }\n\n            function loadForm(form) {\n                // Replace form with full object\n                if (form) {\n                    FormEndpoint.get({id: form.id}, function (form) {\n                        $scope.post.form = form;\n                    });\n                }\n            }\n\n            function clickAction(evt) {\n                let postActions = $element.find('post-actions')[0];\n                // If the click was inside post-actions\n                if (evt && $element && postActions.contains(evt.target)) {\n                    // But ignore the action\n                    return;\n                }\n\n                $scope.externalClickAction($scope.post);\n            }\n        }\n    };\n}\n","module.exports = \"<article ng-class=\\\"['postcard', {selected: post.id === selectedPost.post.id}]\\\" >\\n    <div class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: post.form.color}\\\"></div>\\n    <div class=\\\"listing-item-select\\\">\\n        <input ng-show=\\\"canSelect\\\" type=\\\"checkbox\\\" checklist-value=\\\"post.id\\\" checklist-model=\\\"selectedPosts\\\" ng-click=\\\"stopClickPropagation($event)\\\">\\n    </div>\\n    <div class=\\\"postcard-body\\\" ng-click=\\\"clickAction($event)\\\">\\n      <header class=\\\"postcard-header\\\">\\n\\n        <post-metadata post=\\\"post\\\" hide-date-this-week=\\\"true\\\"></post-metadata>\\n        <!-- this is used in the map view card and the sidebar card in the data view-->\\n        <post-actions post=\\\"post\\\"></post-actions>\\n      </header>\\n        <div class=\\\"postcard-overflow\\\">\\n            <div class=\\\"postcard-title\\\">\\n                <div class=\\\"postcard-field\\\">\\n                <div class=\\\"tweet-container\\\">\\n                  <twitter-widget ng-if=\\\"post.data_source_message_id && post.source === 'twitter'\\\" twitter-widget-id=\\\"post.data_source_message_id\\\">\\n                  </twitter-widget>\\n                </div>\\n\\n                <bdi>{{ post.title || post.content | stripHtml | limitTo:150 }}{{ !post.title && post.content.length > 150 ? ' ...' : ''}}</bdi>\\n                </div>\\n            </div>\\n\\n\\n            <post-preview-media post=\\\"post\\\"></post-preview-media>\\n            <!-- <img src=\\\"http://lorempixel.com/400/300/\\\" class=\\\"postcard-image\\\"> -->\\n\\n            <div ng-if=\\\"!shortContent\\\" class=\\\"postcard-field\\\">\\n                <bdi>{{ post.content | stripHtml }}</bdi>\\n            </div>\\n            <div ng-if=\\\"shortContent\\\" class=\\\"postcard-field\\\">\\n                <bdi>{{ post.content | stripHtml | limitTo:150 }}{{ post.content.length > 150 ? ' ...' : ''}}</bdi>\\n            </div>\\n        </div>\\n    </div> <!-- /postcard-body -->\\n</article>\\n\";","module.exports = [\n    'FormAttributeEndpoint',\n    'MediaEndpoint',\n    '_',\nfunction (\n    FormAttributeEndpoint,\n    MediaEndpoint,\n    _\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            post: '='\n        },\n        template: require('./post-preview-media.html'),\n        link: function ($scope) {\n            if (!$scope.post.form) {\n                return;\n            }\n\n            FormAttributeEndpoint.query({formId: $scope.post.form.id}).$promise\n                .then(function (attributes) {\n\n                    // Use image from the first media attribute\n                    var mediaAttribute = _.find(attributes, function (attribute) {\n                        return attribute.type === 'media';\n                    });\n                    const mediaExists = mediaAttribute &&\n                                        !_.isUndefined($scope.post.values[mediaAttribute.key]) &&\n                                        !_.isNumber($scope.post.values[mediaAttribute.key]);\n                    // Get the media url and caption\n                    if (mediaExists) {\n                        MediaEndpoint.get({id: $scope.post.values[mediaAttribute.key]}).$promise\n                            .then(function (media) {\n                                $scope.media = media;\n                                $scope.hasCaption = mediaAttribute.config ? mediaAttribute.config.hasCaption : true;\n                            });\n                    }\n                });\n        }\n    };\n}];\n","module.exports = \"<div class=\\\"postcard-field\\\" ng-show=\\\"media\\\">\\n\\t<img ng-if=\\\"hasCaption\\\" ng-src=\\\"{{ media.original_file_url }}\\\" alt=\\\"{{ media.caption }}\\\" class=\\\"postcard-image\\\">\\n\\t<img ng-if=\\\"!hasCaption\\\" ng-src=\\\"{{ media.original_file_url }}\\\" class=\\\"postcard-image\\\">\\n</div>\\n\\n\";","module.exports = AddPostButtonDirective;\n\nAddPostButtonDirective.$inject = [];\nfunction AddPostButtonDirective() {\n    return {\n        restrict: 'E',\n        scope: true,\n        replace: true,\n        controller: AddPostButtonController,\n        template: require('./add-post-button.html')\n    };\n}\n\nAddPostButtonController.$inject = [\n    '$scope',\n    'Notify',\n    'MainsheetService',\n    'PostSurveyService',\n    '$location',\n    '$rootScope'\n];\nfunction AddPostButtonController(\n    $scope,\n    Notify,\n    MainsheetService,\n    PostSurveyService,\n    $location,\n    $rootScope\n) {\n    $scope.forms = [];\n    $scope.disabled = true;\n    $scope.handleClick = handleClick;\n    // this is to add a class for adjustment of the fab-button in data-view when demo-bar is visible.\n    $scope.upgradeButton = $rootScope.demoBarVisible && $rootScope.loggedin;\n\n    activate();\n\n    function activate() {\n        getAvailableSurveys();\n    }\n\n    function getAvailableSurveys() {\n        PostSurveyService\n        .allowedSurveys()\n        .then(function (forms) {\n            $scope.forms = forms;\n            if (forms.length > 0) {\n                $scope.disabled = false;\n            }\n        }, function (errorResponse) {\n            Notify.apiErrors(errorResponse);\n        });\n    }\n\n    function handleClick() {\n        if ($scope.forms.length === 1) {\n            $location.path('/posts/create/' + $scope.forms[0].id);\n        } else {\n            MainsheetService.openTemplate(\n                '<add-post-survey-list></add-post-survey-list>', 'app.submit_response', $scope\n            );\n        }\n    }\n\n}\n","module.exports = \"<div class=\\\"fab\\\" ng-class=\\\"{'upgrade-button': upgradeButton}\\\" data-message=\\\"add-post\\\">\\n    <button type=\\\"button\\\" class=\\\"button-alpha button-fab\\\" ng-click=\\\"handleClick()\\\" ng-disabled=\\\"disabled\\\" ng-class=\\\"{'disabled': $parent.$parent.bulkActionsSelected}\\\">\\n        <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n            <foreignObject>\\n                <img class=\\\"icon\\\" src=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/icons/png/plus-2x.png\") + \"\\\">\\n            </foreignObject>\\n        </svg>\\n        <span class=\\\"hidden\\\">Add</span>\\n    </button>\\n</div>\\n\";","module.exports = AddPostSurveyListDirective;\n\nAddPostSurveyListDirective.$inject = [];\n\nfunction AddPostSurveyListDirective() {\n    return {\n        restrict: 'E',\n        scope: true,\n        controller: AddPostSurveyListController,\n        template: require('./add-post-survey-list.html')\n    };\n}\n\nAddPostSurveyListController.$inject = [\n    '$scope',\n    '$location'\n];\n\nfunction AddPostSurveyListController(\n    $scope,\n    $location\n) {\n\n    $scope.handleClick = handleClick;\n\n    function handleClick(form) {\n        $scope.closeMainsheet();\n        $location.path('posts/create/' + form.id);\n    }\n\n}\n","module.exports = \"<ul>\\n    <li ng-repeat=\\\"form in forms\\\" ng-show=\\\"!form.targeted_survey\\\">\\n        <a ng-click=\\\"handleClick(form)\\\">\\n            <span class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: form.color}\\\"></span>\\n            <bdi>{{form.name}}</bdi>\\n        </a>\\n    </li>\\n</ul>\\n\";","module.exports = AddPostButtonDirective;\n\nAddPostButtonDirective.$inject = [];\nfunction AddPostButtonDirective() {\n    return {\n        restrict: 'E',\n        scope: true,\n        controller: AddPostButtonController,\n        template: require('./add-post-text-button.html')\n    };\n}\n\nAddPostButtonController.$inject = [\n    '$scope',\n    'PostSurveyService',\n    'SliderService',\n    '$location'\n];\nfunction AddPostButtonController(\n    $scope,\n    PostSurveyService,\n    SliderService,\n    $location\n) {\n    $scope.forms = [];\n    $scope.buttonToggle = false;\n    $scope.buttonOptionsStyle = { opacity: 0, display: 'none' };\n    $scope.toggleButton = toggleButton;\n    $scope.createPost = createPost;\n    $scope.disabled = false;\n\n    activate();\n\n    function activate() {\n        // Load forms\n        PostSurveyService.allowedSurveys()\n            .then(function (forms) {\n                $scope.forms = forms;\n                if (forms.length > 0) {\n                    $scope.disabled = false;\n                }\n            });\n    }\n\n    function createPost(path) {\n        SliderService.close();\n        $location.path('/posts/create/' + path);\n    }\n\n    function toggleButton() {\n        if ($scope.forms.length === 1) {\n            createPost($scope.forms[0].id);\n        } else {\n            $scope.buttonToggle = !$scope.buttonToggle;\n            if ($scope.buttonToggle) {\n                $scope.buttonOptionsStyle = { opacity: 1, display: 'flex' };\n            } else {\n                $scope.buttonOptionsStyle = { opacity: 0, display: 'none' };\n            }\n        }\n    }\n}\n","module.exports = \"<button type=\\\"button\\\" class=\\\"button-alpha button-dropdown init\\\" ng-click=\\\"toggleButton()\\\"  ng-class=\\\"{ 'active': buttonToggle }\\\">\\n    <svg class=\\\"iconic\\\">\\n        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n        <foreignObject>\\n            <img class=\\\"icon\\\" src=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/icons/png/plus-2x.png\") + \"\\\">\\n        </foreignObject>\\n    </svg>\\n    <span class=\\\"button-label\\\" translate=\\\"nav.add_post\\\">Add post</span>\\n</button>\\n\\n<ul class=\\\"dropdown-menu init\\\" ng-show=\\\"buttonToggle\\\" ng-class=\\\"{ 'active': buttonToggle }\\\">\\n      <li ng-repeat=\\\"form in forms\\\">\\n          <a ng-click=\\\"createPost(form.id)\\\">\\n              <span class=\\\"post-band\\\">\\n              </span>\\n              {{form.name}}\\n          </a>\\n      </li>\\n</ul>\\n\";","module.exports = ModeContext;\n\nModeContext.$inject = [];\n\nfunction ModeContext() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '='\n        },\n        controller: ModeContextController,\n        template: require('./mode-context.html')\n    };\n}\n\nModeContextController.$inject = [\n    '$scope'\n];\nfunction ModeContextController(\n    $scope\n) {\n\n    activate();\n\n    function activate() {\n\n    }\n}\n","module.exports = \"<div class=\\\"mode-context init\\\" ng-controller=\\\"navigation as nav\\\" dropdown auto-close=\\\"disabled\\\" filter-by-survey-dropdown is-open=\\\"filtersMenuOpen\\\">\\n    <header class=\\\"mode-context-header\\\" ng-class=\\\"{ 'has-logo' : nav.site.image_header }\\\">\\n        <h1 class=\\\"mode-context-title\\\"><a href=\\\"/\\\" ng-bind=\\\"nav.site.name\\\"></a></h1>\\n        <img ng-if=\\\"nav.site.image_header\\\" ng-src=\\\"{{ nav.site.image_header }}\\\" class=\\\"deployment-logo\\\" />\\n    </header>\\n\\n    <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n        <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n        <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n    </span>\\n\\n    <div class=\\\"mode-context-body\\\">\\n        <p markdown-to-html=\\\"nav.site.description\\\"></p>\\n\\n        <!-- <saved-search-create></saved-search-create> -->\\n        <mode-context-form-filter></mode-context-form-filter>\\n    </div>\\n</div>\\n\";","module.exports = ModeContextFormFilterDirective;\n\nModeContextFormFilterDirective.$inject = [];\nfunction ModeContextFormFilterDirective() {\n    return {\n        restrict: 'E',\n        scope: true,\n        controller: ModeContextFormFilter,\n        template: require('./mode-context-form-filter.html')\n    };\n}\nModeContextFormFilter.$inject = ['$scope', 'FormEndpoint', 'PostEndpoint', '$q', '_', '$rootScope', 'PostSurveyService', 'PostFilters', '$timeout', '$location'];\nfunction ModeContextFormFilter($scope, FormEndpoint, PostEndpoint, $q, _, $rootScope, PostSurveyService, PostFilters, $timeout, $location) {\n    $scope.forms = [];\n    $scope.showOnly = showOnly;\n    $scope.hide = hide;\n    $scope.hasManageSettingsPermission = $rootScope.hasManageSettingsPermission;\n    $scope.canAddToSurvey = PostSurveyService.canCreatePostInSurvey;\n    $scope.showLanguage = false;\n    $scope.languageToggle = languageToggle;\n    $scope.unmapped = 0;\n    $scope.location = $location;\n    $scope.goToUnmapped = goToUnmapped;\n    $scope.unknown = [];\n\n    activate();\n\n    // whenever filters change, reload the stats\n    $scope.$watch(function () {\n        return $scope.filters;\n    }, function (newValue, oldValue) {\n        var diff = _.omit(newValue, function (value, key, obj) {\n            return _.isEqual(oldValue[key], value);\n        });\n        var diffLength = _.keys(diff).length;\n\n        if (diffLength > 0) {\n            getPostStats(PostFilters.getFilters()).$promise.then(updateCounts);\n        }\n    }, true);\n\n    function activate() {\n        // Load forms\n        $scope.forms = FormEndpoint.query();\n\n        var postCountRequest = getPostStats($scope.filters);\n        $q.all([$scope.forms.$promise, postCountRequest.$promise]).then(function (responses) {\n            if (!responses[1] || !responses[1].totals || !responses[1].totals[0]) {\n                return;\n            }\n            updateCounts(responses[1]);\n        });\n    }\n\n    function getPostStats(filters) {\n        var query = PostFilters.getQueryParams(filters);\n        var queryParams = _.extend({}, query, {\n            'group_by': 'form',\n            include_unmapped: true\n        });\n\n        // we want stats for all forms, not just the ones visible right now\n        if (queryParams.form) {\n            delete queryParams.form;\n        }\n\n        // deleting source, we want stats for all datasources to keep the datasource-bucket-stats unaffected by data-source-filters\n        if (queryParams.source) {\n            delete queryParams.source;\n        }\n        return PostEndpoint.stats(queryParams);\n    }\n\n    function updateCounts(stats) {\n        // assigning count for different data-sources\n        $scope.sourceStats = getSourceStats(stats);\n        // Setting nb of unmapped posts\n        $scope.unmapped = stats.unmapped ? stats.unmapped : 0;\n        // assigning count for all forms\n        _.each($scope.forms, function (form) {\n            let posts = _.filter(stats.totals[0].values, function (value) {\n                // checking source-type, hack to keep the stats in data-source-buckets the same even if adding a source-filter.\n                return value.id === form.id && _.contains($scope.filters.source, value.type);\n            });\n\n            form.post_count = 0;\n            // calculating totals\n            if (posts) {\n                form.post_count = _.reduce(posts, function (count, post) {\n                    if (post.total) {\n                        return count + post.total;\n                    }\n                    return 0;\n                }, form.post_count);\n            }\n        });\n    }\n\n    function getSourceStats(stats) {\n        var sourceStats = [];\n        var providers = ['email', 'sms', 'twitter', 'web'];\n        // calculating stats for each datasource, based on the current form-filter\n        _.each(providers, function (provider) {\n            var posts = _.filter(stats.totals[0].values, function (value) {\n                    // including posts without a form in the stats\n                    var id = value.id === null ? 'none' : value.id;\n                    return value.type === provider && _.contains($scope.filters.form, id);\n                });\n\n            if (posts && posts.length > 0) {\n                var sourceStat = {total: 0};\n                sourceStat.total = _.reduce(posts, function (count, post) {\n                    if (post.total) {\n                        return count + post.total;\n                    }\n                    return count;\n                }, sourceStat.total);\n                sourceStat.type = provider;\n                sourceStats.push(sourceStat);\n            }\n        });\n        return sourceStats;\n    }\n\n    function languageToggle() {\n        $scope.showLanguage = !$scope.showLanguage;\n    }\n\n    function showOnly(formId) {\n        $scope.filters.form.splice(0, $scope.filters.form.length, formId);\n    }\n\n    function goToUnmapped() {\n        var filters = PostFilters.getDefaults();\n        filters.form.push('none');\n        filters.has_location = 'unmapped';\n        PostFilters.setFilters(filters);\n        $location.path('/views/data');\n    }\n\n    function hide(formId) {\n        var index = $scope.filters.form.indexOf(formId);\n        if (index !== -1) {\n            $scope.filters.form.splice(index, 1);\n        }\n    }\n}\n","module.exports = \"<form class=\\\"survey-filter\\\">\\n\\n    <div class=\\\"survey-filter-checkbox init\\\" ng-class=\\\"{ checked : (filters.form.indexOf(form.id) !== -1) }\\\" ng-repeat=\\\"form in forms\\\" dropdown>\\n        <div class=\\\"survey-filter-parent\\\">\\n            <div class=\\\"survey-filter-label\\\">\\n                <span class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: form.color}\\\"></span>\\n                <label class=\\\"checked\\\">\\n                    <input type=\\\"checkbox\\\" checklist-value=\\\"form.id\\\" checklist-model=\\\"filters.form\\\">\\n                    <bdi>{{ ::form.name }}</bdi>\\n                </label>\\n            </div>\\n             <span class=\\\"survey-filter-total init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n                <!-- todo! show count -->\\n                {{ form.post_count }}\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                </svg>\\n            </span>\\n            <ul class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                <li ng-show=\\\"canAddToSurvey(form)\\\">\\n                    <a ui-sref=\\\"postCreate({id: form.id })\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" translate=\\\"post.add_to_form\\\" translate-values=\\\"{ form: form.name }\\\">Add to</span>\\n                    </a>\\n                </li>\\n                <div class=\\\"divider\\\"></div>\\n                <li><a translate=\\\"post.show_only_form\\\" translate-values=\\\"{ form: form.name }\\\" ng-click=\\\"showOnly(form.id)\\\">Show only </a></li>\\n                <li><a translate=\\\"post.hide_form\\\" translate-values=\\\"{ form: form.name }\\\" ng-click=\\\"hide(form.id)\\\">Hide</a></li>\\n                <div class=\\\"divider\\\"></div>\\n                <li ng-show=\\\"hasManageSettingsPermission()\\\">\\n                    <a ui-sref=\\\"settings.surveys.id({id: form.id, action: 'edit'})\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#cog\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" translate=\\\"nav.survey_settings\\\">Survey settings</span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</form>\\n<div class=\\\"tool\\\" ng-show=\\\"unmapped > 0\\\">\\n        <p>\\n            <span ng-show=\\\"unmapped < 2\\\" translate=\\\"global_filter.unmapped_start_one\\\"></span>\\n            <span ng-show=\\\"unmapped > 1\\\" translate=\\\"global_filter.unmapped_start_many\\\"></span>\\n            <a ng-click=\\\"goToUnmapped()\\\" ng-show=\\\"unmapped < 2\\\" translate=\\\"global_filter.unmapped_one\\\" translate-values=\\\"{'post_nb': unmapped}\\\">\\n            <a ng-click=\\\"goToUnmapped()\\\" ng-show=\\\"unmapped > 1\\\" translate=\\\"global_filter.unmapped_many\\\" translate-values=\\\"{'post_nb': unmapped}\\\">\\n        <strong>global_filter.unmapped_one</strong></a> <span translate=\\\"global_filter.unmapped_end\\\"></span></p>\\n</div>\\n<div class=\\\"form-field\\\" ng-show=\\\"hasManageSettingsPermission()\\\">\\n    <a ui-sref=\\\"settings.surveys.create\\\" class=\\\"button button-link\\\">\\n        <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n        </svg>\\n        <span class=\\\"button-label\\\" translate=\\\"app.create_new_survey\\\">Create new survey</span>\\n    </a>\\n</div>\\n<div class=\\\"tool\\\">\\n    <h6 class=\\\"tool-heading\\\" translate=\\\"app.data_sources\\\"></h6>\\n    <filter-by-datasource post-stats=\\\"sourceStats\\\" filters=\\\"filters\\\"></filter-by-datasource>\\n</div>\\n<div class=\\\"tool\\\">\\n    <h6 class=\\\"tool-heading\\\" translate=\\\"app.language\\\">Language</h6>\\n    <span class=\\\"tool-trigger init\\\" ng-class=\\\"{'active': showLanguage}\\\">\\n    </span>\\n    <language-switch></language-switch>\\n    <div class=\\\"toggle-content\\\" ng-class=\\\"{'active': showLanguage}\\\">\\n\\n    </div>\\n</div>\\n\";","module.exports = FilterBySurveryDirective;\n\nFilterBySurveryDirective.$inject = [];\nfunction FilterBySurveryDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '='\n        },\n        replace: true,\n        controller: FilterBySurveryController,\n        template: require('./filter-by-survey.html')\n    };\n}\n\nFilterBySurveryController.$inject = ['$scope', '$rootScope'];\nfunction FilterBySurveryController($scope, $rootScope) {\n\n    $scope.openFilters = openFilters;\n\n    activate();\n\n    function activate() {\n    }\n\n    function openFilters() {\n        $rootScope.$emit('filters:open:dropdown');\n    }\n}\n","module.exports = \"<div class=\\\"embed-survey-filter\\\" embed-only=\\\"true\\\" class=\\\"toolbox hide-when-medium\\\">\\n    <button ng-click=\\\"openFilters()\\\" class=\\\"button-beta button-plain mode-context-trigger\\\" translate=\\\"app.filter_by_survey\\\">Filter by survey</button>\\n</div>\\n\";","module.exports = FilterBySurveryDropdownDirective;\n\nFilterBySurveryDropdownDirective.$inject = [];\nfunction FilterBySurveryDropdownDirective() {\n    return {\n        restrict: 'A',\n        replace: true,\n        controller: FilterBySurveryDropdownController\n    };\n}\n\nFilterBySurveryDropdownController.$inject = ['$scope', '$rootScope'];\nfunction FilterBySurveryDropdownController($scope, $rootScope) {\n\n    $scope.filtersMenuOpen = false;\n\n    activate();\n\n    function activate() {\n        $rootScope.$on('filters:open:dropdown', function () {\n            externalOpenDropDown();\n        });\n    }\n\n    function externalOpenDropDown() {\n        $scope.filtersMenuOpen = true;\n    }\n}\n","module.exports = PostToolbarDirective;\n\nPostToolbarDirective.$inject = [];\nfunction PostToolbarDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '=',\n            selectedPost: '='\n        },\n        controller: PostToolbarController,\n        template: require('./post-toolbar.html')\n    };\n}\n\nPostToolbarController.$inject = ['$scope', '$rootScope', 'Notify', 'PostLockService', '$state', 'LoadingProgress'];\nfunction PostToolbarController($scope, $rootScope, Notify, PostLockService, $state, LoadingProgress) {\n    $scope.setEditMode = setEditMode;\n    $scope.savePost = savePost;\n    $scope.hasPermission = $rootScope.hasPermission('Manage Posts');\n    $scope.editEnabled = editEnabled;\n    $scope.isLoading = LoadingProgress.getLoadingState;\n    $scope.isSaving = LoadingProgress.getSavingState;\n    $scope.editMode = editMode;\n    $scope.cancel = cancel;\n    $scope.hideOtherActions = hideOtherActions;\n    $scope.showOtherActions = showOtherActions;\n    $scope.filtersActive = false;\n\n\n    function editEnabled() {\n        if (!$scope.selectedPost || !$scope.hasPermission) {\n            return false;\n        }\n\n        return $scope.selectedPost ? !PostLockService.isPostLockedForCurrentUser($scope.selectedPost) : false;\n    }\n\n    function savePost() {\n        $rootScope.$broadcast('event:edit:post:data:mode:save');\n    }\n\n    function editMode() {\n        return $state.$current.name === 'posts.data.edit';\n    }\n\n    function setEditMode() {\n        if (editEnabled()) {\n            $state.go('posts.data.edit', {postId: $scope.selectedPost.id});\n        }\n    }\n\n    function cancel() {\n        $state.go('posts.data.detail', {postId: $scope.selectedPost.id});\n    }\n\n    function hideOtherActions() {\n        $scope.filtersActive = true;\n    }\n\n    function showOtherActions() {\n        $scope.filtersActive = false;\n    }\n}\n","module.exports = \"<div class=\\\"toolbar\\\">\\n    <!-- toolbar -->\\n\\n    <!-- floating action button -->\\n    <add-post-button></add-post-button>\\n\\n    <filter-posts filters=\\\"filters\\\" embed-only=\\\"false\\\" on-open=\\\"hideOtherActions()\\\" on-close=\\\"showOtherActions()\\\"></filter-posts>\\n\\n    <div class=\\\"button-group\\\" embed-only=\\\"false\\\" ng-hide=\\\"filtersActive\\\">\\n        <div ng-if=\\\"!editMode()\\\">\\n            <post-share filters=\\\"filters\\\" button=\\\"true\\\"></post-share>\\n            <button ng-if=\\\"editEnabled()\\\" class=\\\"button button-alpha\\\" ng-click=\\\"setEditMode()\\\" translate>app.edit</button>\\n        </div>\\n\\n        <div ng-if=\\\"editMode()\\\">\\n            <button ng-if=\\\"hasPermission\\\" class=\\\"button\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n            <button ng-if=\\\"hasPermission && !isSaving()\\\" ng-click=\\\"savePost()\\\" class=\\\" button button-alpha\\\" translate>app.save</button>\\n            <loading-dots button-class=\\\"'button-alpha'\\\" disabled=true label=\\\"'app.saving'\\\" ng-if=\\\"isSaving()\\\"></loading-dots>\\n        </div>\\n    </div>\\n\\n    <div embed-only=\\\"true\\\" class=\\\"hide-until-medium\\\">\\n        <filter-posts filters=\\\"filters\\\" on-open=\\\"hideOtherActions()\\\" on-close=\\\"showOtherActions()\\\"></filter-posts>\\n        <div class=\\\"button-group\\\">\\n            <div ng-hide=\\\"filtersActive\\\">\\n                <div ng-if=\\\"!editMode()\\\">\\n                    <post-share filters=\\\"filters\\\" button=\\\"true\\\"></post-share>\\n                    <button ng-if=\\\"editEnabled()\\\" class=\\\"button button-alpha\\\" ng-click=\\\"setEditMode()\\\" translate>app.edit</button>\\n                </div>\\n\\n                <div ng-if=\\\"editMode()\\\">\\n                    <button ng-if=\\\"hasPermission\\\" class=\\\"button\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n                    <button ng-if=\\\"hasPermission && !isSaving()\\\" ng-click=\\\"savePost()\\\" class=\\\" button button-alpha\\\" translate>app.save</button>\\n                </div>\\n            </div>\\n        </div>\\n        <loading-dots button-class=\\\"'button-alpha'\\\" disabled=true label=\\\"'app.saving'\\\" ng-if=\\\"isSaving()\\\"></loading-dots>\\n    </div>\\n\\n    <!-- toolbar -->\\n    <div class=\\\"progress-bar\\\" ng-show=\\\"isLoading()\\\">\\n        <span>\\n            ..\\n        </span>\\n    </div>\\n</div>\";","module.exports = FilterByDatasourceDirective;\n\nFilterByDatasourceDirective.$inject = [];\nfunction FilterByDatasourceDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '=',\n            postStats: '='\n        },\n        replace: true,\n        controller: FilterByDatasourceController,\n        template: require('./filter-by-datasource.html')\n    };\n}\n\nFilterByDatasourceController.$inject = ['$scope', '$rootScope', 'ConfigEndpoint', '_', '$location'];\nfunction FilterByDatasourceController($scope, $rootScope, ConfigEndpoint, _, $location) {\n    $scope.dataSources = [];\n    $scope.providers = [];\n    $scope.formatHeading = formatHeading;\n    $scope.showOnly = showOnly;\n    $scope.hide = hide;\n    $scope.featureEnabled = featureEnabled;\n    $scope.showOnlyIncoming = showOnlyIncoming;\n    $scope.assignStatsToProviders = assignStatsToProviders;\n    $scope.getTotals = getTotals;\n    $scope.toggleFilters = toggleFilters;\n    $scope.$watch('postStats', function (postStats) {\n        assignStatsToProviders();\n    });\n\n    activate();\n\n    function activate() {\n        if ($scope.featureEnabled()) {\n            ConfigEndpoint.get({ id: 'data-provider' }).$promise.then(function (results) {\n                $scope.dataSources = results.providers;\n                assignStatsToProviders();\n            });\n        }\n    }\n\n    function toggleFilters(filter) {\n        var index = $scope.filters.source.indexOf(filter);\n        if (index !== -1) {\n            $scope.filters.source.splice(index, 1);\n        } else {\n            $scope.filters.source.push(filter);\n        }\n    }\n\n    function assignStatsToProviders() {\n        $scope.providers = _.map($scope.postStats, function (provider) {\n                var obj = {};\n                obj.label = provider.type === 'sms' ? 'SMS' : provider.type.substr(0, 1).toUpperCase() + provider.type.substr(1);\n                obj.heading = formatHeading(obj.label);\n                obj.total = getTotals(provider.type);\n                return obj;\n            });\n\n        // removing duplicates and null-values\n        $scope.providers = _.chain($scope.providers)\n            .compact()\n            .uniq()\n            .value();\n\n        // if user is logged in and is allowed to see the configs,\n        // we add all enabled datasources, even if there are 0 posts\n        if ($scope.dataSources) {\n            var smsProviders = ['nexmo', 'twilio', 'frontlinesms', 'smssync'];\n            _.each($scope.dataSources, function (source, key) {\n                    if (source) {\n                        var type = _.contains(smsProviders, key) ? 'SMS' : key.substr(0, 1).toUpperCase() + key.substr(1);\n                        var exists = _.filter($scope.providers, { label: type });\n                        if (exists.length < 1) {\n                            var obj = {};\n                            obj.label = type;\n                            obj.heading = formatHeading(obj.label);\n                            obj.total = getTotals(key); // Isn't this always 0?\n                            $scope.providers.push(obj);\n                        }\n                    }\n                });\n        }\n\n        $scope.providers = _.sortBy($scope.providers, 'label');\n    }\n\n    function getTotals(source) {\n        var stats = _.findWhere($scope.postStats, {type: source.toLowerCase()});\n        if (stats && stats.total) {\n            return stats.total;\n        }\n        return 0;\n    }\n\n\n    function formatHeading(name) {\n        switch (name) {\n            case 'Twitter':\n                return 'Tweets';\n            case 'SMS':\n                return 'SMS';\n            case 'Email':\n                return 'Emails';\n            case 'Web':\n                return 'Web';\n            default:\n                return ' ';\n        }\n    }\n\n    function showOnly(source) {\n        if ($scope.filters.form.indexOf('none') < 0) {\n            $scope.filters.form.push('none');\n        }\n        $scope.filters.source = [source.toLowerCase()];\n    }\n\n    function hide(source) {\n        var index = $scope.filters.source.indexOf(source.toLowerCase());\n        if (index !== -1) {\n            $scope.filters.source = [];\n            _.each($scope.providers, function (provider) {\n                if (provider.label !== source) {\n                    $scope.filters.source.push(provider.label.toLowerCase());\n                }\n            });\n        }\n    }\n\n    function showOnlyIncoming(source) {\n        $scope.filters.form = ['none'];\n        $scope.filters.source = [source.toLowerCase()];\n        $location.path('/views/data');\n    }\n\n    function featureEnabled() {\n        return $rootScope.isAdmin();\n    }\n}\n","module.exports = \"<form class=\\\"survey-filter\\\">\\n    <div \\n        class=\\\"survey-filter-checkbox init\\\"\\n        ng-class=\\\"{checked: (filters.source.indexOf(provider.label.toLowerCase()) !== -1)}\\\"\\n        ng-repeat=\\\"provider in providers\\\"\\n        dropdown\\n    >\\n        <div class=\\\"survey-filter-parent\\\">\\n            <div class=\\\"survey-filter-label\\\">\\n                <span class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: '#00aced'}\\\"></span>\\n                <label>\\n                    <input \\n                        type=\\\"checkbox\\\"\\n                        ng-checked=\\\"filters.source.indexOf(provider.label.toLowerCase()) !== -1\\\"\\n                        translate\\n                        ng-click=\\\"toggleFilters(provider.label.toLowerCase())\\\"\\n                    />\\n                    {{provider.label}}\\n                </label>\\n            </div>\\n            <span class=\\\"survey-filter-total init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n                {{provider.total}}\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                </svg>\\n            </span>\\n            <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                <span class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: '#00aced'}\\\"></span>\\n                <p>\\n                    <em translate=\\\"post.messages.imported_by\\\" translate-values=\\\"{messages: provider.heading}\\\"></em>\\n                </p>\\n                <div class=\\\"divider\\\"></div>\\n                <ul>\\n                    <li>\\n                        <a\\n                            translate=\\\"post.show_only_form\\\" \\n                            translate-values=\\\"{form: provider.label}\\\"\\n                            ng-click=\\\"showOnly(provider.label)\\\"\\n                        ></a>\\n                    </li>\\n                    <li>\\n                        <a\\n                            translate=\\\"post.hide_form\\\"\\n                            translate-values=\\\"{form: provider.label}\\\"\\n                            ng-click=\\\"hide(provider.label)\\\"\\n                        ></a>\\n                    </li>\\n                    <li ng-if=\\\"featureEnabled()\\\">\\n                        <a\\n                            translate=\\\"post.messages.show_only_incoming\\\"\\n                            translate-values=\\\"{provider: provider.heading.toLowerCase()}\\\"\\n                            ng-click=\\\"showOnlyIncoming(provider.label)\\\"\\n\\n                        ></a>\\n                    </li>\\n                    <div class=\\\"divider\\\"></div>\\n                    <li ng-if=\\\"featureEnabled()\\\">\\n                        <div>\\n                            <a href=\\\"/settings/datasources\\\">\\n                                <svg class=\\\"iconic\\\">\\n                                    <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#pencil\\\"></use>\\n                                </svg>\\n                                <span class=\\\"label\\\">Edit {{provider.label}}</span>\\n                            </a>\\n                        </div>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","module.exports = PostViewData;\n\nPostViewData.$inject = [];\nfunction PostViewData() {\n    return {\n        restrict: 'E',\n        scope: {\n            post: '<',\n            collection: '<',\n            savedSearch: '<'\n        },\n        controller: PostViewDataController,\n        template: require('./post-view-data.html')\n    };\n}\n\nPostViewDataController.$inject = [\n    '$scope',\n    '$rootScope',\n    'PostFilters',\n    '_',\n    'PostEndpoint',\n    'PostViewService',\n    'moment',\n    '$translate',\n    '$q',\n    'PostActionsService',\n    '$timeout',\n    '$location',\n    'Notify',\n    '$window',\n    '$state',\n    'LoadingProgress',\n    '$transitions'\n];\nfunction PostViewDataController(\n    $scope,\n    $rootScope,\n    PostFilters,\n    _,\n    PostEndpoint,\n    PostViewService,\n    moment,\n    $translate,\n    $q,\n    PostActionsService,\n    $timeout,\n    $location,\n    Notify,\n    $window,\n    $state,\n    LoadingProgress,\n    $transitions\n) {\n    $scope.currentPage = 1;\n    $scope.selectedPosts = [];\n    $scope.itemsPerPageOptions = [10, 20, 50];\n    $scope.itemsPerPage = $scope.itemsPerPageOptions[1];\n    // until we have the correct total_count value from backend request:\n    $scope.totalItems = 0;\n    $scope.posts = [];\n    $scope.groupedPosts = {};\n    $scope.deletePosts = deletePosts;\n    $scope.hasFilters = hasFilters;\n    $scope.userHasBulkActionPermissions = userHasBulkActionPermissions;\n    $scope.statuses = PostActionsService.getStatuses();\n    $scope.changeStatus = changeStatus;\n    $scope.showPost = showPost;\n    $scope.loadMore = loadMore;\n    $scope.isLoading = LoadingProgress.getLoadingState;\n    $scope.clearSelectedPosts = clearSelectedPosts;\n    $scope.newPostsCount = 0;\n    var recentPosts = [];\n    $scope.addNewestPosts = addNewestPosts;\n    $scope.selectBulkActions = selectBulkActions;\n    $scope.bulkActionsSelected = '';\n    $scope.closeBulkActions = closeBulkActions;\n    $scope.selectedPost = {post: $scope.post, next: {}};\n    $scope.formData = {form: {}};\n    $scope.getPosts = getPosts;\n    $scope.shouldWeRunCheckForNewPosts = true;\n    $scope.activeCol = $state.params.activeCol;\n    $scope.deselectPost = deselectPost;\n    $scope.removePostThatDoesntMatchFilters = removePostThatDoesntMatchFilters;\n\n    var stopInterval;\n    /**\n     * setting \"now\" time as utc for new posts filter\n     */\n    let timeOfPageLoad = moment().utc();\n\n    let unbindFns = [];\n\n    // This is for when you edit a post. Because anything could be changing, we have to\n    // check to see if everything in the post still matches all the filters.\n    // It's too cumbersome to do on the frontend, so we're checking in the API\n    unbindFns.push($scope.$on('event:edit:post:data:mode:saveSuccess', function (event, args) {\n        let post = args.post;\n        $scope.removePostThatDoesntMatchFilters(post);\n    }));\n\n\n    // And this is for when you change the post status using the ... button\n    // Because it's just the post status only, we're just checking if it matches\n    // filters on the frontend. This makes it MUCH faster than using the API\n\n    unbindFns.push($scope.$on('event:edit:post:status:data:mode:saveSuccess', function (event, args) {\n        let postObj = args.post;\n        if (args.deleted || !newStatusMatchesFilters(postObj)) {\n            removePostFromList(postObj);\n        }\n    }));\n\n    unbindFns.push($transitions.onSuccess({\n        to: 'posts.data.**'\n    }, () => {\n        $scope.activeCol = $state.params.activeCol;\n    }));\n\n    unbindFns.push($transitions.onSuccess({\n        to: 'posts.data.*'\n    }, () => {\n        $scope.selectedPost.post = _.findWhere($scope.posts, { id: parseInt($state.params.postId, 10) });\n    }));\n\n    // Cleanup and remove all listeners\n    $scope.$on('$destroy', () => {\n        unbindFns.forEach(Function.prototype.call, Function.prototype.call);\n    });\n\n    activate();\n    function activate() {\n        // Set the page title\n        $translate('post.posts').then(function (title) {\n            $scope.title = title;\n            $scope.$emit('setPageTitle', title);\n        });\n\n        $scope.filters = PostFilters.getFilters();\n\n        // If we are coming into Data View with a selected post\n        // then go get 19 posts before that post and put those in the post list\n        // *\n        // *\n        // Otherwise, go get posts just normal\n        if ($scope.selectedPost.post) {\n            let query = PostFilters.getQueryParams($scope.filters);\n            // Some posts may have their created date redacted by hide_time\n            // we instead use the Post Id to allow the API to retrieve the date itself\n            query.created_before_by_id = $scope.selectedPost.post.id;\n            getPosts(query, false);\n            $scope.shouldWeRunCheckForNewPosts = false;\n        } else {\n            getPosts(false, false);\n        }\n        // whenever the reactiveFilters var changes, do a dummy update of $scope.filters.reactiveFilters\n        // to force the $scope.filters watcher to run\n        $scope.$watch(function () {\n            return PostFilters.reactiveFilters;\n        }, function () {\n            if (PostFilters.reactiveFilters === true) {\n                $scope.filters.reactToFilters = $scope.filters.reactToFilters ? !$scope.filters.reactToFilters : true;\n            }\n        }, true);\n        /** whenever the filters changes, update the current list of posts **/\n        $scope.$watch(function () {\n            return $scope.filters;\n        }, function (newValue, oldValue) {\n            if (PostFilters.reactiveFilters === true && (newValue !== oldValue)) {\n                getPosts(false, false, true, goToFirstPostIfPostDoesNotMatchFilters);\n                PostFilters.reactiveFilters = false;\n            }\n        }, true);\n        $scope.$watch('selectedPosts.length', function () {\n            $scope.$emit('post:list:selected', $scope.selectedPosts);\n        });\n\n        $scope.$on('$destroy', function (ev) {\n                $timeout.cancel(stopInterval);\n            }\n        );\n\n        $scope.$on('event:edit:leave:form:complete', function () {\n            // Bercause there is no state management\n            // We copy the next Post to be the current Post\n            // if the previous Post exited correctly\n            // Ideally Post Card would become a service more akin\n            // to Notify and manage its own scope\n            if (!_.isEmpty($scope.selectedPost.next)) {\n                $scope.selectedPost.post = $scope.selectedPost.next;\n                $scope.selectedPost.next = {};\n                $rootScope.$broadcast('event:edit:post:reactivate');\n            }\n        });\n\n        // When a Post has been saved in the Data View it must be updated in the\n        // Post list so that the change will persist.\n        // This event is expected to be fired on successful completion of a Post save\n        // it expects the updated Post data as an argument passed via the event\n        $scope.$on('event:edit:post:data:mode:saveSuccess', function (event, args) {\n            if (args.post) {\n                persistUpdatedPost(args.post);\n            }\n        });\n\n        if ($scope.shouldWeRunCheckForNewPosts) {\n            checkForNewPosts(60000);\n        }\n    }\n\n    function deselectPost() {\n        $scope.selectedPost = {post: null, next: {}};\n    }\n    function goToFirstPostIfPostDoesNotMatchFilters() {\n        if ($scope.selectedPost.post && $scope.posts[0]) {\n            postDoesNotMatchFilters($scope.selectedPost.post).then((bool) => {\n                if (bool) {\n                    $scope.selectedPost.post = $scope.posts[0];\n                    $state.go('posts.data.detail', {view: 'data', postId: $scope.posts[0].id});\n                }\n            });\n        }\n    }\n\n    function postDoesNotMatchFilters(postObj) {\n        var deferred = $q.defer();\n\n        if ($scope.hasFilters()) {\n            let query = PostFilters.getQueryParams($scope.filters);\n            let postQuery = _.extend({}, query, {\n                post_id: postObj.id\n            });\n\n            PostEndpoint.query(postQuery).$promise.then(function (postsResponse) {\n                if (postsResponse.count === 0) {\n                    deferred.resolve(true);\n                } else {\n                    deferred.reject(false);\n                }\n            });\n        } else {\n            deferred.reject(false);\n        }\n        return deferred.promise;\n    }\n\n    function removePostThatDoesntMatchFilters(postObj) {\n        postDoesNotMatchFilters(postObj).then((bool) => {\n            if (bool) {\n                removePostFromList(postObj);\n            }\n        });\n    }\n\n    function removePostFromList(postObj) {\n        $scope.posts.forEach((post, index) => {\n            // args.post is the post being updated/saved and sent from the broadcast\n            if (post.id === postObj.id) {\n                let nextInLine = $scope.posts[index + 1];\n                $scope.posts.splice(index, 1);\n                if ($scope.posts.length) {\n                    groupPosts($scope.posts);\n                    if ($scope.selectedPost.post) {\n                        $scope.selectedPost.post = nextInLine;\n                        $state.go('posts.data.detail', {view: 'data', postId: $scope.selectedPost.post.id});\n                    }\n                } else {\n                    $scope.selectedPost = {post: null, next: {}};\n                    getPosts(false, false);\n                }\n            }\n        });\n    }\n\n    function newStatusMatchesFilters(postObj) {\n        let filters = $scope.hasFilters() ?  $scope.filters.status : PostFilters.getDefaults().status;\n        let matchingStatus = false;\n\n        filters.forEach((status) => {\n            if (postObj.status === status) {\n                matchingStatus = true;\n            }\n        });\n\n        return matchingStatus;\n    }\n\n    function persistUpdatedPost(updatedPost) {\n        var index = _.findIndex($scope.posts, function (post) {\n            return post.id === updatedPost.id;\n        });\n        $scope.posts.splice(index, 1, updatedPost);\n    }\n\n    function confirmEditingExit() {\n        var deferred = $q.defer();\n        if ($state.$current.name !== 'posts.data.edit') {\n            deferred.resolve();\n        } else if ($scope.formData.form && !$scope.formData.form.$dirty) {\n            deferred.resolve();\n        } else {\n            Notify.confirmLeave('notify.post.leave_without_save').then(function () {\n                //PostLockService.unlockSilent($scope.selectedPost);\n                deferred.resolve();\n            }, function (reject) {\n                deferred.reject();\n            });\n        }\n        return deferred.promise;\n    }\n\n    function showPost(post, fromWhere) {\n        return confirmEditingExit().then(function () {\n            $scope.selectedPost.post = post;\n            $state.go('posts.data.detail', {postId: post.id});\n        }, function () {\n        });\n    }\n\n    function getPosts(query, useOffset, clearPosts, callback) {\n        query = query || PostFilters.getQueryParams($scope.filters);\n\n        var postQuery = _.extend({}, query, {\n            limit: $scope.itemsPerPage\n        });\n        if (useOffset === true) {\n            postQuery.offset = ($scope.currentPage - 1) * $scope.itemsPerPage;\n        }\n        PostEndpoint.query(postQuery).$promise.then(function (postsResponse) {\n            //Clear posts\n            clearPosts ? resetPosts() : null;\n\n            // If we're loading posts for the first time and we have a selected post (post detail view)\n            // check to see that the selected post isn't in the list\n            // and then deselect it and select the first item\n            if (!$scope.posts.length && $scope.selectedPost.post) {\n                const selectedPostInResponse = postsResponse.results.find((post) => {\n                    return post.id === $scope.selectedPost.post.id;\n                });\n                if (!selectedPostInResponse) {\n                    $scope.selectedPost.post = postsResponse.results[0];\n                    $state.go('posts.data.detail', {view: 'data', postId: $scope.selectedPost.post.id});\n                }\n            }\n            // Add posts to full set of posts\n            // @todo figure out if we can store these more efficiently\n            Array.prototype.push.apply($scope.posts, postsResponse.results);\n\n            // Merge grouped posts into existing groups\n            groupPosts(postsResponse.results);\n\n            $scope.totalItems = postsResponse.total_count;\n            if ($scope.posts.count === 0 && !PostFilters.hasFilters($scope.filters)) {\n                PostViewService.showNoPostsSlider();\n            }\n\n            if (callback) {\n                callback();\n            }\n        });\n    }\n\n    function deletePosts() {\n        Notify.confirmDelete('notify.post.bulk_destroy_confirm', { count: $scope.selectedPosts.length }).then(function () {\n            // ask server to delete selected posts\n            // and refetch posts from server\n            var deletePostsPromises = _.map(\n                $scope.selectedPosts,\n                function (postId) {\n                    $scope.selectedPosts = _.without($scope.selectedPosts, postId);\n                    return PostEndpoint.delete({ id: postId }).$promise;\n                });\n            $q.all(deletePostsPromises).then(handleDeleteSuccess, handleDeleteErrors)\n            ;\n\n            function handleDeleteErrors(errorResponse) {\n                Notify.apiErrors(errorResponse);\n            }\n            function handleDeleteSuccess(deleted) {\n                Notify.notify('notify.post.destroy_success_bulk');\n                // Remove deleted posts from state\n                var deletedIds = _.pluck(deleted, 'id');\n                $scope.totalItems = $scope.totalItems - deletedIds.length;\n                angular.forEach($scope.groupedPosts, function (posts, group) {\n                    $scope.groupedPosts[group] = _.reject(posts, function (post) {\n                        return _.contains(deletedIds, post.id);\n                    });\n                });\n                $scope.posts = _.reject($scope.posts, function (post) {\n                    return _.contains(deletedIds, post.id);\n                });\n                clearSelectedPosts();\n\n                if (!$scope.posts.length) {\n                    getPosts(false, false, true);\n                }\n            }\n        });\n    }\n\n    function changeStatus(status) {\n        var selectedPosts = _.filter($scope.posts, function (post) {\n            return _.contains($scope.selectedPosts, post.id);\n        });\n\n        var count = $scope.selectedPosts.length;\n\n        var updateStatusPromises = _.map(selectedPosts, function (post) {\n            post.status = status;\n            // $scope.selectedPosts = _.without($scope.selectedPosts, post.id);\n            return PostEndpoint.update(post).$promise;\n        });\n\n        $q.all(updateStatusPromises).then(function () {\n            Notify.notify('notify.post.update_status_success_bulk', {count: count});\n            selectedPosts.forEach((post) => {\n                if (!newStatusMatchesFilters(post)) {\n                    removePostFromList(post);\n                }\n            });\n            clearSelectedPosts();\n        }, function (errorResponse) {\n            Notify.apiErrors(errorResponse);\n        });\n    }\n\n    function createPostGroups(posts) {\n        var now = moment(),\n            yesterday = moment().subtract(1, 'days');\n\n        return _.groupBy(posts, function (post) {\n            var postDate = moment(post.post_date);\n            if (now.isSame(postDate, 'd')) {\n                return $translate.instant('nav.today');\n            } else if (yesterday.isSame(postDate, 'd')) {\n                return $translate.instant('nav.yesterday');\n            } else {\n                return postDate.fromNow();\n            }\n        });\n    }\n\n    function hasFilters() {\n        return PostFilters.hasFilters($scope.filters);\n    }\n\n    function groupPosts(postList) {\n        angular.forEach(createPostGroups(postList), function (posts, group) {\n            if (angular.isArray($scope.groupedPosts[group])) {\n                Array.prototype.unshift.apply($scope.groupedPosts[group], posts);\n            } else {\n                $scope.groupedPosts[group] = posts;\n            }\n        });\n    }\n\n    function resetPosts() {\n        $scope.posts = [];\n        $scope.groupedPosts = {};\n        $scope.totalItems = 0;\n        $scope.currentPage = 1;\n        $scope.selectedPosts = [];\n        recentPosts = [];\n        $scope.newPostsCount = 0;\n    }\n\n    function loadMore() {\n        // Increment page\n        $scope.currentPage++;\n        getPosts(false, true, false);\n    }\n\n    function selectBulkActions() {\n        $scope.bulkActionsSelected = true;\n    }\n\n    function closeBulkActions() {\n        $scope.bulkActionsSelected = '';\n    }\n\n    function clearSelectedPosts() {\n        // Clear selected posts\n        $scope.selectedPosts.splice(0);\n    }\n\n    function userHasBulkActionPermissions() {\n        return _.any($scope.posts, function (post) {\n            return _.intersection(post.allowed_privileges, ['update', 'delete', 'change_status']).length > 0;\n        });\n    }\n\n    function getUnique(arr, comp) {\n        const unique = arr\n            .map(ele => ele[comp]) // store the keys of the unique objects\n            .map((ele, i, final) => final.indexOf(ele) === i && i) // eliminate the dead keys & store unique objects\n            .filter(ele => arr[ele])\n            .map(ele => arr[ele]);\n\n        return unique;\n    }\n\n    function getNewPosts() {\n        let existingFilters = PostFilters.getQueryParams($scope.filters);\n        let filterDate = moment(existingFilters.date_before).utc();\n\n        // if the filter end date was set to earlier than the time of page load\n        // there could not possibly be any reason to check for new posts\n        if (timeOfPageLoad.isSameOrBefore(filterDate) &&\n            existingFilters.order === 'desc' &&\n            existingFilters.orderby === 'created' // @todo handle update or post_date ordering\n        ) {\n            let postQuery;\n            // If there are not any posts yet\n            // *\n            // *\n            // query for any posts created after the time we loaded the page\n            if (!$scope.posts) {\n                postQuery = _.extend({}, existingFilters, {\n                    order: $scope.filters.order,\n                    orderby: $scope.filters.orderby,\n                    // Important to use `created_after` here, `date_after` compares against `post_date` not `created`\n                    created_after: timeOfPageLoad.format()\n                });\n            } else {\n                postQuery = _.extend({}, existingFilters, {\n                    order: $scope.filters.order,\n                    orderby: $scope.filters.orderby,\n                    created_after_by_id: $scope.posts[0].id\n                });\n            }\n\n            PostEndpoint.query(postQuery).$promise.then(function (postsResponse) {\n                Array.prototype.unshift.apply(recentPosts, postsResponse.results);\n                recentPosts = getUnique(recentPosts, 'id');\n                $scope.newPostsCount = postsResponse.count;\n\n            });\n        }\n    }\n\n    function addNewestPosts() {\n        Array.prototype.unshift.apply($scope.posts, recentPosts);\n        groupPosts(recentPosts);\n        $scope.totalItems = $scope.totalItems + $scope.newPostsCount;\n        recentPosts = [];\n        $scope.newPostsCount = 0;\n        $window.document.getElementById('post-data-view-top').scrollTop = 0;\n    }\n\n    function checkForNewPosts(time) {\n\n        if ($scope.posts.length) {\n            getNewPosts();\n        }\n        stopInterval = $timeout(checkForNewPosts, time, true, time);\n    }\n}\n\n","module.exports = \"<!-- Below code is used to get the header to embeds -->\\n<div class=\\\"mode-context init\\\" embed-only=\\\"true\\\" ng-controller=\\\"navigation as nav\\\" dropdown>\\n    <header class=\\\"mode-context-header\\\" ng-class=\\\"{ 'has-logo' : nav.site.image_header }\\\">\\n      <h1 class=\\\"mode-context-title\\\"><a href=\\\"/\\\" ng-bind=\\\"nav.site.name\\\"></a></h1>\\n      <img ng-if=\\\"nav.site.image_header\\\" ng-src=\\\"{{ nav.site.image_header }}\\\" class=\\\"deployment-logo\\\" />\\n    </header>\\n</div>\\n<main role=\\\"main\\\">\\n\\n<div class=\\\"flex-container\\\">\\n    <layout-class layout=\\\"d\\\"></layout-class>\\n    <post-toolbar selected-post=\\\"selectedPost.post\\\" filters=\\\"filters\\\"></post-toolbar>\\n    <div id=\\\"post-data-view-top\\\" class=\\\"timeline-col\\\" ng-class=\\\"{'toolbar-active': bulkActionsSelected, 'active' : activeCol === 'timeline' }\\\">\\n        <div class=\\\"load-more\\\"  ng-show=\\\"newPostsCount > 0\\\">\\n            <button class=\\\"button-flat button-gamma full-width\\\" ng-click=\\\"addNewestPosts()\\\">\\n                <span ng-switch on=\\\"newPostsCount\\\">\\n                    <span ng-switch-default translate=\\\"post.see_more_plural\\\" translate-values=\\\"{ newPostsCount }\\\">See new posts</span>\\n                    <span ng-switch-when=\\\"1\\\" translate=\\\"post.see_more_singular\\\" translate-values=\\\"{ newPostsCount }\\\">See new post</span>\\n                </span>\\n            </button>\\n        </div>\\n        <listing-toolbar\\n            entities=\\\"posts\\\"\\n            selected-set=\\\"selectedPosts\\\"\\n          >\\n              <!-- status bulk actions -->\\n              <span dropdown ng-if=\\\"userHasBulkActionPermissions()\\\">\\n                <button class=\\\"button-beta init\\\" data-toggle=\\\"toggle-content\\\" dropdown-toggle>\\n                  <span class=\\\"button-label\\\" translate=\\\"app.mark_as\\\">Mark as</span>\\n                  <svg class=\\\"iconic\\\">\\n                    <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                  </svg>\\n                </button>\\n                <ul class=\\\"dropdown-menu toggle-content init\\\" dropdown-menu unpositioned=\\\"true\\\">\\n                  <li ng-repeat=\\\"status in statuses\\\">\\n                    <a ng-click=\\\"changeStatus(status)\\\">\\n                      <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\" ng-if=\\\"status=='published'\\\"></use>\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#document\\\" ng-if=\\\"status=='draft'\\\"></use>\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#box\\\" ng-if=\\\"status=='archived'\\\"></use>\\n                      </svg>\\n                      <span class=\\\"label\\\" translate=\\\"post.published\\\" ng-if=\\\"status == 'published'\\\">Published</span>\\n                      <span class=\\\"label\\\" translate=\\\"post.draft\\\" ng-if=\\\"status == 'draft'\\\">Under review</span>\\n                      <span class=\\\"label\\\" translate=\\\"post.archived\\\" ng-if=\\\"status == 'archived'\\\">Archive</span>\\n                    </a>\\n                  </li>\\n                </ul>\\n              </span>\\n\\n              <collection-toggle-button selected-posts=\\\"selectedPosts\\\" posts=\\\"posts\\\" on-done=\\\"clearSelectedPosts()\\\"></collection-toggle-button>\\n              <button type=\\\"button\\\" class=\\\"button-destructive\\\" ng-click=\\\"deletePosts()\\\" ng-if=\\\"userHasBulkActionPermissions()\\\">\\n                <svg class=\\\"iconic\\\">\\n                  <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label hidden\\\">nav.delete</span>\\n              </button>\\n\\n              <button href=\\\"\\\" ng-click=\\\"closeBulkActions()\\\" class=\\\"button-link toolbar-close-button\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#x\\\"></use>\\n                </svg>\\n                <span class=\\\"hidden\\\">Close</span>\\n            </button>\\n\\n        </listing-toolbar>\\n        <div class=\\\"listing timeline init\\\">\\n\\n        <div class=\\\"bulk-action\\\" ng-if=\\\"posts.length > 0 || !isLoading()\\\">\\n            <div class=\\\"bulk-action-primary\\\" translate=\\\"post.posts_total\\\" translate-values=\\\"{'posts': posts.length, 'total_nb': totalItems }\\\"></div>\\n            <button id=\\\"bulk-action\\\" ng-disabled=\\\"{{!totalItems}}\\\" class=\\\"button-link bulk-action-secondary\\\" ng-click=\\\"selectBulkActions()\\\" ng-if=\\\"$root.loggedin\\\" translate=\\\"post.modify.bulk_actions\\\">Bulk Actions</button>\\n        </div>\\n            <post-card\\n                ng-repeat=\\\"post in posts\\\"\\n                can-select=\\\"bulkActionsSelected\\\"\\n                post=\\\"post\\\"\\n                selected-posts=\\\"selectedPosts\\\"\\n                click-action=\\\"showPost\\\"\\n                selected-post=\\\"selectedPost\\\"\\n            >\\n            </post-card>\\n            <div class=\\\"listing-item\\\" ng-if=\\\"posts.length == 0 && hasFilters() && !isLoading()\\\">\\n                <h4 translate>post.no_search_results</h4>\\n            </div>\\n\\n            <div class=\\\"listing-item\\\" ng-if=\\\"posts.length == 0 && !hasFilters() && !isLoading()\\\">\\n                <h4 translate>post.no_posts_yet</h4>\\n            </div>\\n\\n            <div class=\\\"listing-item\\\" ng-if=\\\"posts.length > 0 || isLoading()\\\">\\n\\n                <div class=\\\"listing-item-primary\\\">\\n                    <button ng-disabled=\\\"isLoading()\\\" ng-hide=\\\"( isLoading() || posts.length >= totalItems)\\\" class=\\\"button-gamma button-flat\\\" ng-click=\\\"loadMore()\\\" translate=\\\"app.load_more\\\">Load more\\n                    </button>\\n                     <loading-dots button-class=\\\"'button-gamma button-flat'\\\" label=\\\"'app.loading'\\\" ng-show=\\\"isLoading()\\\"></loading-dots>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"post-col\\\" ng-class=\\\"{'active' : activeCol === 'post' }\\\">\\n        <!-- Verify if we need all these bindings ie. parentForm savingPost -->\\n        <div ui-view filters=\\\"filters\\\" is-loading=\\\"isLoading\\\" saving-post=\\\"savingPost\\\"></post-detail-data>\\n    </div>\\n</div>\\n<ush-logo></ush-logo>\\n</main>\\n\";","module.exports = FilterPostsDirective;\n\nFilterPostsDirective.$inject = [];\nfunction FilterPostsDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '=',\n            onOpen: '&',\n            onClose: '&'\n        },\n        replace: true,\n        controller: FilterPostsController,\n        template: require('./filter-posts.html')\n    };\n}\n\nFilterPostsController.$inject = ['$scope', 'PostFilters', '$state', '$document', '$element'];\nfunction FilterPostsController($scope, PostFilters, $state, $document, $element) {\n    $scope.searchSavedToggle = false;\n    $scope.status = { isopen: false };\n    $scope.hideDropdown = hideDropdown;\n    $scope.showDropdown = showDropdown;\n    $scope.removeQueryFilter = removeQueryFilter;\n    $scope.applyFilters = applyFilters;\n    PostFilters.reactiveFilters = false;\n    activate();\n\n    function activate() {\n        // Watch all click events on the page\n        $document.on('click', handleDocumentClick);\n\n        $scope.$on('$destroy', () => {\n            $document.off('click', handleDocumentClick);\n        });\n\n        $scope.$watch('status.isopen', (value) => {\n            if (value) {\n                $scope.onOpen();\n            } else {\n                $scope.onClose();\n            }\n        });\n    }\n\n    function applyFilters() {\n        PostFilters.reactiveFilters = true;\n        $scope.status.isopen = false;\n    }\n\n    function removeQueryFilter() {\n        PostFilters.clearFilter('q', '');\n    }\n\n    function showDropdown() {\n        $scope.status.isopen = true;\n    }\n\n    function hideDropdown() {\n        $scope.status.isopen = false;\n    }\n\n    // Close the dropdown for any clicks outside of the filters\n    function handleDocumentClick(evt) {\n        // If the click was inside the directive\n        if (evt && $element && $element[0].contains(evt.target)) {\n            // Ignore it\n            return;\n        }\n\n        // Otherwise close the dropdown\n        $scope.$apply(hideDropdown);\n    }\n}\n","module.exports = \"<form name=\\\"postFiltersFormOpen\\\"\\n      uib-dropdown\\n      is-open=\\\"status.isopen\\\"\\n      role=\\\"search\\\"\\n      class=\\\"searchbar\\\"\\n      auto-close=\\\"disabled\\\"\\n      ng-submit=\\\"applyFilters()\\\"\\n      ng-model-options=\\\"{ updateOn : 'submit default' }\\\"\\n      data-message=\\\"search\\\"\\n      ng-class=\\\"{ active: status.isopen }\\\"\\n>\\n\\n    <div class=\\\"searchbar-input\\\">\\n        <!-- Search input -->\\n        <div class=\\\"form-field\\\">\\n            <label class=\\\"hidden\\\" translate=\\\"toolbar.searchbar.search_entity\\\">Search</label>\\n            <div class=\\\"input-with-icon\\\">\\n                <input name=\\\"q\\\" type=\\\"search\\\" autocomplete=\\\"off\\\"\\n                placeholder=\\\"{{ 'toolbar.searchbar.search_entity' | translate }}\\\"\\n                ng-model=\\\"filters.q\\\" ng-model-options=\\\"{ debounce: 300 }\\\" ng-click = \\\"showDropdown()\\\" ng-keyup=\\\"($event.keyCode === 27)  ? hideDropdown(): showDropdown()\\\" ng-keypress=\\\"($event.keyCode === 27) ? hideDropdown(): showDropdown()\\\">\\n                <svg class=\\\"iconic\\\" ng-show=\\\"!postFiltersFormOpen.q.$viewValue.length\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#magnifying-glass\\\"></use>\\n                </svg>\\n                <svg class=\\\"iconic\\\" ng-click=\\\"removeQueryFilter()\\\" ng-show=\\\"postFiltersFormOpen.q.$viewValue.length\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                </svg>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <!-- Toggle Filters show/hide -->\\n    <div uib-dropdown-toggle class=\\\"searchbar-options\\\">\\n        <a type=\\\"button\\\" class=\\\"searchbar-options-filter button\\\">\\n            <sort-and-filter-counter></sort-and-filter-counter>\\n        </a>\\n    </div>\\n\\n    <filters-dropdown uib-dropdown-menu class=\\\"dropdown-menu\\\" dropdown-status=\\\"status\\\" filters=\\\"filters\\\"></filters-dropdown>\\n</form>\\n\";","module.exports = CategorySelectDirective;\n\nCategorySelectDirective.$inject = ['TagEndpoint', '_', 'PostFilters'];\nfunction CategorySelectDirective(TagEndpoint, _, PostFilters) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        require: 'ngModel',\n        link: CategorySelectLink,\n        template: require('./filter-category.html')\n    };\n\n    function CategorySelectLink(scope, element, attrs, ngModel) {\n        if (!ngModel) {\n            return;\n        }\n\n        scope.handleParents = handleParents;\n        scope.categories = [];\n        scope.parents = [];\n        scope.selectedCategories = [];\n\n        activate();\n\n        function activate() {\n            // Load categories from server\n            TagEndpoint.query().$promise.then(function (result) {\n                scope.categories = result;\n                // assign children to their parent categories\n                _.each(scope.categories, function (category) {\n                    if (category.children) {\n                        var children = [];\n                        _.each(category.children, function (child) {\n                            _.each(scope.categories, function (childObj) {\n                                if (childObj.id === parseInt(child.id)) {\n                                    children.push(childObj);\n                                }\n                            });\n                            category.children = children;\n                        });\n                    }\n                });\n                // separating parents from children\n                scope.parents = _.filter(scope.categories, function (category) {\n                    if (category.parent_id === null) {\n                        return category;\n                    }\n                });\n                // setting only the ids in the selectedCategories array\n                if (!scope.selectedCategories || scope.selectedCategories.length === 0) {\n                    scope.selectedCategories = _.pluck(scope.categories, 'id');\n                }\n            });\n\n            scope.$watch('selectedCategories', saveValueToView, true);\n            scope.$watch(() => ngModel.$viewValue, renderModelValue, true);\n            ngModel.$render = renderModelValue;\n        }\n        function renderModelValue() {\n            if (ngModel.$viewValue) {\n                Array.prototype.splice.apply(scope.selectedCategories, [0, scope.selectedCategories.length].concat(ngModel.$viewValue));\n            }\n        }\n\n        /**\n         * Compares the current selected items with the previous ones and uses the parents scope var to\n         * know if we need to unselect/select items based on the state and how our categories should work\n         * \"Filters dropdown: Top Level categories with children should behave as Select all\"\n         * https://github.com/ushahidi/platform/issues/2436\n         * @param newSelection\n         * @param oldSelection\n         * @returns {*}\n         */\n        function handleParents(newSelection, oldSelection) {\n            /**\n             * If nothing changed, don't manipulate the arrays at all\n             * @type {boolean}\n             */\n            const noChanges = newSelection === oldSelection;\n            const internal = PostFilters.filtersInternalChange === true;\n            /**\n             *reset the internal var to false if it's true, since that means we just passed through\n             * an internal change of the selectedCategories array by this function\n            */\n            if (internal) {\n                PostFilters.filtersInternalChange = false;\n            }\n            if (noChanges || internal === true) {\n                return newSelection;\n            }\n            let result = newSelection;\n            const itemsAdded = _.difference(newSelection, oldSelection);\n            const itemsRemoved = _.difference(oldSelection, newSelection);\n            const added = itemsAdded.length > 0;\n            const item = added ? itemsAdded[0] : itemsRemoved[0];\n            /**\n             * go through each parent category to decide if the selectedCategories need\n             * to change according to the categories selection rules\n             */\n            _.each(scope.parents, (parent) => {\n                /**\n                 * parents with no children don't need any changes since they are simply enabled/disabled by the user\n                 * in the checkboxes/bug icons\n                */\n                if (parent.children.length > 0) {\n                    /**\n                     * separate the children and pick only their ids\n                     * @type {Array}\n                     */\n                    const children = _.map(parent.children, (child) => {\n                        return child.id;\n                    });\n                    /**\n                     * if the item that changed (was selected/unselected) is NOT related\n                     * to the current parent (or equal) we don't need to change it\n                     */\n                    let itemIsRelated = item === parent.id;\n                    if (!itemIsRelated) {\n                        itemIsRelated = !!_.find(children, (itm) => itm === item);\n                    }\n                    if (!itemIsRelated) {\n                        return;\n                    }\n                    /**\n                     * Find out if the selected item is a parent;\n                     */\n                    const parentSelected = _.find(newSelection, (itm) => itm === parent.id);\n                    /**\n                     * Check if ALL the children are selected\n                     */\n                    const childrenAllSelected = _.every(children, (childId) => {\n                        return _.find(newSelection, (itm) => itm === childId);\n                    });\n                    /**\n                     * Check if ALL the children are unselected\n                     */\n                    const childrenAllUnselected = _.every(children, (childId) => {\n                        return !_.find(newSelection, (itm) => itm === childId);\n                    });\n                    if (!parentSelected && childrenAllSelected) {\n                        /**\n                         * If all the children of a parent are selected but the parent isn't\n                         * we need to know if the parent was just unselected or if the last child\n                         * was just selected.\n                         * If the last child was just selected, add the parent\n                         * If the parent was just unselected, remove the children\n                         */\n                        if (added) {\n                            result = _.uniq(newSelection.concat(parent.id));\n                        } else {\n                            // REMOVE children\n                            result = _.without(newSelection, ...children);\n                        }\n                        PostFilters.filtersInternalChange = true;\n                    } else if (parentSelected && childrenAllUnselected) {\n                        /**\n                         * If all the children of a parent are unselected but the parent is selected,\n                         * we need to know if the parent was just selected or if the last child\n                         * was just unselected.\n                         * If the last child was just unselected, remove the parent\n                         * If the parent was just selected, add the children\n                         */\n                        if (added) {\n                            result = _.uniq(newSelection.concat(children));\n                        } else {\n                            // REMOVE parent\n                            result = _.without(newSelection, parent.id);\n                        }\n                        PostFilters.filtersInternalChange = true;\n                    } else if (parentSelected) {\n                        /**\n                         * If the parent is selected\n                         * we need to know if the parent was just selected  or just unselected\n                         * If the parent was just unselected, remove the parent\n                         * If the parent was just selected, add the children\n                         */\n                        if (added) {\n                            // ADD all the children\n                            result = _.uniq(newSelection.concat(children));\n                        } else {\n                            // REMOVE parent\n                            result = _.without(newSelection, parent.id);\n                        }\n                        PostFilters.filtersInternalChange = true;\n                    }\n\n                }\n            });\n            return result;\n        }\n\n        function saveValueToView(selectedCategories, oldSelection) {\n            const result = handleParents(selectedCategories, oldSelection);\n            selectedCategories = result;\n            ngModel.$setViewValue(angular.copy(selectedCategories), ngModel.$viewValue);\n        }\n    }\n}\n","module.exports = \"<fieldset ng-show=\\\"categories.length\\\" ng-model-options=\\\"{ updateOn: 'default' }\\\">\\n    <label translate=\\\"nav.categories\\\">Categories</label>\\n    <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"(index, category) in categories\\\" ng-if=\\\"category.parent_id === null\\\">\\n      <label>\\n          <input\\n              type=\\\"checkbox\\\"\\n              checklist-value=\\\"category.id\\\"\\n              value=\\\"category.id\\\"\\n              checklist-model=\\\"selectedCategories\\\"\\n          >\\n          <bdi>{{ ::category.tag }}</bdi>\\n      </label>\\n      <div\\n          class=\\\"form-field checkbox\\\"\\n          ng-repeat=\\\"child in category.children\\\"\\n        >\\n          <label>\\n          <input\\n            type=\\\"checkbox\\\"\\n            checklist-model=\\\"selectedCategories\\\"\\n            checklist-value=\\\"child.id\\\"\\n            value=\\\"child.id\\\"\\n            ng-selected=\\\"selectedCategories.indexOf(category.id) >-1\\\"\\n          >\\n          <bdi>{{ ::child.tag }}</bdi>\\n        </label>\\n      </div>\\n    </div>\\n</fieldset>\\n\";","module.exports = DateSelectDirective;\n\nDateSelectDirective.$inject = [];\nfunction DateSelectDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            dateBeforeModel: '=',\n            dateAfterModel: '='\n        },\n        controller: DateSelectController,\n        template: require('./filter-date.html')\n    };\n}\n\nDateSelectController.$inject = ['$scope'];\nfunction DateSelectController($scope) {\n    $scope.options = { format : 'yyyy-mm-dd' };\n}\n","module.exports = \"<fieldset>\\n    <label translate>global_filter.date_range</label>\\n    <div class=\\\"form-field date\\\">\\n        <label class=\\\"hidden\\\" translate=\\\"global_filter.filter_tabs.created_after\\\">Start date</label>\\n        <div class=\\\"input-with-icon\\\">\\n            <svg class=\\\"iconic\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#calendar\\\"></use>\\n            </svg>\\n            <input type=\\\"date\\\" pick-a-date=\\\"dateAfter\\\" pick-a-date-options=\\\"options\\\" placeholder=\\\"{{ 'global_filter.filter_tabs.created_after' | translate }}\\\" ng-model=\\\"dateAfterModel\\\" />\\n        </div>\\n    </div>\\n            <span class=\\\"date-joiner\\\">to</span>\\n\\n\\n    <div class=\\\"form-field date\\\">\\n        <label class=\\\"hidden\\\" translate=\\\"global_filter.filter_tabs.created_before\\\">End date</label>\\n        <div class=\\\"input-with-icon\\\">\\n            <svg class=\\\"iconic\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#calendar\\\"></use>\\n            </svg>\\n        <input type=\\\"date\\\" pick-a-date=\\\"dateBefore\\\" pick-a-date-options=\\\"options\\\" placeholder=\\\"{{ 'global_filter.filter_tabs.created_before' | translate }}\\\" ng-model=\\\"dateBeforeModel\\\">\\n    </div>\\n</div>\\n\\n\\n</fieldset>\\n\";","module.exports = FormSelectDirective;\n\nFormSelectDirective.$inject = ['FormEndpoint'];\nfunction FormSelectDirective(FormEndpoint) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        require: 'ngModel',\n        link: FormSelectLink,\n        template: require('./filter-form.html')\n    };\n\n    function FormSelectLink(scope, element, attrs, ngModel) {\n        if (!ngModel) {\n            return;\n        }\n\n        scope.forms = [];\n        scope.selectedForms = [];\n\n        activate();\n\n        function activate() {\n            // Load forms\n            scope.forms = FormEndpoint.query();\n\n            scope.$watch('selectedForms', saveValueToView, true);\n            scope.$watch(() => ngModel.$viewValue, renderModelValue, true);\n            ngModel.$render = renderModelValue;\n        }\n        function renderModelValue() {\n            // Update selectedForms w/o breaking references used by checklist-model\n            Array.prototype.splice.apply(scope.selectedForms, [0, scope.selectedForms.length].concat(ngModel.$viewValue));\n        }\n\n        function saveValueToView(selectedForms) {\n            ngModel.$setViewValue(angular.copy(selectedForms));\n        }\n    }\n}\n\n","module.exports = \"<fieldset overflow-toggle has-overflow=\\\"forms.length > 1\\\" ng-model-options=\\\"{ updateOn: 'default' }\\\">\\n    <label translate=\\\"app.surveys\\\">Survey</label>\\n\\n    <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"(index, form) in forms\\\">\\n        <label>\\n            <input checklist-value=\\\"form.id\\\" checklist-model=\\\"selectedForms\\\" type=\\\"checkbox\\\" name=\\\"selectedForms\\\"> <bdi>{{ ::form.name }}</bdi>\\n        </label>\\n    </div>\\n    <div class=\\\"form-field checkbox\\\">\\n        <label>\\n            <input checklist-value=\\\"'none'\\\" checklist-model=\\\"selectedForms\\\" type=\\\"checkbox\\\" name=\\\"selectedForms\\\" > <span translate=\\\"nav.unknown\\\">Unknown</span>\\n        </label>\\n    </div>\\n</fieldset>\\n\";","module.exports = VisibleToSelectDirective;\n\nVisibleToSelectDirective.$inject = [];\nfunction VisibleToSelectDirective() {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            statusModel: '=',\n            publishedToModel: '='\n        },\n        controller: VisibleToSelectController,\n        template: require('./filter-visible-to.html')\n    };\n}\n\nVisibleToSelectController.$inject = ['$scope', 'RoleEndpoint', '$rootScope'];\nfunction VisibleToSelectController($scope, RoleEndpoint, $rootScope) {\n    $scope.roles = [];\n    $scope.visible_to = '';\n    $scope.hasPermission = $rootScope.hasPermission;\n\n    activate();\n\n    $scope.$watch('statusModel', updateStateFromModels);\n    $scope.$watch('publishedToModel', updateStateFromModels);\n    $scope.$watch('visible_to', updateModelsFromState);\n\n    function activate() {\n        $scope.roles = RoleEndpoint.query();\n    }\n\n    function updateStateFromModels() {\n        if ($scope.statusModel === 'draft') {\n            $scope.visible_to = 'draft';\n        } else if ($scope.statusModel === 'all') {\n            $scope.visible_to = 'everyone';\n        } else if ($scope.statusModel === 'published' && !$scope.publishedToModel) {\n            $scope.visible_to = 'everyone';\n        } else {\n            $scope.visible_to = $scope.publishedToModel;\n        }\n    }\n\n    function updateModelsFromState() {\n        if ($scope.visible_to === 'everyone') {\n            $scope.statusModel = 'all';\n            $scope.publishedToModel = '';\n        } else if ($scope.visible_to === 'draft') {\n            $scope.statusModel = 'draft';\n            $scope.publishedToModel = '';\n        } else {\n            $scope.statusModel = 'published';\n            $scope.publishedToModel = $scope.visible_to;\n        }\n    }\n}\n","module.exports = \"<fieldset overflow-toggle has-overflow=\\\"roles.length\\\">\\n    <legend translate=\\\"global_filter.who_its_visible_to\\\">Who it's visible to</legend>\\n\\n    <div class=\\\"form-field radio\\\">\\n        <label>\\n            <input type=\\\"radio\\\" name=\\\"visible_to\\\" ng-model=\\\"visible_to\\\" value=\\\"everyone\\\"> <span translate=\\\"nav.everyone\\\">Everyone</span>\\n        </label>\\n    </div>\\n\\n    <div class=\\\"form-field radio\\\" ng-repeat=\\\"role in roles\\\" ng-class=\\\"{ overflow : ($index > 0) }\\\">\\n        <label>\\n            <input type=\\\"radio\\\" name=\\\"visible_to\\\" ng-model=\\\"$parent.visible_to\\\" value=\\\"{{ role.name }}\\\"> {{ ::role.display_name }}\\n        </label>\\n    </div>\\n    <div class=\\\"form-field radio\\\" ng-class=\\\"{ overflow : (roles.length > 0) }\\\">\\n        <label>\\n            <input type=\\\"radio\\\" name=\\\"visible_to\\\" ng-model=\\\"visible_to\\\" value=\\\"draft\\\">\\n            <span translate=\\\"nav.only_you\\\" ng-hide=\\\"hasPermission('Manage Posts')\\\">Only you</span>\\n            <span translate=\\\"nav.only_author\\\" ng-show=\\\"hasPermission('Manage Posts')\\\">Only the author (draft)</span>\\n        </label>\\n    </div>\\n    <span class=\\\"form-field-toggle\\\">\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n        <span translate=\\\"nav.more\\\">More</span>\\n    </span>\\n</fieldset>\\n\";","module.exports = StatusSelectDirective;\n\nStatusSelectDirective.$inject = ['PostActionsService', '$rootScope'];\nfunction StatusSelectDirective(PostActionsService, $rootScope) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        require: 'ngModel',\n        link: StatusSelectLink,\n        template: require('./filter-status.html')\n    };\n\n    function StatusSelectLink(scope, element, attrs, ngModel) {\n        scope.statuses = PostActionsService.getStatuses();\n        scope.selectedStatuses = [];\n        scope.hasPermission = $rootScope.hasPermission;\n\n        activate();\n\n        function activate() {\n            scope.$watch('selectedStatuses', saveValueToView, true);\n            scope.$watch(() => ngModel.$viewValue, renderModelValue, true);\n            ngModel.$render = renderModelValue;\n        }\n\n        function renderModelValue() {\n            // Update selectedStatuses w/o breaking references used by checklist-model\n            Array.prototype.splice.apply(scope.selectedStatuses, [0, scope.selectedStatuses.length].concat(ngModel.$viewValue));\n        }\n\n        function saveValueToView(selectedStatuses) {\n            ngModel.$setViewValue(angular.copy(selectedStatuses));\n        }\n    }\n}\n","module.exports = \"<fieldset ng-model-options=\\\"{ updateOn: 'default' }\\\" ng-show=\\\"hasPermission('Manage Posts')\\\">\\n    <label translate=\\\"global_filter.status\\\">Status</label>\\n\\n    <div class=\\\"form-field checkbox icon-input\\\" ng-repeat=\\\"(index, status) in statuses\\\">\\n\\n      <label>\\n        <svg class=\\\"iconic\\\" ng-if=\\\"status == 'published'\\\">\\n          <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\"></use>\\n        </svg>\\n        <svg class=\\\"iconic\\\" ng-if=\\\"status == 'draft'\\\">\\n          <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#document\\\"></use>\\n        </svg>\\n        <svg class=\\\"iconic\\\" ng-if=\\\"status == 'archived'\\\">\\n          <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#box\\\"></use>\\n        </svg>\\n\\n        <input type=\\\"checkbox\\\" ng-model=\\\"status\\\" checklist-model=\\\"selectedStatuses\\\" checklist-value=\\\"status\\\" name=\\\"selectedStatuses\\\">\\n        <span translate=\\\"post.published\\\" ng-if=\\\"status == 'published'\\\">Published</span>\\n        <span translate=\\\"post.draft\\\" ng-if=\\\"status == 'draft'\\\">Under review</span>\\n        <span translate=\\\"post.archived\\\" ng-if=\\\"status == 'archived'\\\">Archive</span>\\n\\n        </label>\\n    </div>\\n</fieldset>\\n\";","module.exports = SourceSelectDirective;\n\nSourceSelectDirective.$inject = ['$rootScope'];\nfunction SourceSelectDirective($rootScope) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        require: 'ngModel',\n        link: SourceSelectLink,\n        template: require('./filter-source.html')\n    };\n\n    function SourceSelectLink(scope, element, attrs, ngModel) {\n        scope.selectedSources = [];\n        scope.hasPermission = $rootScope.hasPermission;\n\n        activate();\n\n        function activate() {\n            scope.$watch('selectedSources', saveValueToView, true);\n            scope.$watch(() => ngModel.$viewValue, renderModelValue, true);\n            ngModel.$render = renderModelValue;\n        }\n\n        function renderModelValue() {\n            // Update selectedSources w/o breaking references used by checklist-model\n            Array.prototype.splice.apply(scope.selectedSources, [0, scope.selectedSources.length].concat(ngModel.$viewValue));\n        }\n\n        function saveValueToView(selectedSources) {\n            ngModel.$setViewValue(angular.copy(selectedSources));\n        }\n    }\n}\n","module.exports = \"<fieldset overflow-toggle has-overflow=\\\"false\\\" ng-model-options=\\\"{ updateOn: 'default' }\\\">\\n    <label translate=\\\"global_filter.source\\\">Source</label>\\n\\n    <div class=\\\"form-field checkbox icon-input\\\">\\n        <label>\\n            <input type=\\\"checkbox\\\" ng-model=\\\"source\\\" checklist-model=\\\"selectedSources\\\" checklist-value=\\\"'email'\\\" name=\\\"selectedSources\\\">\\n            <span>Email</span>\\n        </label>\\n    </div>\\n    <div class=\\\"form-field checkbox icon-input\\\">\\n        <label>\\n            <input type=\\\"checkbox\\\" ng-model=\\\"source\\\" checklist-model=\\\"selectedSources\\\" checklist-value=\\\"'sms'\\\" name=\\\"selectedSources\\\">\\n            <span>SMS</span>\\n        </label>\\n    </div>\\n    <div class=\\\"form-field checkbox icon-input\\\">\\n        <label>\\n            <input type=\\\"checkbox\\\" ng-model=\\\"source\\\" checklist-model=\\\"selectedSources\\\" checklist-value=\\\"'twitter'\\\" name=\\\"selectedSources\\\">\\n            <span>Twitter</span>\\n        </label>\\n    </div>\\n    <div class=\\\"form-field checkbox icon-input\\\">\\n        <label>\\n            <input type=\\\"checkbox\\\" ng-model=\\\"source\\\" checklist-model=\\\"selectedSources\\\" checklist-value=\\\"'web'\\\" name=\\\"selectedSources\\\">\\n            <span>Web</span>\\n        </label>\\n    </div>\\n\\n    <span class=\\\"form-field-toggle\\\">\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n        <span translate=\\\"nav.more\\\">More</span>\\n    </span>\\n</fieldset>\\n\";","module.exports = LocationFilterDirective;\n\nLocationFilterDirective.$inject = ['Geocoding', '$q'];\nfunction LocationFilterDirective(Geocoding, $q) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            centerPointModel: '=',\n            withinKmModel: '='\n        },\n        link: LocationFilterLink,\n        template: require('./filter-location.html')\n    };\n\n    //LocationFilterLink.$inject = ['Geocoding'];\n    function LocationFilterLink($scope, element, attrs) {\n        $scope.geocoding = false;\n        $scope.locationSearchText = '';\n        $scope.$watch('centerPointModel', updateStateFromModels);\n        $scope.$watch('locationSearchText', updateModelsFromState);\n\n        function updateStateFromModels(newValue, oldValue) {\n            if (!$scope.locationSearchText) {\n                $scope.locationSearchText = $scope.centerPointModel;\n            }\n        }\n\n        function updateModelsFromState() {\n            if ($scope.locationSearchText) {\n                geocode($scope.locationSearchText).then(function (coords) {\n                    $scope.centerPointModel = coords;\n                });\n            } else {\n                $scope.centerPointModel = '';\n            }\n        }\n\n        function geocode(location) {\n            var defer = $q.defer(),\n                valid_coords = /\\-?[0-9]+(\\.[0-9]+)?\\s*,\\s*\\-?[0-9]+(\\.[0-9]+)?/;\n\n            if (!location) {\n                return;\n            }\n\n            if (valid_coords.test(location)) {\n                defer.resolve(location);\n            } else { // perform a geocoding lookup on the location\n                $scope.geocoding = true;\n\n                Geocoding.searchCoordinates(location).then(function (coordinates) {\n                    if (!coordinates) {\n                        defer.reject();\n                        return;\n                    } // @todo - handle bad lookup\n\n                    $scope.geocoding = false;\n                    defer.resolve(coordinates[0] + ',' + coordinates[1]);\n                });\n            }\n\n            return defer.promise;\n        }\n    }\n}\n\n","module.exports = \"<fieldset>\\n    <legend translate=\\\"global_filter.location\\\">Location</legend>\\n\\n    <div class=\\\"form-field\\\">\\n        <div class=\\\"input-with-icon\\\">\\n            <input type=\\\"text\\\" style=\\\"padding-left: 24px;\\\" placeholder=\\\"{{ 'global_filter.location_placeholder' | translate }}\\\" ng-model=\\\"locationSearchText\\\">\\n            <svg class=\\\"iconic\\\" style=\\\"left: 8px;\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#location\\\"></use>\\n            </svg>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-field\\\">\\n        <select ng-model=\\\"withinKmModel\\\" convert-to-number>\\n            <option value=\\\"1\\\" translate>global_filter.option_1</option>\\n            <option value=\\\"10\\\" translate>global_filter.option_2</option>\\n            <option value=\\\"50\\\" translate>global_filter.option_3</option>\\n            <option value=\\\"100\\\" translate>global_filter.option_4</option>\\n            <option value=\\\"500\\\" translate>global_filter.option_5</option>\\n        </select>\\n    </div>\\n\\n</fieldset>\\n\\n\";","\nmodule.exports = FilterHasLocationDirective;\n\nFilterHasLocationDirective.$inject = [];\n\nfunction FilterHasLocationDirective() {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            hasLocation: '='\n        },\n        require: 'ngModel',\n        link: FilterHasLocationLink,\n        template: require('./filter-has-location.html')\n    };\n}\n\nfunction FilterHasLocationLink($scope, $element, $attrs, ngModel) {\n    activate();\n    function activate() {\n        $scope.$watch('hasLocation', saveToView, true);\n    }\n\n    function saveToView(hasLocation) {\n        ngModel.$setViewValue(angular.copy(hasLocation));\n    }\n}\n","module.exports = \"<fieldset>\\n         <legend translate=\\\"global_filter.filter_tabs.has_location\\\"></legend>\\n     <div class=\\\"form-field radio\\\">\\n        <label translate=\\\"global_filter.filter_tabs.all_posts\\\">        </label>\\n            <input \\n                ng-value='all'\\n                ng-checked=\\\"hasLocation === 'all'\\\"\\n                ng-model=\\\"hasLocation\\\"\\n                type=\\\"radio\\\" \\n                name=\\\"hasLocation\\\"\\n            > \\n        </div>\\n    <div class=\\\"form-field radio\\\">\\n        <label translate=\\\"global_filter.filter_tabs.unmapped\\\"></label>\\n            <input\\n                value='unmapped' \\n                ng-model=\\\"hasLocation\\\"\\n                type=\\\"radio\\\"\\n                name=\\\"hasLocation\\\"\\n                ng-checked=\\\"hasLocation === 'unmapped'\\\"\\n            > \\n    </div>\\n    <div class=\\\"form-field radio\\\">\\n     <label translate=\\\"global_filter.filter_tabs.mapped\\\"></label>\\n            <input\\n                value='mapped'\\n                ng-model=\\\"hasLocation\\\"\\n                ng-checked= \\\"hasLocation === 'mapped'\\\"\\n                type=\\\"radio\\\"\\n                name=\\\"hasLocation\\\"\\n            >\\n        </div>\\n</fieldset>\\n\";","module.exports = ActiveSearchFilters;\n\nActiveSearchFilters.$inject = ['$translate', '$filter', 'PostFilters', '_', 'FilterTransformers', '$rootScope'];\nfunction ActiveSearchFilters($translate, $filter, PostFilters, _, FilterTransformers, $rootScope) {\n    return {\n        restrict: 'E',\n        scope: true,\n        require: 'ngModel',\n        template: require('./active-search-filters.html'),\n        link: ActiveFiltersLink\n    };\n\n    function ActiveFiltersLink($scope, ngModel) {\n        $scope.uiFilters = {};\n        $scope.savedSearch = null;\n        $scope.collection = PostFilters.getModeEntity('collection');\n        var originalSavedSearch;\n        $scope.removeFilter = removeFilter;\n        $scope.transformFilterValue = transformFilterValue;\n        $scope.removeSavedSearch = removeSavedSearch;\n        $scope.removeCollection = removeCollection;\n        $scope.showSaveSavedSearchButton = showSaveSavedSearchButton;\n        $scope.userCanUpdateSavedSearch = false;\n\n        activate();\n\n        $scope.isArray = angular.isArray;\n\n        function activate() {\n            /**\n             * we need to listen for saved searches and collections update events\n             * so that we are notified when a user changes a collection or\n             * saved search\n             */\n            $scope.$on('savedSearch:update', function () {\n                handleFiltersUpdate(PostFilters.getActiveFilters(PostFilters.getFilters()), null, true);\n            });\n            $scope.$on('collection:update', function () {\n                handleFiltersUpdate(PostFilters.getActiveFilters(PostFilters.getFilters()), null, true);\n            });\n            /**\n             * we don't have filters set when we are on a collection\n             * so we need to watch for collection mode changes specifically instead of relying on the filters\n             * changing like we do for saved searches\n             */\n            $scope.$watch(function () {\n                return PostFilters.getModeId();\n            }, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    if (PostFilters.getMode() === 'collection') {\n                        $scope.collection = PostFilters.getModeEntity('collection');\n                        $scope.savedSearch = null;\n                        originalSavedSearch = null;\n                    }\n                    // Other modes should be handled elsewhere\n                }\n            }, true);\n\n            FilterTransformers.requestsFiltersData().then(function (all) {\n                $scope.$watch(function () {\n                    return PostFilters.getActiveFilters(PostFilters.getFilters());\n                }, handleFiltersUpdate, true);\n            });\n        }\n\n        function handleFiltersUpdate(filters, oldValue, resetSearch) {\n            var currentFilters = angular.copy(PostFilters.getUIActiveFilters(filters));\n            FilterTransformers.rawFilters = angular.copy(filters);\n            // Remove set filter as it is only relevant to collections and should be immutable in that view\n            // delete currentFilters.set;\n            var isModeSavedSearch = PostFilters.getMode() === 'savedsearch';\n            // if we are not in a saved search, make sure to reset the original and the scope saved search\n            if (!isModeSavedSearch) {\n                $scope.savedSearch = null;\n                originalSavedSearch = null;\n            }\n            /** if there is not yet a savedSearch selected or if it is a different one than the selected,\n             setup the originalSavedSearch (which NEVER changes) and the savedSearch, which changes\n             and is used for showing the filters as the user adds/removes filters\n             **/\n            else if (resetSearch === true || !$scope.savedSearch || originalSavedSearch.id !== PostFilters.getModeId()) {\n                $scope.collection = null;\n                originalSavedSearch = angular.copy(PostFilters.getModeEntity('savedsearch'));\n                $scope.savedSearch = PostFilters.getModeEntity('savedsearch');\n            }\n            /**\n             * This handles the requirement to have saved search filters displayed in a different way\n             * from the rest of the filters.\n             *  - If there is a saved search:\n             *  - - set it in the scope: this is what we will use to display the saved search and its filters in the UI\n             *  - - get clean version (no defaults) of the saved search filters\n             *  - - get a clean currentFilters array that does not include the saved search filters. $scope.uiFilters: this\n             *  is the array we will be using to show the \"extra\" filters the user can set AFTER they selected  a saved search\n             *  (keep in mind that when a saved search is selected all filters are erased in favor of the saved search)\n             *  - - - Diffing rules: value from currentFilters takes priority over value from search. this is because\n             *  the user will always have selected the value after they select a saved search,meaning they want to change it.\n             *  - - - Diffing rules: if the value is equal, just ignore it/send empty value.\n             *  - - - Diffing rules: return the _difference if the value is not equal, because we will want to show for instance:\n             *  saved search: tag id 1 + filters tag id 2 (so it's not just ignoring the arrays)\n             */\n            $scope.userCanUpdateSavedSearch = false;\n            $scope.uiFilters = currentFilters;\n\n            if ($scope.savedSearch) {\n                var originalSavedSearchFilters = PostFilters.getUIActiveFilters(originalSavedSearch.filter);\n                $scope.savedSearch.filter = getUISavedSearchFilters($scope.savedSearch.filter, originalSavedSearchFilters, $scope.uiFilters, filters);\n                var savedSearchFiltersChanged = filtersHaveDifferences(originalSavedSearchFilters, $scope.savedSearch.filter);\n                var filtersDifferentToSavedSearch = filtersHaveDifferences(filters, $scope.savedSearch.filter);\n                $scope.userCanUpdateSavedSearch = _.contains($scope.savedSearch.allowed_privileges, 'update') && (savedSearchFiltersChanged || filtersDifferentToSavedSearch);\n                // remove values that are in the saved search from the uifilters.\n                $scope.uiFilters = PostFilters.cleanUIFilters($scope.uiFilters, $scope.savedSearch.filter);\n            }\n        }\n\n        function getUISavedSearchFilters(savedSearchFilters, originalSavedSearchFilters, uiFilters, filters) {\n            savedSearchFilters = PostFilters.getUIActiveFilters(savedSearchFilters);\n            /**\n             * to handle removal correctly we need to make sure we take currentFilters (which has up to date info) into account,\n             * because that is where our savedsearch filters will stop being represented when we remove them.\n             * If there's a key in our current filters that is in the saved search but is not in the active filters at this point,\n             * it is because it was removed (since before saved search gets assigned, they are all assigned to the filters)\n             * that means we have to remove it from the saved search.\n             **/\n            savedSearchFilters = PostFilters.cleanRemovedValuesFromObject(filters, savedSearchFilters);\n            /**\n             * Add back in savedSearch.filter if an originally saved search filter is removed+added back\n             */\n            var uiSavedSearchActiveFilters = PostFilters.getUIActiveFilters(savedSearchFilters);\n            var uiOriginalSavedSearchFilters = PostFilters.getUIActiveFilters(originalSavedSearchFilters);\n            var uiActiveFilters = PostFilters.getUIActiveFilters(uiFilters);\n            var cleanSavedSearchFilters = PostFilters.addIfCurrentObjectMatchesOriginal(uiSavedSearchActiveFilters, uiOriginalSavedSearchFilters, uiActiveFilters);\n            // get clean version (no defaults) of the saved search filters after processing it with addIfCurrentObjectMatchesOriginal\n            return PostFilters.getUIActiveFilters(cleanSavedSearchFilters);\n        }\n\n        function filtersHaveDifferences(original, current) {\n            return _.filter(original, function (obj, key) {\n                if (!_.isArray(obj)) {\n                    return current[key] !== obj;\n                } else {\n                    return _.difference(current[key], obj).length !== 0 || _.difference(obj, current[key]).length !== 0 ;\n                }\n            }).length > 0 ;\n        }\n\n        function transformFilterValue(value, key) {\n            if (FilterTransformers.transformers[key]) {\n                return FilterTransformers.transformers[key](value);\n            }\n            return value;\n        }\n\n        function removeFilter(filterKey, value, savedSearch, $event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            if (savedSearch) {\n                savedSearch.filter = PostFilters.clearFilterFromArray(filterKey, value, savedSearch.filter);\n                PostFilters.clearFilter(filterKey, value);\n                $scope.savedSearch = savedSearch;\n            } else {\n                PostFilters.clearFilter(filterKey, value);\n            }\n        }\n\n        function removeSavedSearch(savedSearch, $event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            originalSavedSearch = null;\n            $scope.savedSearch = null;\n            PostFilters.setMode('all', null);\n            _.each(savedSearch.filter, function (filter, key) {\n                if (_.isArray(filter)) {\n                    _.each(filter, function (filterV, keyV) {\n                        PostFilters.clearFilter(key, filterV);\n                    });\n                } else {\n                    PostFilters.clearFilter(key, filter);\n                }\n            });\n        }\n\n        function removeCollection(collection, $event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            $scope.collection = null;\n            PostFilters.setMode('all', null);\n            /**\n             * because the default for collections is different than the default for\n             * other modes, we need to explicitly reset the filters or it will be shown\n             * as if we had manually set the collection status defaults [published, draft, archived]\n             */\n            PostFilters.setFilter('status', PostFilters.getDefaults().status);\n        }\n\n        // collections should not be saved within a saved search\n        function showSaveSavedSearchButton() {\n            return !$scope.collection && !_.isEmpty($scope.uiFilters) && !$scope.savedSearch && $rootScope.loggedin;\n        }\n\n    }\n}\n","module.exports = \"<div class=\\\"form-field saved-search\\\" ng-show=\\\"collection\\\">\\n    <span class=\\\"bug\\\">\\n        <svg class=\\\"iconic\\\" ng-click=\\\"removeCollection(collection, $event)\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n        </svg>\\n        <span><em><translate translate=\\\"app.collection\\\"></translate>: </em><bdi>{{collection.name}}<bdi></span>\\n    </span>\\n</div>\\n<div class=\\\"form-field saved-search\\\" ng-show=\\\"savedSearch\\\">\\n    <span class=\\\"bug\\\">\\n        <svg class=\\\"iconic\\\" ng-click=\\\"removeSavedSearch(savedSearch, $event)\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n        </svg>\\n        <span><em><translate translate=\\\"app.saved_search\\\"></translate>: </em><bdi>{{savedSearch.name | translate}}</bdi></span>\\n    </span>\\n    <div ng-repeat=\\\"(key, values) in savedSearch.filter\\\">\\n        <span ng-if=\\\"isArray(values)\\\">\\n            <span class=\\\"bug saved-search-filter\\\" ng-repeat=\\\"value in values track by $index \\\">\\n                <svg class=\\\"iconic\\\" ng-click=\\\"removeFilter(key, value, savedSearch, $event)\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                </svg>\\n                <span><em><translate translate=\\\"global_filter.filter_tabs.{{key}}\\\"></translate>:</em> <bdi>{{ transformFilterValue(value, key) }}</bdi></span>\\n            </span>\\n        </span>\\n        <span ng-if=\\\"!isArray(values)\\\">\\n            <span class=\\\"bug saved-search-filter\\\">\\n                <svg class=\\\"iconic\\\" ng-click=\\\"removeFilter(key, values, savedSearch, $event)\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                </svg>\\n                <span><em><translate translate=\\\"global_filter.filter_tabs.{{key}}\\\"></translate>:</em> <bdi>{{ transformFilterValue(values, key) }}</bdi></span>\\n            </span>\\n        </span>\\n    </div>\\n</div>\\n<div class=\\\"form-field\\\">\\n    <div ng-repeat=\\\"(key, values) in uiFilters\\\" class=\\\"inline-filters\\\">\\n        <span ng-if=\\\"isArray(values)\\\">\\n            <span class=\\\"bug\\\" ng-repeat=\\\"value in values track by $index\\\" >\\n                <svg class=\\\"iconic\\\" ng-click=\\\"removeFilter(key, value, false, $event)\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                </svg>\\n                <span><em><translate translate=\\\"global_filter.filter_tabs.{{key}}\\\"></translate>:</em> <bdi>{{ transformFilterValue(value, key) }}</bdi></span>\\n            </span>\\n        </span>\\n        <span ng-if=\\\"!isArray(values)\\\">\\n            <span class=\\\"bug\\\">\\n                <svg class=\\\"iconic\\\" ng-click=\\\"removeFilter(key, values, false, $event)\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#circle-x\\\"></use>\\n                </svg>\\n                <span><em><translate translate=\\\"global_filter.filter_tabs.{{key}}\\\"></translate>:</em> <bdi>{{ transformFilterValue(values, key) }}</bdi></span>\\n            </span>\\n        </span>\\n    </div>\\n</div>\\n\\n<div class=\\\"form-field\\\" ng-show=\\\"showSaveSavedSearchButton()\\\">\\n    <button type=\\\"button\\\" class=\\\"button button-alpha right\\\" ng-click=\\\"saveSavedSearchModal()\\\" translate=\\\"set.save_savedsearch\\\">Save search</button>\\n</div>\\n<div class=\\\"form-field\\\" ng-show=\\\"userCanUpdateSavedSearch\\\">\\n    <button type=\\\"button\\\" class=\\\"button button-alpha right\\\" ng-click=\\\"$parent.editSavedSearchModal('update')\\\" translate=\\\"set.update_savedsearch\\\">Edit Saved search</button>\\n</div>\\n\";","module.exports = PostFiltersService;\n\nPostFiltersService.$inject = ['_', 'FormEndpoint', 'TagEndpoint', '$q'];\nfunction PostFiltersService(_, FormEndpoint, TagEndpoint, $q) {\n    // Create initial filter state\n    var filterState = window.filterState = getDefaults();\n    var forms = [];\n    var tags = [];\n    var filterMode = 'all';\n    var entity = null;\n    // @todo take this out of the service\n    // but ensure it happens at the right times\n    activate();\n\n    return {\n        resetDefaults: resetDefaults,\n        getDefaults: getDefaults,\n        getQueryParams: getQueryParams,\n        getFilters: getFilters,\n        setFilters: setFilters,\n        setFilter: setFilter,\n        clearFilters: clearFilters,\n        clearFilter: clearFilter,\n        clearFilterFromArray: clearFilterFromArray,\n        hasFilters: hasFilters,\n        getActiveFilters: getActiveFilters,\n        getUIActiveFilters: getUIActiveFilters,\n        setMode: setMode,\n        getMode: getMode,\n        getModeId: getModeId,\n        getModeEntity: getModeEntity,\n        countFilters: countFilters,\n        cleanUIFilters: cleanUIFilters,\n        cleanRemovedValuesFromObject: cleanRemovedValuesFromObject,\n        addIfCurrentObjectMatchesOriginal: addIfCurrentObjectMatchesOriginal,\n        reactiveFilters: true,\n        /**\n         * This flag is used to syncronize the \"internalChange\" state globally\n         * (useful between filters bug icons and checkboxes).\n         * Since we use ngmodel all our changes in filter-category to selectecategories trigger changes\n         * and we want to keep a state to know if the user did the change or our handleParents category\n         */\n        filtersInternalChange: true\n    };\n\n    /**\n     * Removes every value that is not an array from the \"target\" object IF the key is present in the \"from\" object.\n     * For array values it runs a diff between the \"target\" and \"from\" current value:\n     * - if it' empty, DELETES the key from \"target\"\n     * - if not empty, assigns the diff in \"target\"\n     * Finally this returns the target object to be used elsewhere.\n     * The function was created for the uiFilters specifically.\n     * @param target\n     * @param from\n     * @returns object\n     */\n    function cleanUIFilters(target, from) {\n        _.each(target, function (value, key) {\n            var shouldDeleteTargetKey = !_.isArray(target[key]) && target.hasOwnProperty(key) && !_.isEmpty(from[key]) || !_.isArray(target[key]) && target[key] === getDefaults()[key];\n            if (shouldDeleteTargetKey) {\n                delete target[key];\n            } else if (_.isArray(target[key])) {\n                var diff =  _.difference(value, from[key]);\n                if (diff.length === 0) {\n                    delete target[key];\n                } else {\n                    target[key] = diff;\n                }\n            }\n        });\n        return target;\n    }\n    /**\n     *  Original has 3 filters, then 1 was removed, so current has 2. uiFiltersCurrent has 3 again because the user re-added it.\n     *  We need to compare  original and uiFIltersCurrent.\n     *  If `uiFiltersCurrent` has values that are present in  `original`,\n     *  we need to add them to `current` (*some other function will remove them from uiFiltersCurrent too)\n     *\n     * @param current\n     * @param original\n     */\n    function addIfCurrentObjectMatchesOriginal(currentSavedSearch, originalSavedSearch, currentFilters) {\n        //find filters in current that are part of the original object\n        return _.mapObject(originalSavedSearch, function (obj, key) {\n            if (!_.isArray(obj)) {\n                return currentFilters[key];\n            }\n            var currentContainsOriginalSavedSearch = _.every(originalSavedSearch[key], function (obj) {\n                return _.contains(currentFilters[key], obj);\n            });\n            if (currentContainsOriginalSavedSearch) {\n                return _.intersection(originalSavedSearch[key], currentFilters[key]);\n            } else {\n                return _.intersection(currentSavedSearch[key], currentFilters[key]);\n            }\n        });\n    }\n    /**\n     * Looks for keys that are NOT present in currentFilters but that are in the savedSearch filters (which means they are removed)\n     * and removes them from the saved search filters array.\n     * Does not handle removal where the key exists but the values are an array and some are missing. Need to fix that.\n     **/\n    function cleanRemovedValuesFromObject(currentFilters, oldFilters) {\n        //find filters in currentFilters that are NOT in savedSearch.filters\n        var validFilters = _.pick(oldFilters, _.without(_.keys(currentFilters), _.keys(oldFilters)));\n        validFilters = _.mapObject(validFilters, function (obj, key) {\n            if (!_.isArray(oldFilters[key])) {\n                return currentFilters[key];\n            }\n            return _.filter(oldFilters[key], function (val) {\n                return currentFilters[key].indexOf(val) > -1;\n            });\n        });\n        return validFilters;\n    }\n\n    /**\n     * function to deal with the fact that logout and login don't really reset the defaults.\n     */\n    function resetDefaults() {\n        return activate().then(() => {\n            this.clearFilters();\n        });\n    }\n\n    function activate() {\n        return $q.all([TagEndpoint.query().$promise, FormEndpoint.query().$promise]).then(function (results) {\n            tags = _.pluck(results[0], 'id');\n            forms = results[1];\n            // adding incoming messages to filter\n            forms.push({id: 'none'});\n            filterState.form = filterState.form || [];\n            if (filterState.form.length === 0) { // just in case of race conditions\n                Array.prototype.splice.apply(filterState.form, [0, 0].concat(_.pluck(forms, 'id')));\n            }\n        });\n    }\n\n    // Get filterState\n    function getFilters() {\n        return filterState;\n    }\n\n    function setFilters(newState) {\n        // Replace 'all' with full list of statuses\n        // Gives less confusing active display, and works around API bug\n        if (newState.status === 'all') {\n            newState.status = ['published', 'draft', 'archived'];\n        }\n\n        // Replace filterState with defaults + newState\n        // Including defaults ensures all values are always defined\n        return angular.extend(filterState, getDefaults(), newState);\n    }\n\n    function setFilter(key, value) {\n        filterState[key] = value;\n        return filterState;\n    }\n\n    function clearFilters() {\n        this.filtersInternalChange = false;\n        // Replace filterState with defaults\n        angular.copy(getDefaults(), filterState);\n        // Trigger reactive filters\n        this.reactiveFilters = true;\n        return filterState;\n    }\n\n    function clearFilter(filterKey, value) {\n        filterState = this.clearFilterFromArray(filterKey, value, filterState);\n    }\n    function clearFilterFromArray(filterKey, value, from) {\n        this.filtersInternalChange = false;\n        /*\n         * if filter is in an array, we only want to remove that specific value\n         * if all filter-values are removed from array, we want to reset to default\n         */\n        if (Array.isArray(from[filterKey]) && from[filterKey].length > 1) {\n            from[filterKey].splice(from[filterKey].indexOf(value), 1);\n        } else {\n            from[filterKey] = getDefaults()[filterKey];\n        }\n\n        return from;\n    }\n\n    function getDefaults() {\n        return {\n            q: '',\n            date_after: '',\n            date_before: '',\n            status: filterMode === 'collection' ? ['published', 'draft', 'archived'] : ['published', 'draft'],\n            published_to: '',\n            center_point: '',\n            has_location: 'all',\n            within_km: '1',\n            current_stage: [],\n            tags: tags,\n            saved_search: '',\n            orderby: 'created',\n            order: 'desc',\n            order_unlocked_on_top: 'true',\n            form: _.pluck(forms, 'id'),\n            set: [],\n            user: false,\n            source: ['sms', 'twitter','web', 'email']\n        };\n    }\n\n    function getQueryParams(filters) {\n        var defaults = getDefaults();\n        var query = _.omit(\n            filters,\n            function (value, key, object) {\n                if (key === 'saved_search') {\n                    return true;\n                }\n                if (key === 'reactiveFilters') {\n                    return true;\n                }\n                // Is value empty?\n                // Is it a date?\n                if (_.isDate(value)) {\n                    return false;\n                }\n\n                // Is an array with all the same elements? (order doesn't matter)\n                if ((key === 'tags' || key === 'form') && _.isArray(defaults[key]) &&\n                    _.difference(value, defaults[key]).length === 0 &&\n                    _.difference(defaults[key], value).length === 0) {\n                    return true;\n                }\n\n                // Is it an empty object or array?\n                if (_.isObject(value) || _.isArray(value)) {\n                    return _.isEmpty(value);\n                }\n                // Or is it just falsy?\n                return !value;\n            }\n        );\n\n        if (filters.center_point) {\n            query.center_point = filters.center_point;\n            query.within_km = filters.within_km || 10;\n        } else {\n            delete query.within_km;\n        }\n        if (filterMode === 'collection') {\n            query.set = [getModeId()].concat(query.set);\n        }\n        return query;\n    }\n\n    /**\n     * For UI purposes only\n     * Returns the non-default filters so that we don' show the user 3 filters when they didn' select one yet\n     * Example: when the active filters load we show \"sort\", \"unlockedOnTop\", \"sort_by\" as active with their value\n     * but since the user didn't select a filter, it can be really confusing.\n     * @param filters\n     */\n    function getUIActiveFilters(filters) {\n        var defaults = getDefaults();\n        return _.omit(\n            filters,\n            function (value, key, object) {\n                if (defaults[key] === value) {\n                    return true;\n                }\n                // Ignore difference in saved_search\n                if (key === 'saved_search') {\n                    return true;\n                }\n                // Ignore difference in within_km\n                if (key === 'within_km') {\n                    return true;\n                }\n                // Is the same as the default?\n                if (_.isEqual(defaults[key], value)) {\n                    return true;\n                }\n                // Is an array with all the same elements? (order doesn't matter)\n                if (_.isArray(defaults[key]) &&\n                    _.difference(value, defaults[key]).length === 0 &&\n                    _.difference(defaults[key], value).length === 0) {\n                    return true;\n                }\n                // Is value empty? ..and not a date object\n                // _.empty only works on arrays, object and strings.\n                return (_.isEmpty(value) && !_.isDate(value));\n            }\n        );\n    }\n\n    /**\n     * Gets the real active filters, including defaults.\n     * @param filters\n     */\n    function getActiveFilters(filters) {\n        var defaults = getDefaults();\n        return _.omit(\n            filters,\n            function (value, key, object) {\n                if (key === 'reactiveFilters') {\n                    return true;\n                }\n                // Ignore difference in saved_search\n                if (key === 'saved_search') {\n                    return true;\n                }\n                // Ignore difference in within_km\n                if (key === 'within_km') {\n                    return true;\n                }\n                // Is the same as the default?\n                if (_.isEqual(defaults[key], value)) {\n                    return true;\n                }\n                // Is an array with all the same elements? (order doesn't matter)\n                if (_.isArray(defaults[key]) &&\n                    _.difference(value, defaults[key]).length === 0 &&\n                    _.difference(defaults[key], value).length === 0) {\n                    return true;\n                }\n                // Is value empty? ..and not a date object\n                // _.empty only works on arrays, object and strings.\n                return (_.isEmpty(value) && !_.isDate(value));\n            }\n        );\n    }\n\n    function hasFilters(filters) {\n        return !_.isEmpty(getActiveFilters(filters));\n    }\n\n    function setMode(newMode, obj) {\n        // If mode changes, reset filters\n        if (newMode !== filterMode) {\n            filterMode = newMode;\n            if (filterMode === 'collection') {\n                this.clearFilters();\n            }\n\n        }\n        entity = obj;\n    }\n\n    function getMode() {\n        return filterMode;\n    }\n\n    function getModeId() {\n        return entity ? entity.id : null;\n    }\n\n    function getModeEntity(type) {\n        if (getMode() === type) {\n            return entity;\n        }\n        return null;\n    }\n    function countFilters() {\n        let count = _.keys(this.getActiveFilters(this.getFilters())).length;\n\n        // Hacky workaround to make sure set is counted in filter counter\n        // Can probably be refactored to just include set in the filterState\n        // itself\n        if (filterMode === 'collection') {\n            count++;\n        }\n\n        return count;\n    }\n}\n\n// clearSelected: function () {\n//     var localDefaults = angular.copy(filterDefaults);\n//     _.each(localDefaults, _.bind(function (value, key) {\n//         this[key] = value;\n//     }, this));\n// },\n// setSelected: function (newFilters) {\n//     var localDefaults = angular.copy(filterDefaults);\n//     newFilters = angular.copy(newFilters);\n\n//     _.each(localDefaults, _.bind(function (defaultValue, key) {\n//         if (_.has(newFilters, key)) {\n//             this[key] = newFilters[key];\n//         } else {\n//             this[key] = defaultValue;\n//         }\n//     }, this));\n// },\n","module.exports = FilterTransformersService;\n\nFilterTransformersService.$inject = ['_', 'FormEndpoint', 'TagEndpoint', 'RoleEndpoint',\n    'UserEndpoint', 'SavedSearchEndpoint', 'CollectionEndpoint', 'PostMetadataService', '$translate', '$filter', '$q'];\nfunction FilterTransformersService(_, FormEndpoint, TagEndpoint, RoleEndpoint,\n                            UserEndpoint, SavedSearchEndpoint, CollectionEndpoint, PostMetadataService, $translate, $filter, $q) {\n    var roles, users, tags, forms, savedSearches, collections = [];\n    var self = this;\n    this.rawFilters = {};\n\n    this.requestsFiltersData = function () {\n        return $q.all([\n                RoleEndpoint.query().$promise,\n                UserEndpoint.query().$promise,\n                TagEndpoint.query().$promise,\n                FormEndpoint.query().$promise,\n                SavedSearchEndpoint.query({}).$promise,\n                CollectionEndpoint.query({}).$promise\n            ]).then(function (results) {\n            roles = _.indexBy(results[0], 'name');\n            users = _.indexBy(results[1], 'id');\n            tags = _.indexBy(results[2], 'id');\n            forms = _.indexBy(results[3], 'id');\n            savedSearches = _.indexBy(results[4], 'id');\n            collections = _.indexBy(results[5], 'id');\n        });\n    };\n    this.transformers = {\n        order_unlocked_on_top: function (value) {\n            var boolText = value === 'true' ? 'yes' : 'no';\n            return $translate.instant('global_filter.filter_tabs.order_group.unlocked_on_top_' + boolText);\n        },\n        order: function (value) {\n            return $translate.instant('global_filter.filter_tabs.order_group.order.' + value.toLowerCase());\n        },\n        orderby: function (value) {\n            return $translate.instant('global_filter.filter_tabs.order_group.orderby.' + value);\n        },\n        tags : function (value) {\n            return tags[value] ? tags[value].tag : value;\n        },\n        user : function (value) {\n            return users[value] ? users[value].realname : value;\n        },\n        saved_search: function (value) {\n            if (value) {\n                return savedSearches[value.id].name;\n            }\n            return '';\n        },\n        set: function (value) {\n            if (value) {\n                return collections[value.id].name;\n            }\n            return '';\n        },\n        center_point : function (value) {\n            return $translate.instant('global_filter.filter_tabs.location_value', {\n                value: self.rawFilters.location_text ? this.rawFilters.location_text : value,\n                km: self.rawFilters.within_km\n            });\n        },\n        created_before : function (value) {\n            return $filter('date', 'longdate')(value);\n        },\n        created_after : function (value) {\n            return $filter('date', 'longdate')(value);\n        },\n        date_before : function (value) {\n            return $filter('date', 'longdate')(value);\n        },\n        date_after : function (value) {\n            return $filter('date', 'longdate')(value);\n        },\n        status : function (value) {\n            return $translate.instant('post.' + value);\n        },\n        source : function (value) {\n            return PostMetadataService.formatSource(value);\n        },\n        form: function (value) {\n            return forms[value] ? forms[value].name : value;\n        }\n    };\n    return self;\n}\n","module.exports = FiltersDropdown;\n\nFiltersDropdown.$inject = [];\nfunction FiltersDropdown() {\n    return {\n        restrict: 'E',\n        scope: {\n            dropdownStatus: '=',\n            filters: '='\n        },\n        controller: FiltersDropdownController,\n        template: require('./filters-dropdown.html')\n    };\n}\n\nFiltersDropdownController.$inject = ['$scope', '$state', 'PostFilters', 'ModalService', '$rootScope', '_'];\nfunction FiltersDropdownController($scope, $state, PostFilters, ModalService, $rootScope, _) {\n    $scope.canUpdateSavedSearch = false;\n    $scope.$watch(PostFilters.getModeId, function (newValue, oldValue) {\n        if (oldValue !== newValue || typeof ($scope.canUpdateSavedSearch) === 'undefined') {\n            setSavedSearchUpdateStatus();\n        }\n    });\n    // Init an empty saved search\n    $scope.savedSearch = {\n        view : 'map',\n        role : []\n    };\n    // Check if we can edit\n    function setSavedSearchUpdateStatus() {\n        var savedSearch = PostFilters.getModeEntity('savedsearch');\n\n        $scope.canUpdateSavedSearch = savedSearch && _.contains(savedSearch.allowed_privileges, 'update');\n    }\n\n    $scope.clearFilters = function () {\n        if (_.contains(['savedsearch', 'collection'], PostFilters.getMode()) && PostFilters.getModeId()) {\n            PostFilters.setMode('all');\n            if ($state.$current.includes['posts.map']) {\n                $state.go('posts.map.all');\n            } else {\n                $state.go('posts.data');\n            }\n        }\n        $scope.filters = PostFilters.clearFilters();\n        $scope.dropdownStatus.isopen = !$scope.dropdownStatus.isopen;\n        $scope.canUpdateSavedSearch = false;\n    };\n\n    $scope.saveSavedSearchModal = function () {\n        $scope.savedSearch.filter = $scope.filters;\n        // @TODO Prevent the user from creating one if they somehow manage to get to this point without being logged in\n        $scope.savedSearch.user_id = $rootScope.currentUser ? $rootScope.currentUser.userId : null;\n        ModalService.openTemplate('<saved-search-editor saved-search=\"savedSearch\"></saved-search-editor>', 'set.create_savedsearch', 'star', $scope, false, false);\n    };\n    $scope.editSavedSearchModal = function (editOrUpdate) {\n        let modalHeaderText = editOrUpdate === 'edit' ? 'set.edit_savedsearch' : 'set.update_savedsearch';\n        $scope.savedSearch = PostFilters.getModeEntity('savedsearch');\n        $scope.savedSearch.filter = PostFilters.getActiveFilters($scope.filters);\n        // @TODO Prevent the user from creating one if they somehow manage to get to this point without being logged in\n        $scope.savedSearch.user_id = $rootScope.currentUser ? $rootScope.currentUser.userId : null;\n        ModalService.openTemplate('<saved-search-editor saved-search=\"savedSearch\"></saved-search-editor>', modalHeaderText, 'star', $scope, false, false);\n    };\n    $scope.disableApplyButton = function () {\n        return $state.$current.includes['posts.map'] ? true : false;\n    };\n}\n\n","module.exports = \"<div class=\\\"dropdown-menu-body\\\">\\n    <div class=\\\"form-field filter-buttons\\\">\\n        <post-active-search-filters ng-model=\\\"filters\\\" filters-var=\\\"filters\\\"></post-active-search-filters>\\n    </div>\\n    <div class=\\\"divider\\\"></div>\\n    <!-- sorting options -->\\n    <h4 class=\\\"dropdown-menu-title\\\" translate=\\\"app.sort_by\\\"></h4>\\n\\n    <filter-post-sorting-options ng-model=\\\"filters.orderby\\\"></filter-post-sorting-options>\\n    <fieldset>\\n        <filter-post-order-asc-desc ng-model=\\\"filters.order\\\"></filter-post-order-asc-desc>\\n        <filter-unlocked-on-top ng-model=\\\"filters.order_unlocked_on_top\\\"></filter-unlocked-on-top>\\n    </fieldset>\\n    <!-- end: sorting options -->\\n\\n    <!-- filter options -->\\n    <h4 class=\\\"dropdown-menu-title\\\" translate=\\\"app.filter_by\\\"></h4>\\n    <filter-saved-search ng-model=\\\"filters.saved_search\\\"></filter-saved-search>\\n    <filter-status ng-model=\\\"filters.status\\\"></filter-status>\\n    <filter-category ng-model=\\\"filters.tags\\\"></filter-category>\\n    <filter-form ng-model=\\\"filters.form\\\"></filter-form>\\n    <filter-source ng-model=\\\"filters.source\\\"></filter-source>\\n    <filter-date date-after-model=\\\"filters.date_after\\\" date-before-model=\\\"filters.date_before\\\"></filter-date>\\n    <filter-location center-point-model=\\\"filters.center_point\\\" within-km-model=\\\"filters.within_km\\\"></filter-location>\\n    <!-- end: filter options -->\\n</div>\\n<div class=\\\"form-field filter-actions\\\">\\n    <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"clearFilters()\\\" translate>global_filter.restore_defaults</button>\\n    <button type=\\\"submit\\\" class=\\\"button-alpha\\\" ng-disabled=\\\"disableApplyButton()\\\" translate>app.apply_filters</button>\\n</div>\\n\";","module.exports = FilterSavedSearch;\n\nFilterSavedSearch.$inject = ['SavedSearchEndpoint', '_', '$rootScope', 'ModalService', 'PostFilters'];\nfunction FilterSavedSearch(SavedSearchEndpoint, _,  $rootScope, ModalService, PostFilters) {\n    return {\n        restrict: 'E',\n        require: 'ngModel',\n        scope: {\n        },\n        link: FilterSavedSearchLink,\n        template: require('./filter-saved-search.html')\n    };\n\n    function FilterSavedSearchLink(scope, element, attrs, ngModel) {\n        scope.selectedSavedSearch = null;\n        scope.searches = [];\n        scope.searchesLength = 0;\n        scope.loading = false;\n\n        activate();\n\n        function activate() {\n            loadSavedSearches().then(function () {\n                if (ngModel.$viewValue) {\n                    scope.selectedSavedSearch = scope.searches[ngModel.$viewValue.id];\n                } else if (PostFilters.getModeId()) {\n                    scope.selectedSavedSearch = scope.searches[PostFilters.getModeId()];\n                }\n\n                scope.$watch('selectedSavedSearch', saveValueToView, true);\n            });\n\n            scope.$on('savedSearch:update', loadSavedSearches);\n            scope.$watch(PostFilters.getModeId, handleModeIdChange);\n        }\n\n        function saveValueToView(selectedSavedSearch) {\n            var modeEntity = PostFilters.getModeEntity('savedsearch');\n            var isSameSavedSearch = modeEntity ? selectedSavedSearch.id === modeEntity.id : false;\n            if (selectedSavedSearch && selectedSavedSearch.hasOwnProperty('filter') && !isSameSavedSearch) {\n                PostFilters.setFilters(selectedSavedSearch.filter);\n                PostFilters.setMode('savedsearch', selectedSavedSearch);\n            } else if (selectedSavedSearch === null && PostFilters.getModeId() !== null) {\n                PostFilters.setMode('all');\n            }\n            ngModel.$setViewValue(selectedSavedSearch);\n        }\n\n        function handleModeIdChange(newValue, oldValue) {\n            if (newValue !== oldValue) {\n                if (typeof (newValue) === 'undefined' || newValue === null) {\n                    scope.selectedSavedSearch = null;\n                } else if (scope.searchesLength > 0) {\n                    scope.selectedSavedSearch =  scope.searches[newValue];\n                }\n            }\n        }\n\n        // Load searches + users\n        function loadSavedSearches() {\n            scope.loading = true;\n            return SavedSearchEndpoint.query({}).$promise.then(function (searches) {\n                var searchesTmp = _.filter(searches, function (search) {\n                    var isOwner = (search.user && search.user.id === _.result($rootScope.currentUser, 'userId')) === true;\n                    return search.featured || isOwner;\n                });\n                scope.searches = _.indexBy(searchesTmp, 'id');\n                scope.searchesLength = _.keys(scope.searches).length;\n                scope.loading = false;\n            });\n        }\n    }\n}\n","module.exports = \"<fieldset ng-show=\\\"searchesLength > 0 && !loading\\\">\\n<label translate=\\\"app.saved_search\\\"></label>\\n    <div class=\\\"custom-select\\\" ng-model-options=\\\"{ updateOn: 'default' }\\\">\\n        <select\\n                ng-model=\\\"selectedSavedSearch\\\"\\n                ng-options=\\\"search.name | translate\\n                        for\\n                        search in searches\\n                        track by search.id\\\"\\n        >\\n            <option value=\\\"\\\" translate=\\\"app.select_one\\\">Select one</option>\\n        </select>\\n    </div>\\n    <a class=\\\"button button-beta\\\" ng-show=\\\"selectedSavedSearch\\\" ng-click=\\\"$parent.editSavedSearchModal('edit')\\\">Edit</a>\\n</fieldset>\\n<fieldset ng-show=\\\"loading\\\">\\n    <label translate=\\\"app.saved_search\\\"></label>\\n    <button ng-show=\\\"loading\\\" type=\\\"button\\\" class=\\\"button button-full-width button-beta\\\">\\n        <div class=\\\"loading\\\">\\n            <div class=\\\"line\\\"></div>\\n            <div class=\\\"line\\\"></div>\\n            <div class=\\\"line\\\"></div>\\n        </div>\\n        <span class=\\\"button-label\\\" translate=\\\"app.loading_saved_searches\\\">Loading saved searches</span>\\n    </button>\\n</fieldset>\\n\";","module.exports = SortAndFilterCounterDirective;\n\nSortAndFilterCounterDirective.$inject = ['PostFilters'];\nfunction SortAndFilterCounterDirective(PostFilters) {\n    return {\n        restrict: 'E',\n        scope: {},\n        link: SortAndFilterCounterDirectiveLink,\n        template: require('./sort-and-filter-counter.html')\n    };\n\n    function SortAndFilterCounterDirectiveLink($scope, $element, $attrs, ngModel) {\n        $scope.$watch(function () {\n            return PostFilters.countFilters();\n        }, handleFiltersUpdate, true);\n\n        function handleFiltersUpdate() {\n            $scope.filtersCount = PostFilters.countFilters();\n        }\n    }\n\n}\n\n","module.exports = \"<span class=\\\"button-label-d\\\">\\n    <span class=\\\"badge iconic\\\">{{filtersCount}}</span>\\n    <span translate>app.sort_filter</span>\\n</span>\\n<svg class=\\\"iconic\\\">\\n    <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n</svg>\";","module.exports = PostShareDirective;\n\nPostShareDirective.$inject = [];\nfunction PostShareDirective() {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            filters: '=',\n            button: '=?',\n            postId: '=?'\n        },\n        controller: PostShareController,\n        template: require('./post-share.html')\n    };\n}\n\nPostShareController.$inject = [\n    '$scope',\n    '$window',\n    'ModalService'\n];\nfunction PostShareController(\n    $scope,\n    $window,\n    ModalService\n) {\n    $scope.loading = false;\n    $scope.openShareMenu = openShareMenu;\n    $scope.isButton = isButton;\n    $scope.isAdd = isAdd;\n\n    activate();\n\n    function activate() {\n    }\n\n    function isButton() {\n        return $scope.button;\n    }\n\n    function isAdd() {\n        if ($window.location.href.indexOf('post') > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    function openShareMenu() {\n        var template = '<share-menu-modal filters=\"filters\" post-id=\"' + $scope.postId + '\"></share-menu-modal>';\n        ModalService.openTemplate(template, 'app.share', 'share', $scope, true, true);\n    }\n}\n","module.exports = \"<a ng-class=\\\"{ 'button' : isButton(), 'button-flat': isAdd()}\\\" ng-click=\\\"openShareMenu()\\\">\\n\\t\\t<div class=\\\"loading\\\" ng-if=\\\"loading\\\">\\n\\t\\t\\t<div class=\\\"line\\\"></div>\\n\\t\\t\\t<div class=\\\"line\\\"></div>\\n\\t\\t\\t<div class=\\\"line\\\"></div>\\n\\t\\t</div>\\n    <svg class=\\\"iconic\\\" ng-hide=\\\"loading\\\">\\n      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#share\\\"></use>\\n    </svg>\\n\\t<span ng-class=\\\"{'button-label': isButton(), 'label': !isButton()}\\\" translate=\\\"app.share\\\">\\n\\t\\t\\tShare {{isButton()}}\\n\\t</span>\\n</a>\\n\";","module.exports = ShareMenuDirective;\n\nShareMenuDirective.$inject = [];\nfunction ShareMenuDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '=',\n            surveyId: '=',\n            postId: '='\n        },\n        replace: true,\n        controller: ShareMenuController,\n        template: require('./share-menu.html')\n    };\n}\n\nShareMenuController.$inject = [\n    '$scope',\n    '$rootScope',\n    'Util',\n    '$window'\n];\nfunction ShareMenuController(\n    $scope,\n    $rootScope,\n    Util,\n    $window\n) {\n\n    $scope.loading = false;\n    $scope.shareUrl = Util.currentUrl();\n    $scope.isExportable = isExportable;\n    $scope.hasPermission = $rootScope.hasPermission('Bulk Data Import and Export') || $rootScope.hasPermission('Bulk Data Import');\n\n    activate();\n\n    function activate() {\n        // If we are in a post action menu\n        // Then we have to change the url to ensure that when\n        // selected from either the map or timeline view for\n        // an individual post that the URL is correct\n        if ($scope.postId) {\n            $scope.shareUrl = $window.location.origin + '/posts/' + $scope.postId;\n        }\n\n        if ($scope.surveyId) {\n            $scope.shareUrl = $window.location.origin + '/posts/create/' + $scope.surveyId;\n        }\n\n        $scope.shareUrlEncoded = encodeURIComponent($scope.shareUrl);\n    }\n    // Check if current view is exportable\n    function isExportable() {\n        return true;\n    }\n}\n","module.exports = \"<form class=\\\"panel-body\\\" name=\\\"form\\\" ng-submit=\\\"submit()\\\">\\n    <div class=\\\"form-field\\\" ng-show=\\\"surveyId\\\">\\n        <label translate=\\\"app.survey_web_address\\\">Your survey's web address</label>\\n        <input type=\\\"url\\\" value=\\\"{{shareUrl}}\\\" readonly=\\\"\\\">\\n    </div>\\n    <div class=\\\"listing init\\\">\\n\\n        <div class=\\\"listing-item\\\">\\n            <div class=\\\"listing-item-primary\\\">\\n                <div class=\\\"listing-item-image\\\">\\n                    <img class=\\\"icon\\\" src=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/facebook.png\") + \"\\\" alt=\\\"\\\">\\n                </div>\\n                <h2 class=\\\"listing-item-title\\\">\\n                  <div class=\\\"fb-share-button\\\"\\n                    data-href=\\\"{{shareUrl}}\\\"\\n                    data-layout=\\\"button_count\\\"\\n                    data-size=\\\"large\\\"\\n                    data-mobile-iframe=\\\"true\\\">\\n                      <a class=\\\"fb-xfbml-parse-ignore\\\"\\n                        target=\\\"_blank\\\"\\n                        ng-href=\\\"https://www.facebook.com/sharer/sharer.php?u={{shareUrlEncoded}}&amp;src=sdkpreparse\\\">\\n                          Facebook\\n                      </a>\\n                  </div>\\n                </h2>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"listing-item\\\">\\n            <div class=\\\"listing-item-primary\\\">\\n                <div class=\\\"listing-item-image\\\">\\n                    <img class=\\\"icon\\\" src=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/twitter.png\") + \"\\\" alt=\\\"\\\">\\n                </div>\\n                <h2 class=\\\"listing-item-title\\\"><a target=\\\"_blank\\\" ng-href=\\\"https://twitter.com/home?status={{shareUrlEncoded}}\\\">Twitter</a></h2>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"listing-item\\\" dropdown auto-close=\\\"disabled\\\">\\n          <div dropdown-toggle>\\n            <div class=\\\"listing-item-secondary\\\">\\n                <button type=\\\"button\\\" class=\\\"button-link listing-item-toggle\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                    </svg>\\n                    <span class=\\\"button-label\\\">Configure</span>\\n                </button>\\n            </div>\\n\\n            <div class=\\\"listing-item-primary\\\">\\n                <div class=\\\"listing-item-image\\\">\\n                  <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#code\\\"></use>\\n                  </svg>\\n                </div>\\n                <h2 class=\\\"listing-item-title listing-item-toggle\\\">Embed</h2>\\n            </div>\\n          </div>\\n\\n            <div class=\\\"listing-item-body\\\" dropdown-menu>\\n              <div class=\\\"form-field\\\">\\n                  <label>HTML</label>\\n                  <textarea>&lt;iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"{{shareUrl}}\\\" frameborder=\\\"0\\\" allowfullscreen&gt;&lt;/iframe&gt;</textarea>\\n              </div>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"listing-item\\\" ng-show=\\\"isExportable() && hasPermission\\\">\\n          <div class=\\\"listing-item-primary\\\">\\n              <div class=\\\"listing-item-image\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                </svg>\\n              </div>\\n              <h2 class=\\\"listing-item-title\\\">\\n                <post-export filters=\\\"filters\\\"></post-export>\\n              </h2>\\n          </div>\\n      </div>\\n  </div>\\n</form>\\n\";","module.exports = ShareMenuDirective;\n\nShareMenuDirective.$inject = [];\nfunction ShareMenuDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            surveyId: '=',\n            postId: '=',\n            filters: '='\n        },\n        replace: true,\n        controller: ShareMenuController,\n        template: require('./share-menu-modal.html')\n    };\n}\n\nShareMenuController.$inject = [\n    '$scope',\n    'Util',\n    '$window'\n];\nfunction ShareMenuController(\n    $scope,\n    Util,\n    $window\n) {\n}\n","module.exports = \"<div class=\\\"modal-body\\\">\\n    <share-menu post-id=\\\"postId\\\" filters=\\\"filters\\\"></share-menu>\\n</div>\\n\";","module.exports = PostExportDirective;\n\nPostExportDirective.$inject = [];\nfunction PostExportDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '='\n        },\n        controller: PostExportController,\n        template: require('./post-export.html')\n    };\n}\n\nPostExportController.$inject = [\n    '$scope',\n    'Notify',\n    'PostFilters',\n    '_',\n    'DataExport'\n];\nfunction PostExportController(\n    $scope,\n    Notify,\n    PostFilters,\n    _,\n    DataExport\n) {\n    $scope.getQuery = getQuery;\n\n    $scope.exportPostsConfirmation = function () {\n        /**\n         * Trigger confirm notification for user.\n         * When the user accepts, get the CSV\n         */\n        Notify.confirm('notify.post.export').then(function (message) {\n            DataExport.startExport(getQuery());\n        });\n    };\n\n    function getQuery() {\n        /**\n         * If the filters are not available, apply the defaults\n         */\n        if (!$scope.filters || _.isEmpty($scope.filters)) {\n            $scope.filters = PostFilters.getDefaults();\n        }\n        // Prepare filters for export\n        var query = {\n            filters: PostFilters.getQueryParams($scope.filters),\n            send_to_hdx: false,\n            include_hxl: false,\n            send_to_browser: true\n        };\n        return query;\n    }\n}\n","module.exports = \"<a ng-click=\\\"exportPostsConfirmation()\\\" translate=\\\"app.export_to_csv\\\">Export filtered data</a>\\n\";","module.exports = [\nfunction (\n) {\n\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            view: '='\n        },\n        template: require('./post-view-unavailable.html')\n    };\n}];\n","module.exports = \"<div class=\\\"main-col\\\">\\n    <span translate translate-values=\\\"{value: '{{view}}'}\\\">\\n        feature_limits.view_unavailable\\n    </span>\\n    <p><a class=\\\"button\\\" href=\\\"/settings/plan\\\" translate>limit.upgrade</a></p>\\n</div>\\n\";","module.exports = [\n    '$q',\n    '$filter',\n    '$location',\n    '$rootScope',\n    '$translate',\n    'SavedSearchEndpoint',\n    '_',\n    'Notify',\n    'ViewHelper',\n    'RoleEndpoint',\n    'PostFilters',\nfunction (\n    $q,\n    $filter,\n    $location,\n    $rootScope,\n    $translate,\n    SavedSearchEndpoint,\n    _,\n    Notify,\n    ViewHelper,\n    RoleEndpoint,\n    PostFilters\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        template: require('./savedsearch-editor.html'),\n        scope: {\n            savedSearch: '='\n        },\n        link: function ($scope, $element, $attrs) {\n            if (!$scope.savedSearch) {\n                throw {\n                    message: 'savedsearchEditor must be passed a saved-search parameter'\n                };\n            }\n\n            $scope.featuredEnabled = function () {\n                return $rootScope.hasPermission('Manage Posts');\n            };\n\n            $scope.isAdmin = $rootScope.isAdmin;\n\n            $scope.views = ViewHelper.views();\n\n            $scope.cpySavedSearch = _.clone($scope.savedSearch);\n            // translate the description and name if they have a translation available (ie the \"My posts\" search)\n            $scope.cpySavedSearch.description = $filter('translate')($scope.cpySavedSearch.description);\n            $scope.cpySavedSearch.name = $filter('translate')($scope.cpySavedSearch.name);\n            $scope.save = function (savedSearch) {\n                $scope.isSaving = true;\n                var persist = savedSearch.id ? SavedSearchEndpoint.update : SavedSearchEndpoint.save;\n                persist(savedSearch)\n                .$promise\n                .then(function (savedSearch) {\n                    $scope.savedSearch = _.clone(savedSearch);\n                    $scope.$parent.closeModal();\n                    PostFilters.setMode('savedsearch', savedSearch);\n                    $rootScope.$broadcast('savedSearch:update');\n                    Notify.notify('notify.savedsearch.savedsearch_saved', {savedsearch: savedSearch.name});\n                    $scope.isSaving = false;\n                }, function (errorResponse) {\n                    Notify.apiErrors(errorResponse);\n                    $scope.isSaving = false;\n                });\n            };\n\n            $scope.cancel = $scope.$parent.closeModal;\n        }\n    };\n}];\n","module.exports = \"<div class=\\\"modal-body savedsearch-editor\\\">\\n\\n    <div class=\\\"form-field title\\\">\\n        <label translate>set.name_savedsearch</label>\\n        <input type=\\\"text\\\" placeholder=\\\"Name your Saved Search...\\\" ng-model=\\\"cpySavedSearch.name\\\" translate/>\\n    </div>\\n\\n    <div class=\\\"form-field\\\">\\n        <label class=\\\"input-label\\\" translate>set.description</label>\\n        <textarea ng-model=\\\"cpySavedSearch.description\\\" />\\n    </div>\\n\\n    <!-- Who can see? -->\\n    <role-selector model=\\\"savedSearch\\\" title=\\\"'app.who_can_see_this'\\\"></role-selector>\\n    <div class=\\\"modal-actions\\\">\\n        <div class=\\\"form-field\\\">\\n            <button type=\\\"button\\\" class=\\\"button-link  modal-trigger\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n            <button type=\\\"button\\\" class=\\\"button-alpha modal-trigger\\\" ng-show=\\\"!isSaving\\\" ng-click=\\\"save(cpySavedSearch)\\\" translate>app.save_and_close</button>\\n            <button ng-click=\\\"saveSearch()\\\" ng-show=\\\"isSaving\\\" disabled class=\\\"button-beta\\\" type=\\\"button\\\">\\n                <div class=\\\"loading\\\">\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                </div>\\n                <span class=\\\"button-label\\\" translate=\\\"app.saving\\\">Saving</span>\\n            </button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-field switch\\\" ng-if=\\\"featuredEnabled()\\\">\\n        <label for=\\\"saved-search-featured\\\">\\n            <translate translate=\\\"saved_search.featured\\\">Featured</translate>\\n            <span class=\\\"tooltip\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#question-mark\\\"></use>\\n                </svg>\\n                <span class=\\\"bug\\\" translate=\\\"saved_search.featured_tooltip\\\">Featured searches appear to all users in <br>the \\\"Saved Searches\\\" menu</span>\\n            </span>\\n        </label>\\n        <div class=\\\"toggle-switch\\\">\\n            <input class=\\\"tgl\\\" id=\\\"saved-search-featured\\\" type=\\\"checkbox\\\" ng-model=\\\"cpySavedSearch.featured\\\">\\n            <label class=\\\"tgl-btn\\\" for=\\\"saved-search-featured\\\" value=\\\"1\\\"></label>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-field\\\">\\n        <label class=\\\"input-label\\\" translate=\\\"set.default_viewing_mode\\\">Default viewing mode</label>\\n        <div class=\\\"custom-select\\\">\\n            <select ng-options=\\\"view.name as view.display_name for view in views\\\" ng-model=\\\"cpySavedSearch.view\\\">\\n            </select>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = [\n    '$rootScope',\n    'ModalService',\n    'PostFilters',\nfunction (\n    $rootScope,\n    ModalService,\n    PostFilters\n) {\n    return {\n        restrict: 'E',\n        template: require('./savedsearch-create.html'),\n        link: function ($scope, $element, $attrs) {\n\n            // Init an empty saved search\n            $scope.savedSearch = {\n                view : 'map',\n                role : []\n            };\n\n            // Compare current filters to default filters\n            $scope.hasFilters = function () {\n                return PostFilters.hasFilters($scope.filters);\n            };\n\n            $scope.saveSearch = function () {\n                // Copy the current filters into our search..\n                $scope.savedSearch.filter = $scope.filters;\n                // @TODO Prevent the user from creating one if they somehow manage to get to this point without being logged in\n                $scope.savedSearch.user_id = $rootScope.currentUser ? $rootScope.currentUser.userId : null;\n                ModalService.openTemplate('<saved-search-editor saved-search=\"savedSearch\"></saved-search-editor>', 'set.create_savedsearch', 'star', $scope, false, false);\n            };\n\n            $scope.clearFilters = function () {\n                PostFilters.clearFilters();\n            };\n        }\n    };\n}];\n","module.exports = \"<div class=\\\"savedsearch-create form-field\\\" ng-show=\\\"hasFilters()\\\">\\n    <button ng-click=\\\"saveSearch()\\\" ng-show=\\\"$root.loggedin\\\" class=\\\"button-alpha\\\" type=\\\"button\\\" translate>\\n        set.save_savedsearch\\n    </button>\\n    <button ng-click=\\\"saveSearch()\\\" ng-show=\\\"isSaving\\\" disabled class=\\\"button-beta\\\" type=\\\"button\\\">\\n            <div class=\\\"loading\\\">\\n                <div class=\\\"line\\\"></div>\\n                <div class=\\\"line\\\"></div>\\n                <div class=\\\"line\\\"></div>\\n            </div>\\n            <span class=\\\"button-label\\\" translate=\\\"app.saving\\\">Saving</span>\\n    <button ng-click=\\\"clearFilters()\\\" class=\\\"button-link\\\" type=\\\"button\\\" translate>\\n        set.clear_search\\n    </button>\\n\\n</div>\\n\\n\";","module.exports = [\n    '$q',\n    '$rootScope',\n    'SavedSearchEndpoint',\n    '_',\n    'Notify',\n    'PostFilters',\nfunction (\n    $q,\n    $rootScope,\n    SavedSearchEndpoint,\n    _,\n    Notify,\n    PostFilters\n) {\n    return {\n        restrict: 'E',\n        template: require('./savedsearch-update.html'),\n        link: function ($scope, $element, $attrs) {\n            if (!$scope.savedSearch) {\n                throw {\n                    message: 'savedsearchEditor must be passed a saved-search parameter'\n                };\n            }\n\n            // Compare current filters to saved filters\n            $scope.filtersChanged = function () {\n                return !angular.equals($scope.filters, $scope.savedSearch.filter);\n            };\n\n            $scope.saveSearch = function () {\n                // Copy the current filters into our search..\n                $scope.savedSearch.filter = PostFilters.getQueryParams($scope.filters);\n                $scope.isSaving = true;\n                SavedSearchEndpoint.update($scope.savedSearch)\n                .$promise\n                .then(function (savedSearch) {\n                    $scope.isSaving = false;\n                    Notify.notify('notify.savedsearch.savedsearch_updated', {savedsearch: savedSearch.name});\n                    $scope.resetSearch();\n                }, function (errorResponse) {\n                    $scope.isSaving = false;\n                    Notify.apiErrors(errorResponse);\n                });\n            };\n\n            $scope.resetSearch = function () {\n                PostFilters.setFilters($scope.savedSearch.filter);\n                // Slight hack: to avoid incorrectly detecting a changed search\n                // we push the real query we're using back into the saved search.\n                // This will now include any default params we excluded before\n                $scope.savedSearch.filter = angular.copy(PostFilters.getFilters());\n            };\n        }\n    };\n}];\n","module.exports = \"<div class=\\\"savedsearch-update form-field\\\" ng-show=\\\"filtersChanged()\\\">\\n    <button ng-click=\\\"saveSearch()\\\" ng-show=\\\"canEdit && !isSaving\\\" class=\\\"button-alpha\\\" type=\\\"button\\\" translate>\\n        set.update_savedsearch\\n    </button>\\n\\n    <button ng-click=\\\"saveSearch()\\\" ng-show=\\\"canEdit && isSaving\\\" disabled class=\\\"button-beta\\\" type=\\\"button\\\">\\n            <div class=\\\"loading\\\">\\n                <div class=\\\"line\\\"></div>\\n                <div class=\\\"line\\\"></div>\\n                <div class=\\\"line\\\"></div>\\n            </div>\\n            <span class=\\\"button-label\\\" translate=\\\"app.updating\\\">Updating</span>\\n    </button>\\n\\n    <button ng-click=\\\"resetSearch()\\\" class=\\\"button-link\\\" type=\\\"button\\\" translate>\\n        set.reset_savedsearch\\n    </button>\\n</div>\\n\";","module.exports = SavedSearchModal;\n\nSavedSearchModal.$inject = [];\nfunction SavedSearchModal() {\n    return {\n        restrict: 'E',\n        scope: true,\n        controller: SavedSearchModalController,\n        template: require('./saved-search-modal.html')\n    };\n}\n\nSavedSearchModalController.$inject = ['$scope', '$element', '$attrs', '$rootScope', '$location', 'UserEndpoint', 'SavedSearchEndpoint', '_', 'ModalService', '$state'];\nfunction SavedSearchModalController($scope, $element, $attrs, $rootScope, $location, UserEndpoint, SavedSearchEndpoint, _, ModalService, $state) {\n    $scope.searchSearches = searchSearches;\n    $scope.createNewSearch = createNewSearch;\n    $scope.goToSearch = goToSearch;\n    $scope.loading = false;\n    activate();\n\n    // Reload searches on login / logout events\n    $scope.$on('event:authentication:logout:succeeded', loadSavedSearches);\n    $scope.$on('event:authentication:login:succeeded', loadSavedSearches);\n    $scope.$on('savedSearch:update', loadSavedSearches);\n\n    function activate() {\n        $scope.loading = true;\n        loadSavedSearches();\n    }\n\n    // Load searches + users\n    function loadSavedSearches(query) {\n        $scope.searches = [];\n        query = query || {};\n        SavedSearchEndpoint.query(query).$promise.then(function (searches) {\n            $scope.searches = _.filter(searches, function (search) {\n                var isOwner = (search.user && search.user.id === _.result($rootScope.currentUser, 'userId')) === true;\n                return search.featured || isOwner;\n            });\n            $scope.loading = false;\n        }, function (fail) {\n            $scope.loading = false;\n        });\n    }\n\n    function createNewSearch() {\n        // Copy the current filters into our search..\n        ModalService.openTemplate('<saved-search-editor saved-search=\"savedSearch\"></saved-search-editor>', 'set.create_savedsearch', 'star', $scope, false, false);\n    }\n    function searchSearches(query) {\n        loadSavedSearches({\n            q : query\n        });\n    }\n\n    /**\n     * @param searchId: the saved search id, used to identify it in the url path.\n     * We are just closing the modal before we go to the new saved search the user selected in the frontend.\n     * See: https://waffle.io/ushahidi/platform/cards/598289fa17b93500a65be936\n     */\n    function goToSearch(savedSearch) {\n        ModalService.close();\n        // This feature is only available in Lisiting mode\n        // When a user clicks on a collection lisiting item\n        // they will be directed to the collection page\n        $scope.$parent.closeModal();\n        var viewParam = savedSearch.view;\n        if (viewParam === 'list' || viewParam === 'data') {\n            $state.go('posts.data.savedsearch', {savedSearchId: savedSearch.id}, {reload: true});\n        } else {\n            $state.go('posts.map.savedsearch', {savedSearchId: savedSearch.id}, {reload: true});\n        }\n    }\n\n}\n","module.exports = \"<div class=\\\"form-field\\\">\\n    <label class=\\\"hidden\\\" translate=\\\"set.find_a_saved_search\\\">Find a saved search</label>\\n    <div class=\\\"input-with-icon\\\">\\n        <svg class=\\\"iconic\\\">\\n            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#magnifying-glass\\\"></use>\\n        </svg>\\n        <input\\n            type=\\\"search\\\"\\n            ng-model=\\\"savedSearchQuery\\\"\\n            placeholder=\\\"{{ 'set.find_a_saved_search' | translate }}\\\" ng-keydown=\\\"searchSearches(savedSearchQuery)\\\"\\n        >\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n\\n    <button ng-show=\\\"loading\\\" type=\\\"button\\\" class=\\\"button button-full-width button-beta\\\">\\n        <div class=\\\"loading\\\">\\n            <div class=\\\"line\\\"></div>\\n            <div class=\\\"line\\\"></div>\\n            <div class=\\\"line\\\"></div>\\n        </div>\\n        <span class=\\\"button-label\\\" translate=\\\"app.loading\\\">Loading</span>\\n    </button>\\n\\n    <div ng-show=\\\"!loading\\\" class=\\\"listing\\\">\\n        <div class=\\\"listing-item\\\" ng-repeat=\\\"search in searches\\\">\\n            <div class=\\\"listing-item-primary\\\">\\n                <h2 class=\\\"listing-item-title\\\"><a href=\\\"#\\\" ng-click=\\\"goToSearch(search)\\\">{{search.name}}</a></h2>\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-show=\\\"!loading && searches.length === 0\\\">\\n        <span translate=\\\"app.no_results\\\">&nbsp;</span>\\n    </div>\\n       <!--  <div class=\\\"modal-actions\\\">\\n            <div class=\\\"form-field\\\">\\n                <button type=\\\"button\\\"\\n                    class=\\\"button-beta\\\"\\n                    ng-click=\\\"createNewSearch()\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                    </svg>\\n                    <span class=\\\"button-label\\\" translate=\\\"app.create_new\\\">Create new</span>\\n                </button>\\n            </div>\\n        </div> -->\\n</div>\\n\\n\";","module.exports = SavedSearchListEditorModal;\n\nSavedSearchListEditorModal.$inject = [];\nfunction SavedSearchListEditorModal() {\n    return {\n        restrict: 'E',\n        scope: {\n            searches: '='\n        },\n        controller: SavedSearchListEditorModalController,\n        template: require('./saved-search-list-editor-modal.html')\n    };\n}\n\nSavedSearchListEditorModalController.$inject = ['$scope', '$element', '$attrs', '$rootScope', '$location', '$q', 'Notify', 'UserEndpoint', 'SavedSearchEndpoint', '_', 'ModalService'];\nfunction SavedSearchListEditorModalController($scope, $element, $attrs, $rootScope, $location, $q, Notify, UserEndpoint, SavedSearchEndpoint, _, ModalService) {\n    $scope.selectedSavedSearches = [];\n    $scope.processing = false;\n    $scope.close = function () {\n        ModalService.close();\n    };\n    $scope.delete = function () {\n        if (!_.isEmpty($scope.selectedSavedSearches)) {\n            $scope.processing = true;\n            var deleteList = _.map($scope.selectedSavedSearches, function (itm) {\n                return SavedSearchEndpoint.delete({\n                    id: itm\n                }).$promise;\n            });\n            $q.all (deleteList).then(function (results) {\n                $rootScope.$broadcast('savedSearch:update');\n                _.forEach($scope.selectedSavedSearches, function (itmId) {\n                    delete $scope.searches[itmId];\n                });\n                if (deleteList.length > 1) {\n                    Notify.notify('notify.savedsearch.delete_savedsearch_plural_success');\n                } else {\n                    Notify.notify('notify.savedsearch.delete_savedsearch_success');\n                }\n                cancelLoading();\n            }, function (err) {\n                Notify.apiErrors(err);\n                cancelLoading();\n            });\n            var cancelLoading = function () {\n                $scope.processing = false;\n                ModalService.close();\n            };\n        }\n    };\n}\n","module.exports = \"<div class=\\\"form-field\\\">\\n    <label class=\\\"hidden\\\" translate=\\\"set.delete_saved_searches\\\">Delete Saved Searches</label>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"listing\\\">\\n        <div class=\\\"listing-item\\\" ng-repeat=\\\"savedSearch in searches\\\">\\n            <div class=\\\"listing-item-primary\\\">\\n                <div class=\\\"form-field checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"savedSearch\\\" checklist-model=\\\"selectedSavedSearches\\\" checklist-value=\\\"savedSearch.id\\\" name=\\\"selectedSavedSearches\\\">\\n                        {{savedSearch.name | translate}}\\n                    </label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-actions\\\">\\n        <div class=\\\"form-field\\\">\\n            <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"close()\\\" translate>modal.button.close</button>\\n            <button type=\\\"button\\\" class=\\\"button-alpha\\\" ng-show=\\\"processing\\\">\\n                <div class=\\\"loading\\\">\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                    <div class=\\\"line\\\"></div>\\n                </div>\\n                <span class=\\\"button-label\\\" translate=\\\"app.saving\\\">Saving</span>\\n            </button>\\n            <button type=\\\"submit\\\" class=\\\"button-alpha\\\" ng-class=\\\"{disabled: selectedSavedSearches.length < 1}\\\" translate ng-click=\\\"delete()\\\" ng-show=\\\"!processing\\\">app.delete</button>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = SavedSearchModeContext;\n\nSavedSearchModeContext.$inject = [];\n\nfunction SavedSearchModeContext() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '=',\n            savedSearch: '='\n        },\n        controller: SavedSearchModeContextController,\n        template: require('./mode-context.html')\n    };\n}\n\nSavedSearchModeContextController.$inject = [\n    '$scope',\n    '$translate',\n    '$state',\n    '$rootScope',\n    'NotificationEndpoint',\n    'SavedSearchEndpoint',\n    'Notify',\n    '_',\n    'ModalService',\n    'PostFilters'\n];\nfunction SavedSearchModeContextController(\n    $scope,\n    $translate,\n    $state,\n    $rootScope,\n    NotificationEndpoint,\n    SavedSearchEndpoint,\n    Notify,\n    _,\n    ModalService,\n    PostFilters\n) {\n    // Show Add Notification link\n    $scope.showNotificationLink = true;\n    $scope.canEdit = false;\n    $scope.notification = false;\n    $scope.collectionView = 'map';\n    $scope.saveNotification = saveNotification;\n    $scope.removeNotification = removeNotification;\n    $scope.editSavedSearch = editSavedSearch;\n    $scope.deleteSavedSearch = deleteSavedSearch;\n    $scope.clearFilters = clearFilters;\n\n    activate();\n\n    function activate() {\n        $scope.canEdit = canEdit($scope.savedSearch);\n\n        NotificationEndpoint.query({set: $scope.savedSearch.id, ignore403: true, user: 'me'}, function (notifications) {\n            // show link if subscription does not exist\n            $scope.showNotificationLink = notifications.length === 0;\n            if (notifications.length) {\n                $scope.notification = notifications[0];\n            }\n        }, angular.noop);\n    }\n\n    // Check if we can edit\n    function canEdit(savedSearch) {\n        return savedSearch && _.contains(savedSearch.allowed_privileges, 'update');\n    }\n\n    function editSavedSearch() {\n        ModalService.openTemplate('<saved-search-editor saved-search=\"savedSearch\"></saved-search-editor>', 'set.edit_search_settings', 'star', $scope, false, false);\n        //$rootScope.$emit('savedSearchEditor:show', $scope.collection);\n    }\n\n    function deleteSavedSearch() {\n        Notify.confirm('notify.savedsearch.delete_savedsearch_confirm').then(function () {\n            SavedSearchEndpoint.delete({\n                id: $scope.savedSearch.id\n            }).$promise.then(function () {\n                $state.go('posts.map.all');\n                $rootScope.$broadcast('savedSearch:update');\n            }, function (errorResponse) {\n                Notify.apiErrors(errorResponse);\n            });\n        });\n    }\n\n    function saveNotification(savedSearch) {\n        var notification = {set: savedSearch.id};\n\n        NotificationEndpoint.save(notification).$promise.then(function (notification) {\n            // No need to show the link after subscription\n            $scope.showNotificationLink = false;\n            $scope.notification = notification;\n            Notify.notify('notify.notification.add', {set: savedSearch.name});\n        });\n    }\n\n    function removeNotification() {\n        Notify.confirm('notify.notification.delete_confirm').then(function () {\n            NotificationEndpoint.delete($scope.notification).$promise.then(function (notification) {\n                $scope.showNotificationLink = true;\n                Notify.notify('notify.notification.destroy_notification_success', {name: notification.name});\n            });\n        });\n    }\n\n    function clearFilters() {\n        PostFilters.clearFilters();\n        PostFilters.setMode('all');\n    }\n}\n","module.exports = \"<div class=\\\"mode-context init\\\" dropdown>\\n    <header class=\\\"mode-context-header\\\">\\n        <ol class=\\\"breadcrumbs\\\" ng-controller=\\\"navigation as nav\\\">\\n            <li><a href=\\\"/\\\">{{nav.site.name}}</a></li>\\n        </ol>\\n        <h1 class=\\\"mode-context-title\\\">\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#star\\\"></use>\\n            </svg>\\n            {{savedSearch.name}}\\n        </h1>\\n    </header>\\n\\n    <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n        <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n    </span>\\n\\n    <div class=\\\"mode-context-body\\\">\\n        <!--// IF: Saved Search has description //-->\\n        <p ng-if=\\\"savedSearch.description\\\">{{savedSearch.description}}</p>\\n        <!--// END IF //-->\\n\\n        <ul class=\\\"metadata\\\">\\n            <li>\\n                <span class=\\\"status-indicator public tooltip\\\" ng-if=\\\"!savedSearch.role\\\">\\n                    <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\"></use>\\n                    </svg>\\n                    <span class=\\\"bug\\\" translate=\\\"saved_search.visible_to_public\\\">This saved search is visible to the public</span>\\n                </span>\\n                <span class=\\\"status-indicator yellow tooltip\\\" ng-if=\\\"savedSearch.role\\\">\\n                    <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\"></use>\\n                    </svg>\\n                    <span class=\\\"bug\\\" translate=\\\"saved_search.visible_to_roles\\\" translate-values=\\\"{ roles: savedSearch.role.join(', ') }\\\">This saved search is visible to ...</span>\\n                </span>\\n            </li>\\n            <li>\\n                <span ng-if=\\\"savedSearch.user\\\">\\n                    <span translate='app.created_by' translate-values=\\\"{ author : savedSearch.user.realname }\\\">Created by</span>\\n                </span>\\n            </li>\\n        </ul>\\n\\n        <!--// IF: User has permission to edit the Saved Search //-->\\n        <div class=\\\"form-field\\\" ng-if=\\\"canEdit\\\" dropdown>\\n            <button type=\\\"button\\\" data-modal=\\\"edit-savedSearch\\\" ng-click=\\\"editSavedSearch()\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#pencil\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label\\\" translate>app.edit</span>\\n            </button>\\n\\n            <button type=\\\"button\\\" data-toggle=\\\"dropdown-menu\\\" class=\\\"init\\\" dropdown-toggle>\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#ellipses\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label hidden\\\" translate>app.more</span>\\n            </button>\\n            <ul class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                <li ng-if=\\\"showNotificationLink\\\">\\n                    <a ng-click=\\\"saveNotification(savedSearch)\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#bell\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" ng-click=\\\"saveNotification(savedSearch)\\\" translate=\\\"app.get_notifications\\\">Get notifications</span>\\n                    </a>\\n                </li>\\n                <li ng-if=\\\"!showNotificationLink\\\">\\n                    <a ng-click=\\\"removeNotification(savedSearch)\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#bell\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" translate=\\\"app.turn_off_notifications\\\">Turn off notifications</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a ng-click=\\\"deleteSavedSearch()\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" translate=\\\"app.delete\\\"></span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </div>\\n        <!--// END IF //-->\\n\\n        <!--// IF: User does not have permission to edit the Saved Search //-->\\n        <div class=\\\"form-field\\\" ng-if=\\\"!canEdit && $root.loggedin\\\">\\n            <!-- // IF: User is not yet getting notifications about this Saved Search //-->\\n            <button type=\\\"button\\\" ng-if=\\\"showNotificationLink\\\" ng-click=\\\"saveNotification(savedSearch)\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#bell\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label\\\" translate=\\\"app.get_notifications\\\">Get notifications</span>\\n            </button>\\n\\n            <!--// ELSE //-->\\n\\n            <button type=\\\"button\\\" ng-if=\\\"!showNotificationLink\\\" class=\\\"button-flat\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#bell\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label\\\" translate=\\\"app.turn_off_notifications\\\">Turn off notifications</span>\\n            </button>\\n            <!--// END IF //-->\\n        </div>\\n        <!--// END IF //-->\\n        <div class=\\\"form-field\\\">\\n            <!-- mode context is only available in the map so we are always sending you back to it in the return to all posts feature -->\\n            <a ng-click=\\\"clearFilters()\\\" type=\\\"button\\\" class=\\\"button-link\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#arrow-left\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label\\\" translate=\\\"app.return_to_all_posts\\\">Return to all posts</span>\\n            </a>\\n        </div>\\n\\n        <mode-context-form-filter></mode-context-form-filter>\\n        <!-- <saved-search-update></saved-search-update> -->\\n\\n    </div>\\n</div>\\n\";","module.exports = CollectionsService;\n\nCollectionsService.$inject = ['ModalService', 'Notify', '$location', 'CollectionEndpoint'];\nfunction CollectionsService(ModalService, Notify, $location, CollectionEndpoint) {\n    return {\n        showCollectionList: showCollectionList,\n        showAddToCollection: showAddToCollection,\n        editCollection: editCollection,\n        createCollection: createCollection,\n        deleteCollection: deleteCollection\n    };\n\n    function showCollectionList() {\n        ModalService.openTemplate('<collection-listing toggle-mode=\"false\"></collection-listing>', 'app.collections', 'grid-three-up', false, true, true);\n    }\n\n    function showAddToCollection(posts) {\n        var scope = {\n            posts: posts\n        };\n\n        ModalService.openTemplate('<collection-listing toggle-mode=\"true\" posts=\"posts\"></collection-listing>', 'app.edit_collection', 'grid-three-up', scope, true, true);\n    }\n\n    function editCollection(collection) {\n        var scope = {\n            collection: collection\n        };\n\n        ModalService.openTemplate('<collection-editor collection=\"collection\"></collection-editor>', 'app.edit_collection', 'grid-three-up', scope, false, false);\n    }\n\n    function createCollection(posts) {\n        var scope = {\n            posts: posts\n        };\n\n        ModalService.openTemplate('<collection-editor posts=\"posts\"></collection-editor>', 'app.create_collection', 'grid-three-up', scope, false, false);\n    }\n\n    function deleteCollection(collection) {\n        Notify.confirm('notify.collection.delete_collection_confirm').then(function () {\n            CollectionEndpoint.delete({\n                collectionId: collection.id\n            }).$promise.then(function () {\n                $location.url('/');\n            }, function (errorResponse) {\n                Notify.apiErrors(errorResponse);\n            });\n        });\n    }\n}\n","module.exports = CollectionModeContext;\n\nCollectionModeContext.$inject = [];\n\nfunction CollectionModeContext() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '=',\n            collection: '='\n        },\n        controller: CollectionModeContextController,\n        template: require('./mode-context.html')\n    };\n}\n\nCollectionModeContextController.$inject = [\n    '$scope',\n    '$rootScope',\n    '$translate',\n    '$state',\n    'NotificationEndpoint',\n    'CollectionEndpoint',\n    'Notify',\n    '_',\n    'CollectionsService',\n    'PostFilters'\n];\nfunction CollectionModeContextController(\n    $scope,\n    $rootScope,\n    $translate,\n    $state,\n    NotificationEndpoint,\n    CollectionEndpoint,\n    Notify,\n    _,\n    CollectionsService,\n    PostFilters\n) {\n    $scope.editCollection = editCollection;\n    $scope.deleteCollection = deleteCollection;\n    $scope.saveNotification = saveNotification;\n    $scope.removeNotification = removeNotification;\n    $scope.clearFilters = clearFilters;\n\n    // Show Add Notification link\n    $scope.showNotificationLink = true;\n    $scope.canEdit = false;\n    $scope.notification = false;\n\n    activate();\n\n    function activate() {\n        $scope.canEdit = canEdit($scope.collection);\n\n        NotificationEndpoint.query({set: $scope.collection.id, ignore403: true, user: 'me'}, function (notifications) {\n            // show link if subscription does not exist\n            $scope.showNotificationLink = notifications.length === 0;\n            if (notifications.length) {\n                $scope.notification = notifications[0];\n            }\n        }, angular.noop);\n    }\n\n    function canEdit(collection) {\n        return collection && _.contains(collection.allowed_privileges, 'update');\n    }\n\n    function editCollection() {\n        CollectionsService.editCollection($scope.collection);\n    }\n\n    function deleteCollection() {\n        CollectionsService.deleteCollection($scope.collection);\n    }\n\n    function saveNotification(collection) {\n        var notification = {set: collection.id};\n        NotificationEndpoint.save(notification).$promise.then(function (notification) {\n            // No need to show the link after subscription\n            $scope.showNotificationLink = false;\n            $scope.notification = notification;\n            Notify.notify('notify.notification.add', {set: collection.name});\n        });\n    }\n\n    function removeNotification() {\n        Notify.confirm('notify.notification.delete_confirm').then(function () {\n            NotificationEndpoint.delete($scope.notification).$promise.then(function (notification) {\n                $scope.showNotificationLink = true;\n                Notify.notify('notify.notification.destroy_notification_success', {name: notification.name});\n            });\n        });\n    }\n\n    function clearFilters() {\n        PostFilters.clearFilters();\n        PostFilters.setMode('all');\n    }\n}\n","module.exports = \"<div class=\\\"mode-context init\\\" dropdown>\\n    <header class=\\\"mode-context-header\\\">\\n        <ol class=\\\"breadcrumbs\\\" ng-controller=\\\"navigation as nav\\\">\\n            <li><a href=\\\"/\\\">{{ nav.site.name }}</a></li>\\n        </ol>\\n        <h1 class=\\\"mode-context-title\\\">\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#grid-three-up\\\"></use>\\n            </svg>\\n            {{collection.name}}\\n        </h1>\\n    </header>\\n\\n    <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n        <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n    </span>\\n\\n    <div class=\\\"mode-context-body\\\">\\n        <!--// IF: Saved Search has description //-->\\n        <p ng-if=\\\"collection.description\\\">{{collection.description}}</p>\\n        <!--// END IF //-->\\n\\n        <ul class=\\\"metadata\\\">\\n            <li>\\n                <span class=\\\"status-indicator public tooltip\\\" ng-if=\\\"!collection.role || collection.role.length == 0\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\"></use>\\n                    </svg>\\n                    <span class=\\\"bug\\\" translate=\\\"collection.visible_to_public\\\">This Collection is visible to the public</span>\\n                </span>\\n                <span class=\\\"status-indicator yellow tooltip\\\" ng-if=\\\"collection.role.length > 0\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\"></use>\\n                    </svg>\\n                    <span class=\\\"bug\\\" translate=\\\"collection.visible_to_roles\\\" translate-values=\\\"{ roles: collection.role.join(', ') }\\\">This Collection is visible to ...</span>\\n                </span>\\n            </li>\\n            <li>\\n                <span ng-if=\\\"collection.user\\\">\\n                    <span translate='app.created_by' translate-values=\\\"{ author : collection.user.realname }\\\">Created by</span>\\n                </span>\\n            </li>\\n        </ul>\\n\\n        <!--// IF: User has permission to edit the Saved Search //-->\\n        <div class=\\\"form-field\\\" ng-if=\\\"canEdit\\\" dropdown>\\n            <button type=\\\"button\\\" data-modal=\\\"edit-collection\\\" ng-click=\\\"editCollection()\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#pencil\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label\\\" translate>app.edit</span>\\n            </button>\\n\\n            <button type=\\\"button\\\" data-toggle=\\\"dropdown-menu\\\" class=\\\"init\\\" dropdown-toggle>\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#ellipses\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label hidden\\\" translate>app.more</span>\\n            </button>\\n            <ul class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                <li ng-if=\\\"showNotificationLink\\\">\\n                    <a ng-click=\\\"saveNotification(collection)\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#bell\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" ng-click=\\\"saveNotification(collection)\\\" translate=\\\"app.get_notifications\\\">Get notifications</span>\\n                    </a>\\n                </li>\\n                <li ng-if=\\\"!showNotificationLink\\\">\\n                    <a ng-click=\\\"removeNotification(collection)\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#bell\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" translate=\\\"app.turn_off_notifications\\\">Turn off notifications</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a ng-click=\\\"deleteCollection()\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" translate=\\\"app.delete\\\"></span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </div>\\n        <!--// END IF //-->\\n\\n        <!--// IF: User does not have permission to edit the Saved Search //-->\\n        <div class=\\\"form-field\\\" ng-if=\\\"!canEdit && $root.loggedin\\\">\\n            <!-- // IF: User is not yet getting notifications about this Saved Search //-->\\n            <button type=\\\"button\\\" ng-if=\\\"showNotificationLink\\\" ng-click=\\\"saveNotification(collection)\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#bell\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label\\\" translate=\\\"app.get_notifications\\\">Get notifications</span>\\n            </button>\\n\\n            <!--// ELSE //-->\\n\\n            <button type=\\\"button\\\" ng-if=\\\"!showNotificationLink\\\" class=\\\"button-flat\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#bell\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label\\\" translate=\\\"app.turn_off_notifications\\\">Turn off notifications</span>\\n            </button>\\n            <!--// END IF //-->\\n        </div>\\n        <!--// END IF //-->\\n        <div class=\\\"form-field\\\">\\n            <!-- mode context bar is only available in the map so it should take you back there -->\\n            <a ng-click=\\\"clearFilters()\\\" type=\\\"button\\\" class=\\\"button-link\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#arrow-left\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label\\\" translate=\\\"app.return_to_all_posts\\\">Return to all posts</span>\\n            </a>\\n        </div>\\n\\n        <mode-context-form-filter></mode-context-form-filter>\\n\\n    </div>\\n</div>\\n\";","module.exports = CollectionEditor;\n\nCollectionEditor.$inject = [];\nfunction CollectionEditor() {\n    return {\n        restrict: 'E',\n        scope: {\n            collection: '<',\n            posts: '='\n        },\n        controller: CollectionEditorController,\n        template: require('./editor.html')\n    };\n}\n\nCollectionEditorController.$inject = [\n    '$scope',\n    '$q',\n    '$location',\n    '$translate',\n    '$rootScope',\n    'CollectionEndpoint',\n    '_',\n    'Notify',\n    'ViewHelper',\n    'RoleEndpoint',\n    'CollectionsService'\n];\nfunction CollectionEditorController(\n    $scope,\n    $q,\n    $location,\n    $translate,\n    $rootScope,\n    CollectionEndpoint,\n    _,\n    Notify,\n    ViewHelper,\n    RoleEndpoint,\n    CollectionsService\n) {\n    $scope.isAdmin = $rootScope.isAdmin;\n    $scope.views = ViewHelper.views();\n\n    $scope.featuredEnabled = featuredEnabled;\n    $scope.cancel = cancel;\n    $scope.saveCollection = saveCollection;\n\n    activate();\n\n    function activate() {\n        if (!$scope.collection) {\n            setBasicCollection();\n        } else {\n            $scope.cpyCollection = angular.copy($scope.collection);\n        }\n\n        RoleEndpoint.query().$promise.then(function (roles) {\n            $scope.roles = roles;\n        });\n    }\n\n    // Set default view for Collection to be Map\n    function setBasicCollection() {\n        $scope.cpyCollection = {};\n        $scope.cpyCollection.view = 'map';\n        $scope.cpyCollection.role = [];\n    }\n\n    function featuredEnabled() {\n        return $rootScope.hasPermission('Manage Posts');\n    }\n\n    function cancel() {\n        $scope.$parent.closeModal();\n    }\n\n    function saveCollection(collection) {\n        // Are we creating or updating?\n        var persist = collection.id ? CollectionEndpoint.update : CollectionEndpoint.save;\n        if (!collection.id) {\n            // @TODO Prevent the user from creating one if they somehow manage to get to this point without being logged in\n            collection.user_id = $rootScope.currentUser ? $rootScope.currentUser.userId : null;\n        }\n        // Collection endpoint uses collectionId so make sure thats set\n        collection.collectionId = collection.id;\n\n        // Save the collection\n        persist(collection)\n        .$promise\n        .then(function (savedCollection) {\n            $scope.collection = angular.copy(savedCollection);\n            // and close the modal\n            $scope.$parent.closeModal();\n            // If we were adding posts, show the add to collection dialog again\n            if ($scope.posts) {\n                CollectionsService.showAddToCollection($scope.posts);\n            } else {\n                // Broadcast the updated collection\n                $rootScope.$broadcast('collection:update', savedCollection);\n            }\n            Notify.notify(collection.id ? 'notify.collection.updated_collection' : 'notify.collection.created_collection', { collection: savedCollection.name });\n        }, function (errorResponse) {\n            Notify.apiErrors(errorResponse);\n        });\n    }\n}\n","module.exports = \"<div class=\\\"modal-body\\\">\\n    <div class=\\\"form-field title\\\">\\n        <label translate>set.collection_name</label>\\n        <input type=\\\"text\\\" ng-model=\\\"cpyCollection.name\\\" placeholder=\\\"{{'set.name_your_collection'|translate}}\\\">\\n    </div>\\n\\n    <div class=\\\"form-field\\\">\\n        <label translate>\\n            set.description\\n        </label>\\n        <textarea ng-model=\\\"cpyCollection.description\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"form-field switch\\\" ng-if=\\\"featuredEnabled()\\\">\\n        <label>\\n            <span translate>\\n                set.featured\\n            </span>\\n            <span class=\\\"tooltip\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#question-mark\\\"></use>\\n                </svg>\\n                <span class=\\\"bug\\\" translate>set.featured_collection_tooltip</span>\\n            </span>\\n        </label>\\n        <div class=\\\"toggle-switch\\\">\\n            <input class=\\\"tgl\\\" id=\\\"switch1\\\" type=\\\"checkbox\\\" ng-model=\\\"cpyCollection.featured\\\">\\n            <label class=\\\"tgl-btn\\\" for=\\\"switch1\\\"></label>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-field\\\">\\n        <label translate>set.default_viewing_mode</label>\\n        <div class=\\\"custom-select\\\">\\n            <select ng-options=\\\"view.name as view.display_name for view in views\\\" ng-model=\\\"cpyCollection.view\\\">\\n            </select>\\n        </div>\\n    </div>\\n    <!-- Who can see -->\\n    <role-selector model=\\\"cpyCollection\\\" title=\\\"'app.who_can_see_this'\\\"></role-selector>\\n\\n    <div class=\\\"modal-actions\\\">\\n        <div class=\\\"form-field\\\">\\n            <button type=\\\"button\\\" class=\\\"button-link  modal-trigger\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n            <button type=\\\"button\\\" class=\\\"button-alpha modal-trigger\\\" ng-click=\\\"saveCollection(cpyCollection)\\\" translate>app.save_and_close</button>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = CollectionListing;\n\nCollectionListing.$inject = [];\n\nfunction CollectionListing() {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            'isToggleMode': '<toggleMode',\n            'posts': '='\n        },\n        controller: CollectionListingController,\n        template: require('./listing.html')\n    };\n}\n\nCollectionListingController.$inject = [\n    '$rootScope',\n    '$scope',\n    '$translate',\n    '$location',\n    '$q',\n    'Notify',\n    'CollectionEndpoint',\n    '_',\n    'CollectionsService',\n    '$state'\n];\nfunction CollectionListingController(\n    $rootScope,\n    $scope,\n    $translate,\n    $location,\n    $q,\n    Notify,\n    CollectionEndpoint,\n    _,\n    CollectionsService,\n    $state\n) {\n\n    $scope.postInCollection = postInCollection;\n    $scope.toggleCollection = toggleCollection;\n    $scope.addToPostsSet = addToPostsSet;\n    $scope.collectionClickHandler = collectionClickHandler;\n    $scope.createNewCollection = createNewCollection;\n    $scope.searchCollections = loadCollections;\n    $scope.currentUser = $rootScope.currentUser;\n\n    activate();\n\n    function activate() {\n        loadCollections();\n    }\n\n    function loadCollections(collectionQuery) {\n        if ($scope.isToggleMode) {\n            $scope.collections = CollectionEndpoint.editableByMe({ q: collectionQuery });\n        } else {\n            $scope.collections = CollectionEndpoint.query({ q: collectionQuery });\n        }\n    }\n\n    function postInCollection(collection) {\n        // If we are dealing with a single model we want to mark\n        // all collections it exists in as checked\n        // If we are dealing with multiple posts the user\n        // does not have the option to remove posts from collections only to add\n\n        // TODO figure out to set newly created checkbox checked once it's been addToCollection\n        return $scope.posts.length === 1 ? _.contains($scope.posts[0].sets, String(collection.id)) : false;\n    }\n\n    // Update post set with collection(s) it has been added to\n    function addToPostsSet(collectionId) {\n        _.each($scope.posts, function (post) {\n            post.sets.push(collectionId);\n        });\n    }\n\n    // Add the post(s) to a given collection\n    function addToCollection(selectedCollection) {\n        var collectionId = selectedCollection.id, collection = selectedCollection.name;\n        var calls = [];\n        // Create collection update calls for all posts\n        // TODO: allow many to one update for posts to collection\n        // on api\n        _.each($scope.posts, function (post) {\n            calls.push(\n                CollectionEndpoint.addPost({'collectionId': collectionId, 'id': post.id})\n            );\n        });\n        $q.all(calls)\n            .then(function () {\n                // Update the posts sets\n                $scope.addToPostsSet(String(collectionId));\n                Notify.notify('notify.collection.add_to_collection', {collection: collection});\n            }, function (errorResponse) {\n                Notify.apiErrors(errorResponse);\n            });\n    }\n\n    // Remove post(s) from a given collection\n    function removeFromCollection(selectedCollection) {\n        var collectionId = selectedCollection.id, collection = selectedCollection.name;\n        var calls = [];\n        _.each($scope.posts, function (post) {\n            calls.push(\n                CollectionEndpoint.removePost({'collectionId': collectionId, 'id': post.id})\n            );\n        });\n        $q.all(calls)\n        .then(function () {\n            _.each($scope.posts, function (post) {\n                post.sets = _.without(post.sets, String(collectionId));\n            });\n            Notify.notify('notify.collection.removed_from_collection', {collection: collection});\n        }, function (errorResponse) {\n            Notify.apiErrors(errorResponse);\n        });\n    }\n\n    // Handle behaviour of the collection listing item click\n    // In Listing mode: a click will take the user to the collections page\n    // In Toggle mode: a click will select a given collection\n    function collectionClickHandler(collection) {\n        $scope.isToggleMode ? toggleCollection(collection) : goToCollection(collection);\n    }\n\n    // This feature is only available in Lisiting mode\n    // When a user clicks on a collection lisiting item\n    // they will be directed to the collection page\n    function goToCollection(collection) {\n        $scope.$parent.closeModal();\n        var viewParam = collection.view !== 'map' ? 'data' : 'map';\n        $state.go(`posts.${viewParam}.collection`, {collectionId: collection.id}, {reload: true});\n    }\n\n    // Toggle a post as selected or not\n    // This behaviour is specific to the Toggle mode of collection listing\n    // It allows a user to select a collection by clicking on the whole row\n    function toggleCollection(selectedCollection) {\n        // If we are dealing with a single post the user can add and remove from collection\n        // For mass updates of many post the user is only permitted to add to collection\n        if ($scope.posts.length === 1) {\n            if (_.contains($scope.posts[0].sets, String(selectedCollection.id))) {\n                removeFromCollection(selectedCollection);\n            } else {\n                addToCollection(selectedCollection);\n            }\n        } else {\n            addToCollection(selectedCollection);\n        }\n    }\n\n    // This function passes flow control to the Collection Creation modal\n    // In Toggle mode: we expect the creation editor to return control to the Listing directive\n    // In the toggleMode we attach the post(s) to the event, collectionEditor will return this post(s)\n    // after the creation, along with the newly created collection\n    function createNewCollection() {\n        $scope.$parent.closeModal();\n        CollectionsService.createCollection($scope.posts);\n    }\n}\n","module.exports = \"<div>\\n    <div class=\\\"modal-body\\\" style=\\\"max-height: 337.26px;\\\">\\n        <div class=\\\"form-field search\\\">\\n            <label class=\\\"hidden\\\" translate>set.find_a_collection</label>\\n            <div class=\\\"input-with-icon\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#magnifying-glass\\\"></use>\\n                </svg>\\n                <form ng-submit=\\\"searchCollections(collectionQuery)\\\">\\n                    <input name=\\\"collectionQuery\\\" ng-model=\\\"collectionQuery\\\" type=\\\"search\\\" placeholder=\\\"{{ 'set.find_a_collection' | translate}}\\\">\\n                </form>\\n            </div>\\n        </div>\\n        <div class=\\\"listing init\\\">\\n\\n            <div class=\\\"listing-item\\\" ng-repeat=\\\"collection in collections\\\">\\n                <div class=\\\"listing-item-select\\\" ng-if=\\\"isToggleMode\\\">\\n                    <input\\n                        type=\\\"checkbox\\\"\\n                        ng-checked=\\\"postInCollection(collection)\\\"\\n                        ng-click=\\\"toggleCollection(collection)\\\">\\n                </div>\\n                <div class=\\\"listing-item-primary\\\">\\n                    <h2 class=\\\"listing-item-title\\\">\\n                        <a ng-click=\\\"collectionClickHandler(collection)\\\">\\n                            {{collection.name}}\\n                        </a>\\n                    </h2>\\n                    <p class=\\\"listing-item-secondary\\\" ng-if=\\\"collection.user_id\\\">\\n                        <span translate>\\n                            app.by\\n                        </span>\\n                        <a ng-href=\\\"/users/{{collection.user_id}}\\\">\\n                            {{collection.user_id}}\\n                        </a>\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"modal-actions\\\" ng-if=\\\"currentUser\\\">\\n        <div class=\\\"form-field\\\">\\n            <button type=\\\"button\\\" class=\\\"button-beta\\\" ng-click=\\\"createNewCollection()\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label\\\" translate>app.create_new</span>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = [\n    '$rootScope',\n    '_',\n    'CollectionsService',\nfunction (\n    $rootScope,\n    _,\n    CollectionsService\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            posts: '=',\n            selectedPosts: '=',\n            onDone: '&'\n        },\n        link: function ($scope, $element, $attrs, ngModel) {\n            $scope.toggleCollection = function () {\n                // Reduce set of post of objects to only those currently selected\n                var selectedPostObjects = _.filter($scope.posts, function (post) {\n                    return _.contains($scope.selectedPosts, post.id);\n                });\n\n                CollectionsService.showAddToCollection(selectedPostObjects);\n                // Trigger done handler (clear selected posts)\n                $scope.onDone();\n            };\n        },\n        template: require('./collection-toggle-button.html')\n    };\n}];\n","module.exports = \"<button type=\\\"button\\\" class=\\\"button-beta\\\" data-modal=\\\"add-to-collection\\\" ng-click=\\\"toggleCollection()\\\">\\n    <svg class=\\\"iconic\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#grid-three-up\\\"></use>\\n    </svg>\\n    <span class=\\\"button-label hidden\\\" translate=\\\"set.add_to_collection\\\">Add to collection</span>\\n</button>\\n\";","module.exports = [\n    '$rootScope',\n    'CollectionsService',\nfunction (\n    $rootScope,\n    CollectionsService\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            post: '='\n        },\n        link: function ($scope, $element, $attrs, ngModel) {\n            $scope.toggleCollection = function () {\n                // Collection toggle expects an array of posts\n                CollectionsService.showAddToCollection([$scope.post]);\n            };\n        },\n        template: require('./collection-toggle-link.html')\n    };\n}];\n","module.exports = \"<a data-modal=\\\"add-to-collection\\\" ng-click=\\\"toggleCollection()\\\">\\n    <svg class=\\\"iconic\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#grid-three-up\\\"></use>\\n    </svg>\\n    <span class=\\\"label\\\"translate=\\\"set.add_to_collection\\\">Add to collection</span>\\n</a>\\n\";","module.exports = [\n    '$stateProvider',\n    '$urlMatcherFactoryProvider',\nfunction (\n    $stateProvider,\n    $urlMatcherFactoryProvider\n) {\n    $urlMatcherFactoryProvider.strictMode(false);\n\n    let resolveCollection = ['$transition$', 'CollectionEndpoint', 'PostFilters', function ($transition$, CollectionEndpoint, PostFilters) {\n        if ($transition$.params().collectionId) {\n            return CollectionEndpoint.get({collectionId: $transition$.params().collectionId}).$promise;\n        } else if (PostFilters.getMode() === 'collection') {\n            return PostFilters.getModeEntity('collection');\n        }\n    }];\n\n    let resolveSavedSearch = ['$transition$', 'SavedSearchEndpoint', 'PostFilters', function ($transition$, SavedSearchEndpoint, PostFilters) {\n        if ($transition$.params().savedSearchId) {\n            return SavedSearchEndpoint.get({id: $transition$.params().savedSearchId}).$promise;\n        } else if (PostFilters.getMode() === 'savedsearch') {\n            return PostFilters.getModeEntity('savedsearch');\n        }\n    }];\n\n    $stateProvider\n    .state(\n        {\n            name: 'posts',\n            abstract: true,\n            params: {\n                filterState: {value: null, squash: true}\n            },\n            resolve: {\n                collection: resolveCollection,\n                savedSearch: resolveSavedSearch,\n                filters: ['PostFilters', (PostFilters) => {\n                    return PostFilters.getFilters();\n                }]\n            },\n            onEnter: ['$transition$', 'PostFilters', function ($transition$, PostFilters) {\n                if ($transition$.params().filterState) {\n                    PostFilters.setFilters($transition$.params().filterState);\n                }\n            }]\n        }\n    )\n    .state(\n        {\n            url: '^/savedsearches/{savedSearchId:int}',\n            name: 'posts.savedsearchRedirector',\n            resolve: {\n                savedSearch: resolveSavedSearch\n            },\n            onEnter: ['$state', 'savedSearch', function ($state, savedSearch) {\n                if (savedSearch.view === 'data' || savedSearch.view === 'list') {\n                    $state.go('posts.data', {savedSearchId: savedSearch.id});\n                } else {\n                    $state.go('posts.map.all', {savedSearchId: savedSearch.id});\n                }\n            }]\n        }\n    )\n    .state(\n        {\n            url: '^/collections/{collectionId:int}',\n            name: 'posts.collectionRedirector',\n            resolve: {\n                collection: resolveCollection\n            },\n            onEnter: ['$state', 'collection', function ($state, collection) {\n                if (collection.view === 'data' || collection.view === 'list') {\n                    $state.go('posts.data.collection', {collectionId: collection.id});\n                } else {\n                    $state.go('posts.map.collection', {collectionId: collection.id});\n                }\n            }]\n        }\n    )\n    .state(\n        {\n            url: '/views/data',\n            name: 'posts.data',\n            params: {\n                filterState: {value: null, squash: true},\n                activeCol: {value: 'timeline', squash: true}\n            },\n            component: 'postViewData',\n            resolve: {\n                /**\n                 * This is enabling the feature of loading with a selectedPost \"selected\" in the data mode left side.\n                 * Nothing happens if there no postId except for not having a selectedPost.\n                  */\n                post: ['$transition$', 'PostEndpoint', function ($transition$, PostEndpoint) {\n                    if ($transition$.params().postId) {\n                        return PostEndpoint.get({ id: $transition$.params().postId }).$promise;\n                    }\n                }]\n            },\n            onEnter: ['$state', 'PostFilters', 'post', function ($state, PostFilters, post) {\n                if (!post) {\n                    if (PostFilters.getMode() === 'savedsearch') {\n                        $state.go('posts.data.savedsearch', {savedSearchId: PostFilters.getModeId()});\n                    } else if (PostFilters.getMode() === 'collection') {\n                        $state.go('posts.data.collection', {collectionId: PostFilters.getModeId()});\n                    }\n                }\n            }]\n        }\n    )\n\n    /**\n     * @uirouter-refactor\n     * we need to  be able to set mode-context as collectionModeContext or as savedSearchModeContext\n     * without the route since the user would land in /views/map after the redirect\n     */\n    .state(\n        {\n            url: '^/savedsearches/{savedSearchId:int}/data',\n            name: 'posts.data.savedsearch',\n            params: {\n                activeCol: {value: 'timeline', squash: true}\n            },\n            resolve: {\n                savedSearch: resolveSavedSearch\n            },\n            onEnter: ['PostFilters', '$state', 'savedSearch', function (PostFilters, $state, savedSearch) {\n                /**\n                 * we need to make sure that we don't replace the postfilter values\n                 * if we have an entity id already set in the PostFilters service.\n                 * So if we have a saved search but it's not yet set in the modeState inside PostFilters,\n                 * we want to replace everything (since it means the user is either fresh loading or changed saved searches)\n                 * but in other scenarios we need keep our filters in postfilters as they are.\n                 * Q: What happens if we just replace PostFilters.setFilters(savedSearch.filter); all the time?\n                 * A: You won't retain filters as you move around the app, which is terrible usability.\n                 */\n                if (savedSearch && PostFilters.getModeId() !== savedSearch.id) {\n                    PostFilters.setMode('savedsearch', savedSearch);\n                    PostFilters.setFilters(savedSearch.filter);\n                }\n            }]\n        }\n    )\n    .state(\n        {\n            url: '^/collections/{collectionId:int}/data',\n            name: 'posts.data.collection',\n            onEnter: ['$state', 'PostFilters', 'collection', function ($state, PostFilters, collection) {\n                PostFilters.setMode('collection', collection);\n            }],\n            params: {\n                activeCol: {value: 'timeline', squash: true}\n            },\n            resolve: {\n                collection: resolveCollection\n            }\n        }\n    )\n    .state(\n        {\n            name: 'posts.map',\n            abstract: true,\n            component: 'postViewMap',\n            params: {\n                filterState: {value: null, squash: true}\n            }\n        }\n    )\n    .state(\n        {\n            url: '/views/map',\n            name: 'posts.map.all',\n            views: {\n                'mode-context': 'modeContext'\n            },\n            onEnter: ['$state', 'PostFilters', function ($state, PostFilters) {\n                if (PostFilters.getMode() === 'savedsearch') {\n                    $state.go('posts.map.savedsearch', {savedSearchId: PostFilters.getModeId()});\n                } else if (PostFilters.getMode() === 'collection') {\n                    $state.go('posts.map.collection', {collectionId: PostFilters.getModeId()});\n                }\n            }]\n        }\n    )\n    .state(\n        {\n            url: '^/savedsearches/{savedSearchId:int}/map',\n            name: 'posts.map.savedsearch',\n            views: {\n                'mode-context': 'savedSearchModeContext'\n            },\n            onEnter: ['$state', 'PostFilters', 'savedSearch', function ($state, PostFilters, savedSearch) {\n                /**\n                 * we need to make sure that we don't replace the postfilter values\n                 * if we have an entity id already set in the PostFilters service.\n                 * So if we have a saved search but it's not yet set in the modeState inside PostFilters,\n                 * we want to replace everything (since it means the user is either fresh loading or changed saved searches)\n                 * but in other scenarios we need keep our filters in postfilters as they are.\n                 * Q: What happens if we just replace PostFilters.setFilters(savedSearch.filter); all the time?\n                 * A: You won't retain filters as you move around the app, which is terrible usability.\n                 */\n                if (savedSearch && PostFilters.getModeId() !== savedSearch.id) {\n                    PostFilters.setMode('savedsearch', savedSearch);\n                    PostFilters.setFilters(savedSearch.filter);\n                }\n            }],\n            resolve: {\n                savedSearch: resolveSavedSearch\n            }\n        }\n    )\n    /**\n     * @uirouter-refactor\n     * we need to  be able to set mode-context as collectionModeContext or as savedSearchModeContext\n     * without the route since the user would land in /views/map after the redirect\n     */\n        .state(\n        {\n            url: '^/collections/{collectionId:int}/map',\n            name: 'posts.map.collection',\n            views: {\n                'mode-context': 'collectionModeContext'\n            },\n            onEnter: ['$state', 'PostFilters', 'collection', function ($state, PostFilters, collection) {\n                PostFilters.setMode('collection', collection);\n            }],\n            resolve: {\n                collection: resolveCollection\n            }\n        }\n    )\n    .state(\n        {\n            name: 'posts.data.detail',\n            url: '^/posts/:postId',\n            component: 'postDetailData',\n            params: {\n                activeCol: {value: 'post', squash: true}\n            },\n            resolve: {\n                //change to selectedPost and refactor the selectedposts in general\n                post: ['$transition$', 'PostEndpoint', function ($transition$, PostEndpoint) {\n                    return PostEndpoint.get({ id: $transition$.params().postId }).$promise;\n                }]\n            }\n        }\n    )\n    .state(\n        {\n            name: 'posts.data.edit',\n            url: '^/posts/:postId/edit',\n            component: 'postDataEditor',\n            params: {\n                activeCol: {value: 'post', squash: true}\n            },\n            resolve: {\n                //change to selectedPost and refactor the selectedposts in general\n                post: ['$transition$', 'PostEndpoint', function ($transition$, PostEndpoint) {\n                    return PostEndpoint.get({ id: $transition$.params().postId }).$promise;\n                }]\n            }\n        }\n    )\n    .state(\n        {\n            name: 'posts.noui',\n            url: '/map/noui',\n            controller: require('./views/post-view-noui.controller.js'),\n            template: require('./views/post-view-noui.html'),\n            params: {\n                view: {value: 'noui', squash: true}\n            }\n        }\n    )\n    .state(\n        {\n            name: 'postCreate',\n            url: '/posts/create/:id',\n            controller: require('./modify/post-create.controller.js'),\n            template: require('./modify/main.html')\n        }\n    )\n    // .state(\n    //     {\n    //         name: 'postEdit',\n    //         url: '/posts/:id/edit',\n    //         controller: require('./modify/post-edit.controller.js'),\n    //         template: require('./modify/main.html')\n    //     }\n    // )\n    ;\n\n}];\n","module.exports = PostViewNouiController;\n\nPostViewNouiController.$inject = ['$scope', '$rootScope', '$translate', '$transition$', 'PostFilters'];\nfunction PostViewNouiController($scope, $rootScope, $translate, $transition$, PostFilters) {\n    $rootScope.setLayout('layout-embed');\n    $scope.filters = PostFilters.getFilters();\n    $scope.$emit('event:allposts:show');\n}\n","module.exports = \"<main role=\\\"main\\\">\\n    <post-view-map noui=true filters=\\\"filters\\\" is-loading=\\\"{state:true}\\\"></post-view-map>\\n    <ush-logo></ush-logo>\\n</main>\";","module.exports = [\n    '$scope',\n    '$translate',\n    '$location',\n    '$controller',\n    '$transition$',\n    'PostEntity',\n    'PostEndpoint',\n    'FormEndpoint',\nfunction (\n    $scope,\n    $translate,\n    $location,\n    $controller,\n    $transition$,\n    postEntity,\n    PostEndpoint,\n    FormEndpoint\n) {\n    $translate('post.create_post').then(function (title) {\n        $scope.title = title;\n        $scope.$emit('setPageTitle', title);\n    });\n\n    $scope.post = postEntity();\n\n    PostEndpoint.options().$promise.then(function (options) {\n        $scope.post.allowed_privileges = options.allowed_privileges;\n    });\n\n    FormEndpoint.getFresh({ id: $transition$.params().id }).$promise.then(function (form) {\n        $scope.form = form;\n    });\n}];\n","module.exports = \"<post-editor post=\\\"post\\\" form=\\\"form\\\" ng-if=\\\"form.id\\\"></post-editor>\\n\";","angular.module('ushahidi.activity', [])\n\n.config(require('./activity-routes.js'))\n\n.directive('activityTimeline', require('./activity-timeline.directive.js'))\n.directive('activityBarChart', require('./bar-chart.directive.js'))\n.directive('activityTimeChart', require('./time-chart.directive.js'))\n.directive('targetedSurveyTable', require('./targeted-survey-table.directive.js'))\n.directive('crowdsourcedSurveyTable', require('./crowdsourced-survey-table.directive.js'))\n;\n","module.exports = [\n    '$stateProvider',\n    '$urlMatcherFactoryProvider',\nfunction (\n    $stateProvider,\n    $urlMatcherFactoryProvider\n) {\n    $urlMatcherFactoryProvider.strictMode(false);\n\n    $stateProvider\n    .state({\n        name: 'activity',\n        url: '/activity',\n        controller: require('./activity.controller.js'),\n        template: require('./activity.html')\n    });\n}];\n","module.exports = ActivityController;\n\nActivityController.$inject = ['$rootScope', '$scope', '$translate', 'moment', 'Features'];\n\nfunction ActivityController($rootScope, $scope, $translate, moment, Features) {\n    // Initial values\n    $scope.isActivityAvailable = false;\n    $scope.currentInterval = 'all';\n    $scope.editableInterval = 'all';\n    $scope.filters = {\n        created_after: null,\n        created_before: null\n    };\n    $scope.filtersMenuOpen = false;\n    $scope.dateOptions = { format : 'yyyy-mm-dd' };\n\n    $scope.saveFilters = saveFilters;\n    $scope.cancelChangeFilters = cancelChangeFilters;\n    $scope.targetedSurveysEnabled = false;\n    $scope.loggedIn = false;\n    $scope.createdAfter = null;\n    $scope.createdBefore = null;\n    activate();\n\n    function activate() {\n        // Change mode\n        $scope.$emit('event:mode:change', 'activity');\n        // Set the page title\n        $translate('nav.activity').then(function (title) {\n            $scope.$emit('setPageTitle', title);\n        });\n        if ($rootScope.loggedin) {\n            $scope.loggedIn = true;\n        }\n\n        Features.loadFeatures().then(function () {\n            $scope.isActivityAvailable = Features.isViewEnabled('activity');\n            $scope.targetedSurveysEnabled = Features.isFeatureEnabled('targeted-surveys');\n\n        });\n\n        update();\n    }\n\n    function saveFilters() {\n        $scope.currentInterval = $scope.editableInterval;\n        update();\n        $scope.filtersMenuOpen = false;\n    }\n\n    function cancelChangeFilters() {\n        $scope.editableInterval = $scope.currentInterval;\n        $scope.filtersMenuOpen = false;\n    }\n\n    function update() {\n        //$scope.currentInterval = interval;\n        setDateRange($scope.currentInterval);\n    }\n\n    /**\n     * Util func to get date range when given an interval like\n     * @param  {String} interval month|week|all\n     * @return {Object}\n     */\n    function setDateRange(interval) {\n        switch (interval) {\n            case 'month':\n                $scope.filters.created_after = moment(moment().startOf('month').toDate()).utc().format();\n                $scope.filters.created_before =  null;\n                break;\n            case 'all':\n                $scope.filters.created_after = null;\n                $scope.filters.created_before =  null;\n                break;\n            case 'custom':\n                if ($scope.createdAfter &&\n                    $scope.createdBefore &&\n                    $scope.createdAfter.toDateString() === $scope.createdBefore.toDateString()\n                ) {\n                    // Do nothing?\n                    $scope.filters.created_after = moment(moment($scope.createdAfter).utc()).startOf('day').format();\n                    $scope.filters.created_before = moment(moment($scope.createdBefore).utc()).endOf('day').format();\n                }\n                if ($scope.createdAfter) {\n                    $scope.filters.created_after = moment(moment($scope.createdAfter).utc()).startOf('day').format();\n                }\n                if ($scope.createdBefore) {\n                    $scope.filters.created_before = moment(moment($scope.createdBefore).utc()).startOf('day').format();\n                }\n                break;\n            // case 'week':\n            default:\n                // Default to this week\n                $scope.filters.created_after = moment(moment().startOf('week').toDate()).utc().format();\n                $scope.filters.created_before =  null;\n        }\n        return $scope.filters;\n    }\n}\n","module.exports = \"<div>\\n    <layout-class layout=\\\"a\\\"></layout-class>\\n    <div class=\\\"mode-context init\\\" ng-controller=\\\"navigation as nav\\\" dropdown>\\n        <header class=\\\"mode-context-header\\\" ng-class=\\\"{ 'has-logo' : nav.site.image_header }\\\">\\n            <h1 class=\\\"mode-context-title\\\"><a href=\\\"/\\\" ng-bind=\\\"nav.site.name\\\"></a></h1>\\n            <img ng-if=\\\"nav.site.image_header\\\" ng-src=\\\"{{ nav.site.image_header }}\\\" class=\\\"deployment-logo\\\" />\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n\\n        <div class=\\\"mode-context-body\\\">\\n            <p markdown-to-html=\\\"nav.site.description\\\"></p>\\n        </div>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n        <div class=\\\"toolbar\\\" ng-show=\\\"isActivityAvailable\\\" >\\n            <form role=\\\"search\\\" class=\\\"searchbar\\\" name=\\\"searchForm\\\" ng-submit=\\\"saveFilters()\\\">\\n\\n                <div class=\\\"searchbar-options\\\">\\n                    <fieldset class=\\\"custom-fieldset init\\\" data-fieldset-type=\\\"date-range\\\" dropdown auto-close=\\\"disabled\\\" is-open=\\\"filtersMenuOpen\\\">\\n                        <legend class=\\\"dropdown-trigger init\\\" dropdown-toggle>\\n                            <span class=\\\"legend-label\\\" ng-show=\\\"currentInterval !== 'custom'\\\" translate=\\\"{{'graph.' + currentInterval }}\\\">Date range</span>\\n                            <span class=\\\"legend-label\\\"  ng-show=\\\"currentInterval == 'custom'\\\"\\n                                  translate=\\\"graph.custom_display\\\"\\n                                  translate-values=\\\"{\\n                                    start: (filters.created_after | date:'shortDate'),\\n                                    end: (filters.created_before | date:'shortDate') }\\\"\\n                                  translate-compile>Date range</span>\\n                            <svg class=\\\"iconic chevron\\\"><use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use></svg>\\n                        </legend>\\n\\n                        <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                            <div class=\\\"form-field radio\\\">\\n                                <label>\\n                                    <input ng-model=\\\"editableInterval\\\" type=\\\"radio\\\" name=\\\"editableInterval\\\" value=\\\"all\\\">\\n                                    <span translate=\\\"graph.all\\\">All time</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-field radio\\\">\\n                                <label>\\n                                    <input ng-model=\\\"editableInterval\\\" type=\\\"radio\\\" name=\\\"editableInterval\\\" value=\\\"week\\\">\\n                                    <span translate=\\\"graph.week\\\">This week</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-field radio\\\">\\n                                <label>\\n                                    <input ng-model=\\\"editableInterval\\\" type=\\\"radio\\\" name=\\\"editableInterval\\\" value=\\\"month\\\">\\n                                    <span translate=\\\"graph.month\\\">This month</span>\\n                                </label>\\n                            </div>\\n\\n                            <div class=\\\"form-field radio\\\">\\n                                <label>\\n                                    <input ng-model=\\\"editableInterval\\\" type=\\\"radio\\\" name=\\\"editableInterval\\\" value=\\\"custom\\\">\\n                                    <span translate=\\\"graph.custom\\\">Custom date range</span>\\n                                </label>\\n\\n                                <!-- todo: reuse filter-date -->\\n                                <div class=\\\"form-fieldgroup\\\">\\n                                    <div class=\\\"form-field date\\\" ng-show=\\\"editableInterval == 'custom'\\\">\\n                                        <label class=\\\"hidden\\\" translate=\\\"global_filter.filter_tabs.created_after\\\">Start date</label>\\n                                        <div class=\\\"input-with-icon\\\">\\n                                            <svg class=\\\"iconic\\\">\\n                                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#calendar\\\"></use>\\n                                            </svg>\\n                                            <input type=\\\"date\\\" pick-a-date=\\\"createdAfter\\\" pick-a-date-options=\\\"dateOptions\\\" placeholder=\\\"{{ 'global_filter.filter_tabs.created_after' | translate }}\\\" ng-model=\\\"createdAfter\\\" />\\n                                        </div>\\n                                        <span class=\\\"date-joiner\\\">to</span>\\n                                    </div>\\n\\n                                    <div class=\\\"form-field date\\\" ng-show=\\\"editableInterval == 'custom'\\\">\\n                                        <label class=\\\"hidden\\\" translate=\\\"global_filter.filter_tabs.created_before\\\">End date</label>\\n                                        <div class=\\\"input-with-icon\\\">\\n                                            <svg class=\\\"iconic\\\">\\n                                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#calendar\\\"></use>\\n                                            </svg>\\n                                            <input type=\\\"date\\\" pick-a-date=\\\"createdBefore\\\" pick-a-date-options=\\\"dateOptions\\\" placeholder=\\\"{{ 'global_filter.filter_tabs.created_before' | translate }}\\\" ng-model=\\\"createdBefore\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-field\\\">\\n                                <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancelChangeFilters()\\\" translate=\\\"app.cancel\\\">Cancel</button>\\n                                <button type=\\\"submit\\\" class=\\\"button-alpha\\\" translate=\\\"app.apply_filters\\\">Apply filter</button>\\n                            </div>\\n                        </div>\\n                    </fieldset>\\n                </div>\\n\\n            </form>\\n        </div>\\n\\n        <!-- unavailable view -->\\n        <post-view-unavailable ng-hide=\\\"isActivityAvailable\\\" view=\\\"'nav.activity' | translate\\\"></post-view-unavailable>\\n        <!-- <img ng-hide=\\\"isActivityAvailable\\\" src/img/activity-page.png\\\" style=\\\"opacity: 0.4; filter: blur(1px);\\\" /> -->\\n\\n        <div ng-show=\\\"isActivityAvailable\\\" class=\\\"main-col\\\">\\n            <div class=\\\"listing card init\\\">\\n                <div class=\\\"listing-item active\\\">\\n                    <div class=\\\"listing-item-secondary\\\">\\n                        <button ng-show=\\\"todo\\\" type=\\\"button\\\" class=\\\"button-beta button-flat\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#share\\\"></use>\\n                            </svg>\\n                            <span class=\\\"hidden\\\" translate=\\\"app.share\\\">Share</span>\\n                        </button>\\n                    </div>\\n\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <h2 class=\\\"listing-item-title\\\" translate=\\\"activity.activity_over_time\\\">Activity over time</h2>\\n                    </div>\\n\\n                    <div class=\\\"listing-item-body\\\">\\n                        <!-- <dc-chart-by-volume date-range=\\\"dateRange\\\"></dc-chart-by-volume> -->\\n                        <activity-time-chart filters=\\\"filters\\\"></activity-time-chart>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"listing card init\\\">\\n                <div class=\\\"listing-item active\\\">\\n                    <div class=\\\"listing-item-secondary\\\">\\n                        <button ng-show=\\\"todo\\\" type=\\\"button\\\" class=\\\"button-beta button-flat\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#share\\\"></use>\\n                            </svg>\\n                            <span class=\\\"hidden\\\" translate=\\\"app.share\\\">Share</span>\\n                        </button>\\n                    </div>\\n\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <h2 class=\\\"listing-item-title\\\" translate=\\\"activity.activity_by_volume\\\">Activity by volume</h2>\\n                    </div>\\n\\n                    <div class=\\\"listing-item-body\\\">\\n                        <!-- <dc-chart-by-time date-range=\\\"dateRange\\\"></dc-chart-by-time> -->\\n                        <activity-bar-chart filters=\\\"filters\\\"></activity-bar-chart>\\n                    </div>\\n                </div>\\n            </div>\\n            <div ng-if=\\\"targetedSurveysEnabled && loggedIn\\\" class=\\\"listing card init\\\">\\n                <div class=\\\"listing-item active\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <h2 class=\\\"listing-item-title\\\" translate=\\\"activity.targeted_activity\\\">Tageted Survey Activity</h2>\\n                    </div>\\n\\n                    <div class=\\\"listing-item-body\\\">\\n                        <targeted-survey-table filters=\\\"filters\\\"></targeted-survey-table>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"listing card init\\\" ng-if=\\\"loggedIn\\\">\\n                <div class=\\\"listing-item active\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <h2 class=\\\"listing-item-title\\\" translate=\\\"activity.crowdsourced_activity\\\">Crowdsourced Survey Activity</h2>\\n                    </div>\\n\\n                    <div class=\\\"listing-item-body\\\">\\n                        <crowdsourced-survey-table filters=\\\"filters\\\"></crowdsourced-survey-table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div> <!--end main column-->\\n\\n\\n        <aside class=\\\"secondary-col\\\" role=\\\"complementary\\\">\\n            <!-- <activity-timeline></activity-timeline> -->\\n        </aside>\\n\\n    </main>\\n</div>\";","module.exports = [\nfunction (\n) {\n    var controller = [\n        '$scope',\n        '$q',\n        '$translate',\n        'PostEndpoint',\n        'UserEndpoint',\n        '_',\n        function (\n            $scope,\n            $q,\n            $translate,\n            PostEndpoint,\n            UserEndpoint,\n            _\n        ) {\n\n            /*\n            Helper function to produce human friendly timestamps\n            */\n            $scope.timeSince = function (date) {\n\n                var seconds = Math.floor((new Date() - date) / 1000);\n\n                var interval = Math.floor(seconds / 31536000);\n\n                if (interval > 1) {\n                    return interval + ' years';\n                }\n                interval = Math.floor(seconds / 2592000);\n                if (interval > 1) {\n                    return interval + ' months';\n                }\n                interval = Math.floor(seconds / 86400);\n                if (interval > 1) {\n                    return interval + ' days';\n                }\n                interval = Math.floor(seconds / 3600);\n                if (interval > 1) {\n                    return interval + ' hours';\n                }\n                interval = Math.floor(seconds / 60);\n                if (interval > 1) {\n                    return interval + ' minutes';\n                }\n                return Math.floor(seconds) + ' seconds';\n            };\n\n            var getPostsForPagination = function (query) {\n                query = query || { status: 'all' };\n                var postQuery = _.extend({}, query, {\n                    offset: ($scope.currentPage - 1) * $scope.itemsPerPage,\n                    limit: $scope.itemsPerPage,\n                    'ignore403': '@ignore403'\n                });\n\n                $scope.isLoading = true;\n                PostEndpoint.query(postQuery).$promise.then(function (postsResponse) {\n                    $scope.posts = postsResponse.results;\n                    $scope.isLoading = false;\n\n                    /*\n                    cool looking friendly timestamp - only appears\n                    start of timeline.\n                    */\n                    var firspost_timestamp = new Date($scope.posts[0].created);\n                    $scope.start_timestamp = $scope.timeSince(firspost_timestamp);\n\n                    /*\n                    quick hack to get user names but not efficient\n                    since we end up making duplicate queries\n                    */\n                    $scope.posts.forEach(function (post) {\n                        post.user = UserEndpoint.get({id: post.user.id});\n                    });\n\n                });\n            };\n\n            // --- start: initialization\n            $scope.pageChanged = getPostsForPagination;\n            $scope.currentPage = 1;\n            $scope.itemsPerPageOptions = [10, 20, 50];\n            $scope.itemsPerPage = $scope.itemsPerPageOptions[0];\n            $scope.start_timestamp = null;\n            // Initial load\n            getPostsForPagination();\n        }\n    ];\n\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n        },\n        controller: controller,\n        template: require('./activity-timeline.html')\n    };\n}];\n","module.exports = \"<div>\\n<div class=\\\"main-col\\\">\\n\\n   <div class=\\\"listing\\\">\\n\\n       <article class=\\\"postcard\\\">\\n           <div class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: form.color}\\\"></div>\\n           <div class=\\\"listing-item-select\\\">\\n               <input type=\\\"checkbox\\\">\\n           </div>\\n           <div class=\\\"postcard-body\\\">\\n               <h1 class=\\\"postcard-title\\\"><a href=\\\"\\\">Overcrowding between 5th St. &amp; Salem Ave.</a></h1>\\n               <span class=\\\"postcard-metadata\\\"><a href=\\\"\\\" class=\\\"postcard-author\\\"><img src=\\\"https://api.adorable.io/avatars/40/abott@adorable.io.png\\\" class=\\\"avatar\\\" />Jess Shorland</a>, 45 mins, via SMS</span>\\n\\n               <div class=\\\"postcard-field\\\">\\n                   <p>Forms are the standard way to receive user inputted data. The transitions and smoothness of these elements are very important because of the inherent user interaction associated with forms.</p>\\n               </div>\\n           </div>\\n\\n           <span class=\\\"postcard-actions-trigger\\\" data-toggle=\\\"dropdown-menu\\\">\\n               <svg class=\\\"iconic\\\">\\n                 <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n               </svg>\\n           </span>\\n           <ul class=\\\"dropdown-menu\\\">\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#pencil\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Edit</span>\\n                   </a>\\n               </li>\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#grid-three-up\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Add to Collection</span>\\n                   </a>\\n               </li>\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#share\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Share</span>\\n                   </a>\\n               </li>\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#task\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Assign to...</span>\\n                   </a>\\n               </li>\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Delete</span>\\n                   </a>\\n               </li>\\n           </ul>\\n       </article>\\n\\n       <article class=\\\"postcard\\\">\\n\\n           <div class=\\\"post-band\\\"  ng-style=\\\"{ backgroundColor: form.color}\\\"></div>\\n           <div class=\\\"listing-item-select\\\">\\n               <input type=\\\"checkbox\\\">\\n           </div>\\n           <div class=\\\"postcard-body\\\">\\n               <h1 class=\\\"postcard-title\\\"><a href=\\\"\\\">Overcrowding between 5th St. &amp; Salem Ave.</a></h1>\\n               <span class=\\\"postcard-metadata\\\"><a href=\\\"\\\" class=\\\"postcard-author\\\"><img src=\\\"https://api.adorable.io/avatars/40/abott@adorable.io.png\\\" class=\\\"avatar\\\" />Jess Shorland</a>, 45 mins, via SMS</span>\\n\\n               <div class=\\\"postcard-field\\\">\\n                   <img src=\\\"//lorempixel.com/400/300/\\\" class=\\\"postcard-image\\\" />\\n               </div>\\n           </div>\\n\\n           <span class=\\\"postcard-actions-trigger\\\" data-toggle=\\\"dropdown-menu\\\">\\n               <svg class=\\\"iconic\\\">\\n                 <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n               </svg>\\n           </span>\\n           <ul class=\\\"dropdown-menu\\\">\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#pencil\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Edit</span>\\n                   </a>\\n               </li>\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#grid-three-up\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Add to Collection</span>\\n                   </a>\\n               </li>\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#share\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Share</span>\\n                   </a>\\n               </li>\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#task\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Assign to...</span>\\n                   </a>\\n               </li>\\n               <li>\\n                   <a href=\\\"\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                   </svg>\\n                   <span class=\\\"label\\\">Delete</span>\\n                   </a>\\n               </li>\\n           </ul>\\n       </article>\\n\\n       <div class=\\\"listing-toolbar\\\">\\n           <div class=\\\"listing-toolbar-summary\\\">\\n               <strong><span class=\\\"total\\\"></span> selected</strong>\\n               <button class=\\\"button-link\\\">Deselect</button>\\n           </div>\\n\\n           <div class=\\\"listing-toolbar-actions\\\">\\n\\n               <fieldset class=\\\"custom-fieldset\\\">\\n                   <legend>Mark as</legend>\\n\\n                   <div class=\\\"form-field radio\\\">\\n                       <label for=\\\"contributor\\\">\\n                           <input type=\\\"radio\\\" name=\\\"role\\\" id=\\\"contributor\\\">\\n                           Spam\\n                       </label>\\n                   </div>\\n\\n                   <div class=\\\"form-field radio\\\">\\n                       <label for=\\\"editor\\\">\\n                           <input type=\\\"radio\\\" name=\\\"role\\\" id=\\\"editor\\\">\\n                           Duplicates\\n                       </label>\\n                   </div>\\n               </fieldset>\\n\\n               <fieldset class=\\\"custom-fieldset\\\">\\n                   <legend>\\n                       <svg class=\\\"iconic\\\">\\n                           <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#grid-three-up\\\"></use>\\n                       </svg>\\n                       Add to Collection\\n                   </legend>\\n\\n                   <div class=\\\"form-field radio\\\">\\n                       <label for=\\\"contributor\\\">\\n                           <input type=\\\"radio\\\" name=\\\"role\\\" id=\\\"contributor\\\">\\n                           Spam\\n                       </label>\\n                   </div>\\n\\n                   <div class=\\\"form-field radio\\\">\\n                       <label for=\\\"editor\\\">\\n                           <input type=\\\"radio\\\" name=\\\"role\\\" id=\\\"editor\\\">\\n                           Duplicates\\n                       </label>\\n                   </div>\\n               </fieldset>\\n\\n               <button type=\\\"button\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                   </svg>\\n                   <span class=\\\"button-label\\\">Export</span>\\n               </button>\\n\\n               <button type=\\\"button\\\" class=\\\"button-destructive\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                   </svg>\\n                   <span class=\\\"button-label hidden\\\">Delete</span>\\n               </button>\\n\\n               <button type=\\\"button\\\" class=\\\"listing-toolbar-toggle more\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#ellipses\\\"></use>\\n                   </svg>\\n                   <span class=\\\"button-label\\\">Show more</span>\\n               </button>\\n\\n               <button type=\\\"button\\\" class=\\\"listing-toolbar-toggle less\\\">\\n                   <svg class=\\\"iconic\\\">\\n                       <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#x\\\"></use>\\n                   </svg>\\n                   <span class=\\\"button-label\\\">Show less</span>\\n               </button>\\n           </div>\\n       </div>\\n  </div>\\n</div> <!--end main column-->\\n\\n<div>\\n<h3 translate>activity.recent_activity_timeline</h3>\\n<div ng-show=\\\"isLoading\\\"><i class=\\\"fa fa-refresh fa-4 fa-spin\\\"></i></div>\\n<div class=\\\"activity-timeline\\\" ng-hide=\\\"isLoading\\\">\\n\\n    <div class=\\\"timestamp\\\"><span ng-bind=\\\"start_timestamp\\\"></span> AGO</div>\\n\\n    <div class=\\\"activity-listing\\\" ng-repeat=\\\"post in ::posts\\\">\\n        <div class=\\\"activity-type post\\\" translate>\\n        activity.new_post\\n        </div>\\n        <div class=\\\"listing-summary\\\">\\n            <h3>\\n                <a ng-href=\\\"/posts/{{::post.id}}\\\" ng-bind=\\\"::post.title\\\"></a>\\n            </h3>\\n            <p translate>activity.by <a ng-href=\\\"\\\" ng-bind=\\\"::post.user.realname\\\"></a></p>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- USE NG-SWITCH TO RENDER DIFF TYPES OF ACTIVITES -->\\n\\n    <!-- <a class=\\\"button\\\" href=\\\"#\\\">\\n        <span>View Full Timeline</span>\\n    </a> -->\\n\\n    <!-- <div class=\\\"activity-listing\\\">\\n        <div class=\\\"activity-type post\\\">\\n            New Post\\n        </div>\\n        <div class=\\\"listing-summary\\\">\\n            <h3>\\n                <a href=\\\"\\\">Bus carring Shiite pilgrims bombed</a>\\n            </h3>\\n            <p>By <a href=\\\"\\\">David Kobia</a></p>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <div class=\\\"activity-listing\\\">\\n        <div class=\\\"activity-type comment\\\">\\n            New Comment\\n        </div>\\n        <div class=\\\"listing-summary\\\">\\n            <p>\\n                By <a href=\\\"\\\">David Kobia</a> on <a href=\\\"\\\">Unstable building due to explosion next to road</a>:\\n            </p>\\n            <blockquote>\\n                Totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae.\\n            </blockquote>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <div class=\\\"activity-listing\\\">\\n        <div class=\\\"activity-type collection\\\">\\n            New Collection\\n        </div>\\n        <div class=\\\"listing-summary\\\">\\n            <h3>\\n                <a href=\\\"\\\">Bus carring Shiite pilgrims bombed</a>\\n            </h3>\\n            <p>By <a href=\\\"\\\">David Kobia</a></p>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <div class=\\\"timestamp\\\">6 Hours Ago</div>\\n\\n    <div class=\\\"activity-listing\\\">\\n        <div class=\\\"activity-type saved-search\\\">\\n            New Saved Search\\n        </div>\\n        <div class=\\\"listing-summary\\\">\\n            <h3>\\n                <a href=\\\"\\\">Missing Children since 2012</a>\\n            </h3>\\n            <p>By <a href=\\\"\\\">David Kobia</a></p>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <div class=\\\"activity-listing\\\">\\n        <div class=\\\"activity-type post\\\">\\n            New Post\\n        </div>\\n        <div class=\\\"listing-summary\\\">\\n            <h3>\\n                <a href=\\\"\\\">Bus carring Shiite pilgrims bombed</a>\\n            </h3>\\n            <p>By <a href=\\\"\\\">David Kobia</a></p>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div> -->\\n</div>\\n</div>\\n</div>\\n\";","module.exports = ActivityBarChart;\n\nfunction ActivityBarChart() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '='\n        },\n        controller: ActivityBarChartController,\n        template: require('./bar-chart.html')\n    };\n}\n\nActivityBarChartController.$inject = ['$scope', '$translate', 'PostEndpoint', 'd3', '_', 'PostFilters'];\nfunction ActivityBarChartController($scope, $translate, PostEndpoint, d3, _, PostFilters) {\n    $scope.data = [{\n        values: []\n    }];\n\n    $scope.groupByOptions = {\n        'tags' : 'nav.categories',\n        'form' : 'app.surveys',\n        'status' : 'post.status'\n    };\n\n    $scope.groupBy = {\n        value: 'tags'\n    };\n\n    $scope.options = {\n        chart: {\n            type: 'multiBarHorizontalChart',\n            height: 450,\n            margin: {\n                top: 0,\n                right: 40,\n                bottom: 40,\n                left: 5\n            },\n            x: function (d) {\n                return d.label;\n            },\n            y: function (d) {\n                return d.total;\n            },\n            showValues: false,\n            showControls: false,\n            valueFormat: d3.format('d'),\n            transitionDuration: 500,\n            xAxis: {\n                axisLabel: $translate.instant('post.categories'),\n                tickPadding: -10,\n                axisLabelDistance: 0\n            },\n            yAxis: {\n                axisLabel: $translate.instant('graph.post_count'),\n                tickFormat: d3.format('d')\n            },\n            tooltip : {\n                contentGenerator: function (data) {\n                    return '<h3>' + data.value + '</h3>' +\n                        '<p>' +  data.data.total + '</p>';\n                }\n            },\n            forceY: 0,\n            barColor: d3.scale.category20().range(),\n            noData: $translate.instant('graph.no_data')\n        }\n    };\n\n    $scope.reload = getPostStats;\n\n    activate();\n\n    function activate() {\n        // whenever the filters changes, update the current list of posts\n        $scope.$watch('filters', function () {\n            getPostStats();\n        }, true);\n        PostFilters.setMode('activity');\n    }\n\n    function getPostStats(query) {\n        query = query || PostFilters.getQueryParams($scope.filters);\n        var postQuery = _.extend({}, query, {\n            'group_by' : $scope.groupBy.value,\n            'ignore403': '@ignore403'\n        });\n\n        $scope.isLoading = true;\n        PostEndpoint.stats(postQuery).$promise.then(function (results) {\n            $scope.options.chart.xAxis.axisLabel = $translate.instant($scope.groupByOptions[$scope.groupBy.value]);\n            if (results.totals[0]) {\n                results.totals[0].key = $scope.options.chart.yAxis.axisLabel;\n            }\n            $scope.data = results.totals;\n            $scope.isLoading = false;\n        });\n    }\n\n}\n","module.exports = \"<div class=\\\"graph-view\\\">\\n    <fieldset class=\\\"custom-fieldset init\\\" dropdown is-open=\\\"compareIsOpen\\\">\\n        <legend class=\\\"dropdown-trigger init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n            <span class=\\\"legend-label\\\" translate=\\\"graph.compare\\\" ng-show=\\\"compareIsOpen\\\">Compare...</span>\\n            <span class=\\\"legend-label\\\" translate=\\\"graph.compare_{{groupBy.value || 'all'}}\\\" ng-hide=\\\"compareIsOpen\\\">Compare...</span>\\n            <svg class=\\\"iconic chevron\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n        </legend>\\n\\n        <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n            <div class=\\\"form-field radio\\\" ng-repeat=\\\"(key, value) in groupByOptions\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" ng-value=\\\"key\\\" ng-model=\\\"groupBy.value\\\" ng-change=\\\"reload()\\\"> {{::value | translate}}\\n                </label>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <nvd3 options='options' data='data'></nvd3>\\n</div>\\n\";","module.exports = ActivityTimeChart;\n\nfunction ActivityTimeChart() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '='\n        },\n        controller: ActivityTimeChartController,\n        template: require('./time-chart.html')\n    };\n}\n\nActivityTimeChartController.$inject = ['$scope', '$translate', 'PostEndpoint', 'd3', '_', 'PostFilters'];\nfunction ActivityTimeChartController($scope, $translate, PostEndpoint, d3, _, PostFilters) {\n    var yAxisLabelCumulative = $translate.instant('graph.cumulative_post_count'),\n        yAxisLabel = $translate.instant('graph.new_post_count'),\n        xAxisLabel = $translate.instant('graph.post_date');\n\n    $scope.showCumulative = true;\n    $scope.isLoading = true;\n    $scope.timelineAttribute = 'created';\n\n    $scope.data = [{\n        values: []\n    }];\n\n    $scope.groupByOptions = {\n        '' : 'graph.all_posts',\n        'tags' : 'nav.categories',\n        'form' : 'app.surveys',\n        'status' : 'post.status'\n    };\n\n    $scope.groupBy = {\n        value: ''\n    };\n\n    $scope.options = {\n        chart: {\n            type: 'lineChart',\n            height: 450,\n            margin: {\n                top: 0,\n                right: 65,\n                bottom: 40,\n                left: 65\n            },\n            showControls: false,\n            x: function (d) {\n                return new Date(parseInt(d.label) * 1000);\n            },\n            y: function (d) {\n                return d[$scope.showCumulative ? 'cumulative_total' : 'total'];\n            },\n            transitionDuration: 500,\n            xAxis: {\n                axisLabel: xAxisLabel,\n                tickFormat: function (d) {\n                    //uses unambiguous time format ex: 8 Sep 2014\n                    return d3.time.format('%e %b %Y')(new Date(d));\n                }\n            },\n            yAxis: {\n                axisLabel: yAxisLabel,\n                tickFormat: d3.format('d')\n            },\n            forceY: 0,\n            tooltip : {\n                contentGenerator: function (data) {\n                    return '<h3>' + data.series[0].key + '</h3>' +\n                        '<p>' +  data.point.y + ' posts at ' + d3.time.format('%e %b %Y')(new Date(data.point.x)) + '</p>';\n                }\n            },\n            noData: $translate.instant('graph.no_data')\n        }\n    };\n\n    $scope.reload = getPostStats;\n\n    activate();\n\n    function activate() {\n        // whenever filters change, reload\n        $scope.$watch('filters', function () {\n            getPostStats();\n        }, true);\n        $scope.$watch('showCumulative', updateAxisLabel);\n        PostFilters.setMode('activity');\n    }\n\n    function getPostStats(query) {\n        query = query || PostFilters.getQueryParams($scope.filters);\n        var postQuery = _.extend({}, query, {\n            'timeline' : 1,\n            'timeline_attribute' : $scope.timelineAttribute,\n            'group_by' : $scope.groupBy.value,\n            'ignore403': '@ignore403'\n        });\n\n        $scope.isLoading = true;\n        PostEndpoint.stats(postQuery).$promise.then(function (results) {\n            if (!results.totals.length || _.chain(results.totals).pluck('values').pluck('length').max().value() < 3) {\n                // Don't render a time chart with less than 3 points\n                $scope.data = [{\n                    values: []\n                }];\n            } else {\n                $scope.data = results.totals;\n            }\n            $scope.isLoading = false;\n        });\n    }\n\n    function updateAxisLabel(cumulative) {\n        if (cumulative) {\n            $scope.options.chart.yAxis.axisLabel = yAxisLabelCumulative;\n        } else {\n            $scope.options.chart.yAxis.axisLabel = yAxisLabel;\n        }\n    }\n}\n","module.exports = \"<div class=\\\"timeline-view\\\">\\n    <fieldset class=\\\"custom-fieldset init\\\" dropdown is-open=\\\"compareIsOpen\\\">\\n        <legend class=\\\"dropdown-trigger init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n            <span class=\\\"legend-label\\\" translate=\\\"graph.compare\\\" ng-show=\\\"compareIsOpen\\\">Compare...</span>\\n            <span class=\\\"legend-label\\\" translate=\\\"graph.compare_{{groupBy.value || 'all'}}\\\" ng-hide=\\\"compareIsOpen\\\">Compare...</span>\\n            <svg class=\\\"iconic chevron\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n        </legend>\\n\\n        <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n            <div class=\\\"form-field radio\\\" ng-repeat=\\\"(key, value) in groupByOptions\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" ng-value=\\\"key\\\" ng-model=\\\"groupBy.value\\\" ng-change=\\\"reload()\\\"> {{::value | translate}}\\n                </label>\\n            </div>\\n            <div class=\\\"form-fieldgroup\\\">\\n                <div class=\\\"form-field checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"showCumulative\\\" ng-model=\\\"showCumulative\\\" ng-change=\\\"reload()\\\">\\n                        <span translate=\\\"graph.cumulative\\\">Show cumulative totals</span>\\n                    </label>\\n                </div>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <div class=\\\"nvd3-wrapper\\\">\\n      <nvd3 options='options' data='data'></nvd3>\\n    </div>\\n</div>\\n\";","module.exports = TargetedSurveyTable;\n\nfunction TargetedSurveyTable() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '='\n        },\n        controller: TargetedSurveyTableController,\n        template: require('./targeted-survey-table.html')\n    };\n}\n\nTargetedSurveyTableController.$inject = ['$rootScope', '$scope', '$translate', 'FormEndpoint', 'FormStatsEndpoint', 'FormContactEndpoint', 'PostEndpoint', '_', 'PostFilters', 'Session'];\nfunction TargetedSurveyTableController($rootScope, $scope, $translate, FormEndpoint, FormStatsEndpoint, FormContactEndpoint, PostEndpoint, _, PostFilters, Session) {\n    $scope.targetedSurveyStatsByForm = [];\n    $scope.totalResponses = 0;\n    $scope.totalMessagesSent = 0;\n    $scope.totalRecipients = 0;\n    $scope.totalResponseRecipients = 0;\n    $scope.noSurveys = false;\n\n    // whenever the filters changes, update the current list of posts\n    // this also initiates the first call to get form stats because\n    // it is called when the filters load the first time\n    $scope.$watch('filters', function () {\n        if ($rootScope.loggedin) {\n            clearStats();\n            getFormStats();\n        }\n    }, true);\n    PostFilters.setMode('activity');\n\n    function clearStats() {\n        $scope.targetedSurveyStatsByForm = [];\n        $scope.totalResponses = 0;\n        $scope.totalMessagesSent = 0;\n        $scope.totalRecipients = 0;\n        $scope.totalResponseRecipients = 0;\n    }\n\n    function getFormStats() {\n        FormEndpoint.query({ignore403: '@ignore403'}).$promise.then((forms) => {\n            if (!targetedSurveysExist(forms)) {\n                $scope.noSurveys = true;\n            } else {\n                $scope.noSurveys = false;\n                forms.forEach((form) => {\n                    if (form.targeted_survey) {\n                        let query = PostFilters.getQueryParams($scope.filters) || {};\n                        let postQuery = _.extend({}, query, {\n                            formId: form.id,\n                            'ignore403': '@ignore403'\n                        });\n                        FormStatsEndpoint.query(postQuery).$promise.then((stats) => {\n                            stats.name = form.name;\n                            $scope.targetedSurveyStatsByForm.push(stats);\n                            $scope.totalResponses += stats.total_responses;\n                            $scope.totalMessagesSent += stats.total_messages_sent;\n                            $scope.totalRecipients += stats.total_recipients;\n                            $scope.totalResponseRecipients += stats.total_response_recipients;\n                        }).catch((err) => {\n                            $scope.noSurveys = true;\n                        });\n                    }\n                });\n            }\n        }).catch((err) => {\n            $scope.noSurveys = true;\n        });\n    }\n\n    function targetedSurveysExist(forms) {\n        return forms.find((form) => {\n            if (form.targeted_survey) {\n                return true;\n            }\n        });\n    }\n}\n","module.exports = \"<div>\\n    <loading-dots button-class=\\\"'button-gamma button-flat'\\\" label=\\\"'app.loading'\\\" ng-if=\\\"!noSurveys && targetedSurveyStatsByForm.length === 0\\\"></loading-dots>\\n    <fieldset ng-if=\\\"targetedSurveyStatsByForm.length >= 1\\\">\\n        <table>\\n            <thead>\\n                <tr>\\n                    <th></th>\\n                    <th translate=\\\"activity.inbound\\\">Inbound Response Messages</th>\\n                    <th translate=\\\"activity.outbound\\\">Outbound Surveying Messages</th>\\n                    <th translate=\\\"activity.recipients\\\">Unique Recipients of Targeted Survey</th>\\n                    <th translate=\\\"activity.responders\\\">Unique Responders to Targeted Survey</th>\\n                    \\n                </tr>\\n            </thead>\\n\\n            <tbody>\\n                <tr ng-repeat=\\\"survey in targetedSurveyStatsByForm\\\">\\n                    <td>{{survey.name}}</td>\\n                    <td>{{survey.total_responses}}</td>\\n                    <td>{{survey.total_messages_sent}}</td>\\n                    <td>{{survey.total_recipients}}</td>\\n                    <td>{{survey.total_response_recipients}}</td>\\n                </tr>\\n                <tr>\\n                    <td translate=\\\"activity.all_targeted\\\">All Targeted Surveys</td>\\n                    <td>{{totalResponses}}</td>\\n                    <td>{{totalMessagesSent}}</td>\\n                    <td>{{totalRecipients}}</td>\\n                    <td>{{totalResponseRecipients}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </fieldset>\\n    <p translate=\\\"activity.no_targeted\\\" ng-if=\\\"noSurveys\\\">You don't have any Targeted Survey data to show.</p>\\n</div>\";","module.exports = CrowdsourcedSurveyTable;\n\nfunction CrowdsourcedSurveyTable() {\n    return {\n        restrict: 'E',\n        scope: {\n            filters: '='\n        },\n        controller: CrowdsourcedSurveyTableController,\n        template: require('./crowdsourced-survey-table.html')\n    };\n}\n\nCrowdsourcedSurveyTableController.$inject = ['$scope', '$translate', 'FormEndpoint', 'FormStatsEndpoint', 'FormContactEndpoint', 'PostEndpoint', '_', 'PostFilters', 'Session'];\nfunction CrowdsourcedSurveyTableController($scope, $translate, FormEndpoint, FormStatsEndpoint, FormContactEndpoint, PostEndpoint, _, PostFilters, Session) {\n    $scope.crowdsourcedSurveyStatsByForm = [];\n    $scope.totalAll = 0;\n    $scope.totalWeb = 0;\n    $scope.totalEmail = 0;\n    $scope.totalSms = 0;\n    $scope.totalTwitter = 0;\n    $scope.noSurveys = false;\n    $scope.unstructuredStats = {};\n\n    // whenever the filters changes, update the current list of posts\n    // this also initiates the first call to get form stats because\n    // it is called when the filters load the first time\n    $scope.$watch('filters', function () {\n        clearStats();\n        getFormStats();\n    }, true);\n    PostFilters.setMode('activity');\n\n    function clearStats() {\n        $scope.crowdsourcedSurveyStatsByForm = [];\n        $scope.totalAll = 0;\n        $scope.totalWeb = 0;\n        $scope.totalEmail = 0;\n        $scope.totalSms = 0;\n        $scope.totalTwitter = 0;\n        $scope.unstructuredStats = {};\n    }\n\n    function getFormStats() {\n        FormEndpoint.query({ignore403: '@ignore403'}).$promise.then((forms) => {\n            if (!crowdsourcedSurveysExist(forms)) {\n                $scope.noSurveys = true;\n            } else {\n                $scope.noSurveys = false;\n                forms.forEach((form) => {\n                    if (!form.targeted_survey) {\n                        let query = PostFilters.getQueryParams($scope.filters) || {};\n                        let postQuery = _.extend({}, query, {\n                            formId: form.id,\n                            ignore403: '@ignore403'\n                        });\n\n                        FormStatsEndpoint.query(postQuery).$promise.then((stats) => {\n                            stats.name = form.name;\n                            $scope.crowdsourcedSurveyStatsByForm.push(stats);\n                            $scope.totalAll += parseInt(stats.total_by_data_source.all);\n                            $scope.totalWeb += parseInt(stats.total_by_data_source.web);\n                            $scope.totalEmail += parseInt(stats.total_by_data_source.email);\n                            $scope.totalSms += parseInt(stats.total_by_data_source.sms);\n                            $scope.totalTwitter += parseInt(stats.total_by_data_source.twitter);\n                        }).catch((err) => {\n                            $scope.noSurveys = true;\n                        });\n                    }\n                });\n                let query = PostFilters.getQueryParams($scope.filters) || {};\n                let postQuery = _.extend({}, query, {\n                    include_unmapped: true,\n                    group_by: 'form',\n                    has_location: 'all',\n                    order: 'desc',\n                    order_unlocked_on_top: true,\n                    orderby: 'created',\n                    status: 'all',\n                    form: 'none'\n                });\n\n                PostEndpoint.stats(postQuery).$promise.then((totals) => {\n                    $scope.unstructuredStats = {\n                        name: 'Unstructured Posts',\n                        all: 0,\n                        web: 0,\n                        email: 0,\n                        sms: 0,\n                        twitter: 0\n                    };\n                    totals.totals[0].values.forEach((stat) => {\n                        $scope.unstructuredStats[stat.type] = stat.total;\n                        $scope.unstructuredStats.all += stat.total;\n                    });\n                    $scope.totalAll += $scope.unstructuredStats.all;\n                    $scope.totalWeb += $scope.unstructuredStats.web;\n                    $scope.totalEmail += $scope.unstructuredStats.email;\n                    $scope.totalSms += $scope.unstructuredStats.sms;\n                    $scope.totalTwitter += $scope.unstructuredStats.twitter;\n                }).catch((err) => {\n                    $scope.noSurveys = true;\n                });\n            }\n        }).catch((err) => {\n            $scope.noSurveys = true;\n        });\n    }\n\n    function crowdsourcedSurveysExist(forms) {\n        return forms.find((form) => {\n            if (!form.targeted_survey) {\n                return true;\n            }\n        });\n    }\n}\n","module.exports = \"<div>\\n    <loading-dots button-class=\\\"'button-gamma button-flat'\\\" label=\\\"'app.loading'\\\" ng-if=\\\"!noSurveys && crowdsourcedSurveyStatsByForm.length === 0\\\"></loading-dots>\\n    <fieldset ng-if=\\\"crowdsourcedSurveyStatsByForm.length >= 1\\\">\\n        <table>\\n            <thead>\\n                <tr>\\n                    <th></th>\\n                    <th translate=\\\"activity.all_sources\\\">All Data Sources</th>\\n                    <th translate=\\\"activity.web_mobile\\\">Web and Mobile</th>\\n                    <th translate=\\\"activity.email\\\">Email</th>\\n                    <th translate=\\\"activity.sms\\\">SMS</th>\\n                    <th translate=\\\"activity.twitter\\\">Twitter</th>\\n                    \\n                </tr>\\n            </thead>\\n\\n            <tbody>\\n                <tr ng-repeat=\\\"survey in crowdsourcedSurveyStatsByForm\\\">\\n                    <td>{{survey.name}}</td>\\n                    <td>{{survey.total_by_data_source.all}}</td>\\n                    <td>{{survey.total_by_data_source.web}}</td>\\n                    <td>{{survey.total_by_data_source.email}}</td>\\n                    <td>{{survey.total_by_data_source.sms}}</td>\\n                    <td>{{survey.total_by_data_source.twitter}}</td>\\n                </tr>\\n                <tr>\\n                    <td>{{unstructuredStats.name}}</td>\\n                    <td>{{unstructuredStats.all}}</td>\\n                    <td>{{unstructuredStats.web}}</td>\\n                    <td>{{unstructuredStats.email}}</td>\\n                    <td>{{unstructuredStats.sms}}</td>\\n                    <td>{{unstructuredStats.twitter}}</td>\\n                </tr>\\n                <tr>\\n                    <td translate=\\\"activity.all_crowdsourced\\\">All Crowdsourced Surveys</td>\\n                    <td>{{totalAll}}</td>\\n                    <td>{{totalWeb}}</td>\\n                    <td>{{totalEmail}}</td>\\n                    <td>{{totalSms}}</td>\\n                    <td>{{totalTwitter}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </fieldset>\\n    <p translate=\\\"activity.no_crowdsourced\\\" ng-if=\\\"noSurveys\\\">You don't have any Crowdsourced Survey data to show.</p>\\n</div>\";","angular.module('ushahidi.settings', [])\n.directive('afterImportCsv', require('./data-import/data-after-import.directive.js'))\n.directive('importerCsv', require('./data-import/data-import.directive.js'))\n.service('ImportNotify', require('./data-import/import.notify.service.js'))\n.directive('hdxDetails', require('./data-export/hdx-details.directive.js'))\n\n.directive('surveyEditor', require('./surveys/survey-editor.directive.js'))\n.directive('surveyTaskCreate', require('./surveys/task-create.directive.js'))\n.directive('surveyAttributeCreate', require('./surveys/attribute-create.directive.js'))\n.directive('surveyAttributeEditor', require('./surveys/attribute-editor.directive.js'))\n.service('SurveyNotify', require('./surveys/survey.notify.service.js'))\n.directive('targetedQuestion', require('./surveys/targeted-surveys/targeted-question.directive.js'))\n.directive('settingsMap', require('./site/map.directive.js'))\n.directive('settingsEditor', require('./site/editor.directive.js'))\n\n.directive('filterUsers', require('./users/filter-users.directive.js'))\n\n.directive('customRoles', require('./roles/roles.directive.js'))\n.directive('customRolesEditor', require('./roles/editor.directive.js'))\n\n.directive('customWebhooks', require('./webhooks/webhooks.directive.js'))\n.directive('customWebhooksEditor', require('./webhooks/editor.directive.js'))\n\n.config(require('./settings.routes.js'));\n","module.exports = [\n    '$rootScope',\n    '$translate',\n    '$location',\n    'Notify',\n    'Features',\nfunction (\n    $rootScope,\n    $translate,\n    $location,\n    Notify,\n    Features\n) {\n    return {\n        restrict: 'A',\n        link: function ($scope, $element, $attrs) {\n            $scope.importComplete = false;\n\n            $rootScope.$on('event:import:complete', function (event, args) {\n                $scope.collectionId = args.collectionId;\n                $scope.filename = args.filename;\n                $scope.importComplete = true;\n            });\n        }\n    };\n}];\n","module.exports = [\n    '$translate',\n    '$rootScope',\n    '$q',\n    '$location',\n    'FormEndpoint',\n    'FormStageEndpoint',\n    'FormAttributeEndpoint',\n    'DataImportEndpoint',\n    'Notify',\n    'DataImport',\n    'Features',\n    'CollectionEndpoint',\n    'moment',\n    '_',\nfunction (\n    $translate,\n    $rootScope,\n    $q,\n    $location,\n    FormEndpoint,\n    FormStageEndpoint,\n    FormAttributeEndpoint,\n    DataImportEndpoint,\n    Notify,\n    DataImport,\n    Features,\n    CollectionEndpoint,\n    moment,\n    _\n) {\n    return {\n        restrict: 'A',\n        link: function ($scope, $element, $attrs) {\n\n            $scope.setStatus = setStatus;\n            $scope.setStatusOption = setStatusOption;\n            $scope.isStatusOption = isStatusOption;\n            $scope.isStatusSelected = isStatusSelected;\n            $scope.setSelectedForm = setSelectedForm;\n            $scope.isSelectedForm = isSelectedForm;\n            $scope.cancelImport = cancelImport;\n            $scope.deleteDataImport = deleteDataImport;\n            $scope.isActiveStep = isActiveStep;\n            $scope.completeStepOne = completeStepOne;\n            $scope.completeStepTwo = completeStepTwo;\n\n            activate();\n\n            function activate() {\n                $scope.selectedForm;\n                $scope.activeStep = 1;\n                $scope.stepOneComplete = false;\n                $scope.stepTwoComplete = false;\n                $scope.maps_to = {};\n                $scope.required_fields = [];\n                $scope.required_fields_map = {};\n                $scope.hasRequiredTask = false;\n\n                Features.loadFeatures().then(function () {\n                    $scope.csvEnabled = Features.isFeatureEnabled('data-import');\n                });\n            }\n\n            function setStatus(status) {\n                $scope.selectedStatus = status;\n            }\n\n            function setStatusOption(option) {\n                $scope.statusOption = option;\n            }\n\n            function isStatusOption(option) {\n                return $scope.statusOption === option;\n            }\n\n            function isStatusSelected(status) {\n                return $scope.selectedStatus === status;\n            }\n\n            function setSelectedForm(form) {\n                $scope.selectedForm = form;\n            }\n\n            function isSelectedForm(form) {\n                if ($scope.selectedForm) {\n                    return $scope.selectedForm.id === form.id;\n                }\n                return false;\n            }\n\n            function cancelImport() {\n                Notify.confirm('notify.data_import.csv_import_cancel_confirm').then(function () {\n                    Notify.notify('notify.data_import.csv_import_cancel');\n                    deleteDataImport($scope.csv);\n                    $location.url('/settings/data-import/');\n                });\n            }\n\n            function deleteDataImport() {\n                DataImportEndpoint.delete($scope.csv);\n            }\n\n            function isActiveStep(step) {\n                return $scope.activeStep === step;\n            }\n\n            function completeStepOne() {\n                if (!$scope.fileContainer.file) {\n                    Notify.error('notify.data_import.file_missing');\n                    return;\n                }\n\n                if (!$scope.selectedForm) {\n                    Notify.error('notify.data_import.form_missing');\n                    return;\n                }\n                var formData = new FormData();\n                formData.append('file', $scope.fileContainer.file);\n                formData.append('form_id', $scope.selectedForm.id);\n\n                DataImportEndpoint.upload(formData)\n                .then(function (csv) {\n                    Notify.notify('notify.data_import.csv_upload', {name: $scope.fileContainer.file.name});\n                    $scope.stepOneComplete = true;\n                    $scope.activeStep = 2;\n                    $scope.csv = csv;\n\n                    loadStepTwo();\n                }, function (errorResponse) {\n                    Notify.apiErrors(errorResponse);\n                });\n            }\n            function loadStepTwo(results) {\n                if (!$scope.csv.columns || ($scope.csv.columns.filter(c => c === '').length === $scope.csv.columns.length)) {\n                    Notify.error('notify.data_import.empty_mapping_empty');\n                    return false;\n                }\n                // Retrieve tasks and attributes\n                $q.all([\n                    FormStageEndpoint.getFresh({form_id: $scope.selectedForm.id}).$promise,\n                    FormAttributeEndpoint.getFresh({form_id: $scope.selectedForm.id}).$promise\n                ]).then(function (results) {\n                    $scope.selectedForm.tasks = results[0].results;\n                    $scope.selectedForm.attributes  = transformAttributes(results[1].results);\n                    setRequiredFields($scope.selectedForm.attributes);\n                    setRequiredTasks($scope.selectedForm.tasks);\n                });\n            }\n\n            function transformAttributes(attributes) {\n                // Split locations into lat/lon\n                var points = _.chain(attributes)\n                    .where({'type' : 'point'})\n                    .reduce(function (collection, item) {\n                        return collection.concat(\n                            {\n                                key: item.key + '.lat',\n                                label: item.label + ' (Latitude)',\n                                priority: item.priority,\n                                required: item.required\n                            }, {\n                                key: item.key + '.lon',\n                                label: item.label + ' (Longitude)',\n                                priority: item.priority,\n                                required: item.required\n                            }\n                        );\n                    }, [])\n                    .value();\n\n                var titleAttr = _.find(attributes, { type: 'title' });\n                var descAttr = _.find(attributes, { type: 'description' });\n\n                var titleLabel = titleAttr ? titleAttr.label : $translate.instant('post.modify.form.title');\n                var descLabel = descAttr ? descAttr.label : $translate.instant('post.modify.form.description');\n\n                attributes = _.chain(attributes)\n                    .reject({type : 'point'})\n                    .reject({type : 'title'})\n                    .reject({type : 'description'})\n                    .concat(points)\n                    // Add in the Post specific mappable fields\n                    .push({\n                            'key': 'title',\n                            'label': titleLabel,\n                            'priority': 0,\n                            'required': true\n                        },\n                        {\n                            'key': 'content',\n                            'label': descLabel,\n                            'priority': 1,\n                            'required': true\n                        }\n                    )\n                    .sortBy('priority')\n                    .value();\n                return attributes;\n            }\n\n            function setRequiredTasks(tasks) {\n                _.each(tasks, function (task) {\n                    if (task.required) {\n                        $scope.hasRequiredTask = true;\n                    }\n                });\n            }\n\n            function setRequiredFields(attributes) {\n                _.each(attributes, function (attribute, index) {\n                    if (attribute.required) {\n                        $scope.required_fields.push(attribute.key);\n                        $scope.required_fields_map[attribute.key] = attribute.label;\n                    }\n                });\n            }\n\n            function completeStepTwo() {\n                // First we must remap the csv.maps_to array so that\n                // it is in terms of csv column indexes\n                $scope.csv.maps_to = remapColumns();\n                if (!validateCSV()) {\n                    return;\n                }\n\n                $scope.csv.fixed = {\n                    'form': $scope.selectedForm.id\n                };\n\n                // Check if status has been set\n                if ($scope.selectedStatus) {\n                    if ($scope.isStatusOption('mark_as')) {\n                        // If status explicitly set\n                        $scope.csv.fixed.status = $scope.selectedStatus;\n                    } else {\n                        // If status set by csv column mapping\n                        $scope.csv.maps_to[$scope.selectedStatus] = 'status';\n                    }\n\n                }\n\n                updateAndImport($scope.csv);\n\n            }\n\n            function validateCSV() {\n                var csvIsValid = true;\n\n                if (_.every($scope.csv.maps_to, _.isEmpty)) {\n                    Notify.error('notify.data_import.no_mappings');\n                    return false;\n                }\n\n                var duplicateVars = checkForDuplicates();\n                var allDuplicatesAreEmpty = duplicateVars.filter((o)=> o === '').length === duplicateVars.length;\n                // if duplicate var only holds '' , warn that column names cannot be empty\n                if (duplicateVars.length > 0 && !allDuplicatesAreEmpty) {\n                    Notify.error('notify.data_import.duplicate_fields', {duplicates: duplicateVars.join(', ')});\n                    return false;\n                } else if (duplicateVars.length > 0) { // if duplicate var only holds '' , warn that column names cannot be empty\n                    Notify.error('notify.data_import.empty_mapping_empty');\n                    return false;\n                }\n\n                //Check required fields are set\n                var missing = checkRequiredFields($scope.csv.maps_to);\n                if (!_.isEmpty(missing)) {\n                    Notify.error('notify.data_import.required_fields', {required: missing.join(', ')});\n                    return false;\n                }\n\n                return csvIsValid;\n            }\n\n            function updateAndImport(csv) {\n                DataImportEndpoint.update(csv).$promise\n                    .then(function () {\n                        DataImportEndpoint.import({id: csv.id, action: 'import'}).$promise.then(function () {\n                            DataImport.startImport(csv);\n                        }).catch(errorResponse => {\n                            Notify.apiErrors(errorResponse);\n                            $location.url('/settings/data-import');\n                        });\n                    }, function (errorResponse) {\n                        Notify.apiErrors(errorResponse);\n                    });\n                // Go to after import page\n                $location.url('/settings/data-after-import');\n            }\n\n            // Check for missing required fields and return the missing fields\n            function checkRequiredFields(fields) {\n                var missing = [];\n                var difference = _.difference($scope.required_fields, _.toArray(fields));\n\n                if (!_.isEmpty(difference)) {\n                    _.each(difference, function (field) {\n                        missing.push(\n                            $scope.required_fields_map[field]\n                        );\n                    });\n                }\n\n                return missing;\n            }\n\n            function remapColumns() {\n                var map = _.clone($scope.maps_to);\n                // First we invert the mappings so they are in terms of csv column\n                // indices\n                map = _.invert(map);\n                // Remove empty values\n                map = _.omit(map, '');\n                // Then we set null values for unmapped columns\n                var keys = _.keys(map);\n                _.each($scope.csv.columns, function (column, index) {\n                    map[index] = _.contains(keys, index.toString()) ? map[index] : null;\n                });\n\n                return map;\n            }\n\n            function checkForDuplicates() {\n                // Check to make sure the user hasn't double mapped a key\n                // First, collect the counts for all keys\n                // Remove empty fields\n                var map = _.omit($scope.maps_to, function (value, key, object) {\n                    return value === '';\n                });\n                return _.chain(map)\n                            .map(function (item) {\n                                return $scope.csv.columns[item];\n                            })\n                            .countBy(function (item) {\n                                return item;\n                            })\n                            .pick(function (value, key) {\n                                return value > 1;\n                            })\n                            .allKeys()\n                            .value();\n            }\n        }\n    };\n}];\n","module.exports = ImportNotify;\n\nvar scope;\n\nImportNotify.$inject = ['_', '$q', '$rootScope', '$translate', 'SliderService', 'ModalService'];\nfunction ImportNotify(_, $q, $rootScope, $translate, SliderService, ModalService) {\n    return {\n        importComplete: importComplete\n    };\n\n    function importComplete(values) {\n        var scope = getScope();\n\n        scope = _.extend(scope, values);\n\n        showSlider();\n\n        function showSlider() {\n            SliderService.openTemplate(require('./import-complete.html'), 'thumb-up', 'confirmation', scope, false, false);\n        }\n    }\n\n    function getScope() {\n        if (scope) {\n            scope.$destroy();\n        }\n        scope = $rootScope.$new();\n        return scope;\n    }\n}\n","module.exports = \"<p translate-values=\\\"{processed: processed, errors: errors}\\\"translate=\\\"notify.data_import.csv_import_processed_errors\\\">\\n  <strong>Your CSV import</strong> is complete. {{processed}} records imported, {{errors}} records failed.\\n</p>\\n<p translate-values=\\\"{from_name: form_name, filename: filename}\\\" translate=\\\"notify.data_import.csv_import_success_info\\\">\\n  The data from your CSV spreadsheet, <em>{{filename}}</em>, was successfully imported into your <a ui-sref=\\\"posts.data\\\">{{form_name}}</a> survey.\\n</p>\\n<a class=\\\"button button-alpha\\\" ng-click=\\\"close()\\\" ng-href=\\\"/collections/{{collectionId}}\\\" translate=\\\"notify.data_import.see_imported_posts\\\">See imported posts</a>\\n<a ng-click=\\\"close()\\\" ui-sref=\\\"settings.dataImport\\\" class=\\\"button button-gamma button-flat\\\" translate=\\\"data_import.import_another_csv\\\">Import another CSV file</a>\\n<button class=\\\"button-flat message-trigger\\\" ng-click=\\\"close()\\\" translate=\\\"message.button.dismiss\\\">\\n    Dismiss\\n</button>\\n\";","module.exports = HdxDetails;\n\nHdxDetails.$inject = [];\nfunction HdxDetails() {\n    return {\n        restrict: 'E',\n        controller: HdxDetailsController,\n        template: require('./hdx-details.html')\n    };\n}\n\nHdxDetailsController.$inject = [\n    '$scope',\n    '$rootScope',\n    '$stateParams',\n    'LoadingProgress',\n    'Features',\n    'ConfigEndpoint',\n    'HxlLicenseEndpoint',\n    'HxlOrganisationsEndpoint',\n    '$state',\n    'HxlMetadataEndpoint',\n    'DataExport',\n    'Notify'\n];\nfunction HdxDetailsController($scope, $rootScope, $stateParams, LoadingProgress, Features, ConfigEndpoint, HxlLicenseEndpoint, HxlOrganisationsEndpoint, $state, HxlMetadataEndpoint, DataExport, Notify) {\n    $scope.exportJob = $stateParams.exportJob;\n    $scope.uploadToHdx = uploadToHdx;\n    $scope.error = false;\n    $scope.isLoading = LoadingProgress.getLoadingState;\n    $scope.showProgress = false;\n    $scope.title = 'data_export.add_details';\n    $scope.description = 'data_export.details_desc';\n    $scope.details = {\n        private: true\n    };\n    // Checking feature-flag for user-settings and hxl\n    Features.loadFeatures().then(function () {\n        if (!Features.isFeatureEnabled('hxl')) {\n            $state.go('posts.map.all');\n        }\n    });\n    // Change layout class\n    $rootScope.setLayout('layout-c');\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n    activate();\n\n    function activate() {\n        // todo: once we get metadata, check if there is an ongoing export-job with metadata already\n        // HxlMetadataEndpoint.get({export_job_id: $state.params.jobId}).$promise.then((response) => {\n        //     if(response.id) {\n        //         $scope.showProgress = true;\n        //         $scope.title = 'data_export.uploading_data';\n        //         $scope.description = 'data_export.uploading_data_desc';\n        //     }\n        // });\n\n        // Pre-populating source with deployment-name\n        ConfigEndpoint.get({id: 'site'}, function (site) {\n            $scope.details.source = site.name;\n        });\n\n        HxlLicenseEndpoint.get().$promise.then((response) => {\n            $scope.licenses = response.results;\n        });\n\n        HxlOrganisationsEndpoint.get().$promise.then((response) => {\n            $scope.organisations = response.results;\n        });\n    }\n\n    function uploadToHdx() {\n        if ($scope.metadata.$valid) {\n            $scope.details.export_job_id = parseInt($state.params.jobId);\n            $scope.details.user_id = $rootScope.currentUser.userId;\n            $scope.details.organisation_id = $scope.details.organisation.id;\n            $scope.details.organisation_name = $scope.details.organisation.name;\n\n            HxlMetadataEndpoint.save($scope.details).$promise.then((response) => {\n                if (response.id) {\n                    $scope.exportJob.hxl_meta_data_id = response.id;\n                    DataExport.startExport($scope.exportJob).then((response)=> {\n                        $scope.showProgress = true;\n                        $scope.title = 'data_export.uploading_data';\n                        $scope.description = 'data_export.uploading_data_desc';\n                    });\n                }\n            }, (err) => {\n                Notify.error('data_export.uploading_data_err');\n            });\n            $scope.error = false;\n        } else {\n            $scope.error = true;\n        }\n    }\n}\n","module.exports = \"\\n<div class=\\\"mode-context init\\\" dropdown>\\n\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>nav.export</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n        <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n    </span>\\n</div>\\n\\n\\n<main role=\\\"main\\\">\\n    <div class=\\\"progress-bar\\\" ng-show=\\\"isLoading()\\\">\\n        <span>\\n        ..\\n        </span>\\n    </div>\\n    \\n    <div class=\\\"main-col\\\">\\n        <div class=\\\"form-sheet hdx\\\">\\n            <div class=\\\"form-sheet-summary\\\">\\n                <h2 class=\\\"form-sheet-title\\\" translate>{{title}}</h2>\\n                <p translate>{{description}}</p>\\n            </div>\\n            <img class=\\\"field-logo\\\" src=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/hdx-logo.png\") + \"\\\" />\\n            <div class=\\\"form-field\\\" ng-if=\\\"!showProgress\\\">\\n                <h3 translate=\\\"data_export.privacy_title\\\">Privacy Settings</h3>\\n                <p translate=\\\"data_export.privacy_desc\\\">You have a choice of sharing your dataset publicly or restricting access to other members of the organisation which owns the dataset.</p>\\n            </div>\\n\\n            <form name=\\\"metadata\\\" ng-show=\\\"!showProgress\\\">\\n                <fieldset>\\n                    <legend class=\\\"required\\\" translate=\\\"data_export.this_dataset\\\">This data set is:</legend>\\n                    <div class=\\\"form-field radio\\\">\\n                        <label for=\\\"private\\\" translate=\\\"data_export.private_desc\\\"></label>\\n                        <input id=\\\"private\\\" type=\\\"radio\\\" ng-value=\\\"true\\\" ng-model=\\\"details.private\\\">\\n                    </div>\\n                    <div class=\\\"form-field radio\\\">\\n                        <label for=\\\"public\\\" translate=\\\"data_export.public_desc\\\"></label>\\n                        <input id=\\\"public\\\" ng-value=\\\"false\\\" ng-model=\\\"details.private\\\" type=\\\"radio\\\">\\n\\n                    </div>\\n                </fieldset>\\n\\n                <div class=\\\"form-field\\\">\\n                    <h3 translate=\\\"data_export.dataset\\\">Dataset Title & Description</h3>\\n                    <p translate=\\\"data_export.dataset_desc\\\">When users search for data on HDX, their search terms will be matched to terms in your title. Avoid using abbreviations in the title which may not be familiar to all users. Also,\\n                        avoid using words such as current, latest or previous when referring to the time period (e.g Latest 3W) as these terms become misleading as the dataset ages.</p>\\n                    <p translate=\\\"data_export.dataset_example\\\">Example dataset title: <strong>Who is Doing What Where in Afghanistan, Jan-Dec 2015</strong></p>\\n                </div>\\n\\n                <div class=\\\"form-field\\\" ng-class=\\\"{\\n                        'error': metadata.title.$invalid && metadata.title.$dirty,\\n                        'success': !metadata.title.$invalid && metadata.title.$dirty\\n                    }\\\">\\n                    <label class=\\\"required\\\" translate=\\\"data_export.dataset_title\\\">Title of data set</label>\\n                    <input name=\\\"title\\\" placeholder=\\\"e.g a descriptive title\\\" ng-model=\\\"details.dataset_title\\\" ng-required=\\\"true\\\" type=\\\"text\\\">\\n                    <div\\n                        class=\\\"alert error\\\"\\n                        ng-show=\\\"metadata.title.$invalid && metadata.title.$dirty\\\"\\n                        ng-repeat=\\\"(error, value) in metadata.title.$error\\\"\\n                    >\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                        </svg>\\n                        <p translate=\\\"{{'data_export.validation.title'}}\\\"></p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-field\\\">\\n                    <h3 translate=\\\"data_export.metadata_title\\\">Metadata</h3>\\n                    <p translate=\\\"data_export.metadata_desc\\\">Metadata is additional information about your dataset that will make it easier for others to understand and put your data into context. Datasets on HDX must include a set of metadata fields</p>\\n                </div>\\n\\n                <div class=\\\"form-field\\\" ng-class=\\\"{\\n                    'error': metadata.source.$invalid && metadata.source.$dirty,\\n                    'success': !metadata.source.$invalid && metadata.source.$dirty\\n                }\\\">\\n                    <label for=\\\"source\\\" class=\\\"required\\\" translate=\\\"data_export.source\\\">Source</label>\\n                    <input name=\\\"source\\\" ng-required=\\\"true\\\" placeholder=\\\"Add the source of the data\\\" ng-model=\\\"details.source\\\" type=\\\"text\\\">\\n                    <div\\n                        class=\\\"alert error\\\"\\n                        ng-show=\\\"metadata.source.$invalid && metadata.source.$dirty\\\"\\n                        ng-repeat=\\\"(error, value) in metadata.source.$error\\\"\\n                    >\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                        </svg>\\n                        <p translate=\\\"{{'data_export.validation.source.' + error}}\\\"></p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-field\\\" ng-class=\\\"{\\n                    'error': metadata.organisation.$invalid && metadata.organisation.$dirty,\\n                    'success': !metadata.organisation.$invalid && metadata.organisation.$dirty\\n                }\\\">\\n                    <label class=\\\"required\\\" for=\\\"organisation\\\" translate=\\\"data_export.organisation\\\">Organisation</label>\\n                    <div class=\\\"custom-select\\\" >\\n                        <select name=\\\"organisation\\\" ng-required=\\\"true\\\" id=\\\"organisation\\\" ng-model=\\\"details.organisation\\\">\\n                            <option value=\\\"\\\" translate=\\\"data_export.select_organisation\\\">Select an organisation</option>\\n                            <option ng-repeat=\\\"organisation in organisations\\\" ng-value=\\\"organisation\\\">{{organisation.name}}</option>\\n                        </select>\\n                    </div>\\n                    <div\\n                        class=\\\"alert error\\\"\\n                        ng-show=\\\"metadata.organisation.$invalid && metadata.organisation.$dirty\\\"\\n                        ng-repeat=\\\"(error, value) in metadata.organisation.$error\\\"\\n                    >\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                        </svg>\\n                        <p translate=\\\"{{'data_export.validation.organisation'}}\\\"></p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-field\\\" ng-class=\\\"{\\n                    'error': metadata.license.$invalid && metadata.license.$dirty,\\n                    'success': !metadata.license.$invalid && metadata.license.$dirty\\n                }\\\">\\n                    <label class=\\\"required\\\" for=\\\"license\\\" translate=\\\"data_export.license\\\">License</label>\\n                    <div class=\\\"custom-select\\\">\\n                        <select id=\\\"license\\\" ng-required=\\\"true\\\" name=\\\"license\\\" ng-model=\\\"details.license_id\\\">\\n                            <option value=\\\"\\\" translate=\\\"data_export.add_license\\\">Add license</option>\\n                            <option ng-repeat=\\\"license in licenses\\\" ng-value=\\\"license.id\\\">{{license.name}}</option>\\n                        </select>\\n                    </div>\\n                    <a href=\\\"#\\\" class=\\\"link-blue\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                        </svg>\\n                        {{'data_export.read_more_licenses' | translate}}\\n                    </a>\\n                    <div\\n                        class=\\\"alert error\\\"\\n                        ng-show=\\\"metadata.license.$invalid && metadata.license.$dirty\\\"\\n                        ng-repeat=\\\"(error, value) in metadata.license.$error\\\"\\n                    >\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                        </svg>\\n                        <p translate=\\\"{{'data_export.validation.license'}}\\\"></p>\\n                    </div>\\n                </div>\\n\\n                <div\\n                    class=\\\"form-field alert error\\\"\\n                    ng-show=\\\"error\\\"\\n                >\\n                    <svg class=\\\"iconic\\\">\\n                        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                    </svg>\\n                    <p translate=\\\"data_export.validation.all_fields\\\">Please fill in all required fields</p>\\n                </div>\\n\\n                <div class=\\\"form-field button-group\\\">\\n                    <button class=\\\"button button-alpha\\\" ng-click=\\\"uploadToHdx()\\\" translate=\\\"data_export.submit_hdx\\\">Submit to HDX Account</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</main>\\n\";","module.exports = SurveyEditor;\n\nSurveyEditor.$inject = [];\nfunction SurveyEditor() {\n    return {\n        restrict: 'E',\n        scope: {\n            surveyId: '=',\n            actionType: '='\n        },\n        controller: SurveyEditorController,\n        template: require('./survey-editor.html')\n    };\n}\n\nSurveyEditorController.$inject = [\n    '$scope',\n    '$q',\n    '$location',\n    '$translate',\n    '$state',\n    'FormEndpoint',\n    'FormRoleEndpoint',\n    'FormStageEndpoint',\n    'FormAttributeEndpoint',\n    'ConfigEndpoint',\n    'RoleEndpoint',\n    'TagEndpoint',\n    '_',\n    'Notify',\n    'SurveyNotify',\n    'ModalService',\n    'Features'\n];\nfunction SurveyEditorController(\n    $scope,\n    $q,\n    $location,\n    $translate,\n    $state,\n    FormEndpoint,\n    FormRoleEndpoint,\n    FormStageEndpoint,\n    FormAttributeEndpoint,\n    ConfigEndpoint,\n    RoleEndpoint,\n    TagEndpoint,\n    _,\n    Notify,\n    SurveyNotify,\n    ModalService,\n    Features\n) {\n    $scope.saving = false;\n    $scope.currentInterimId = 0;\n    $scope.survey = {\n        color: null\n    };\n    $scope.canReorderTask = canReorderTask;\n    $scope.moveTaskUp = moveTaskUp;\n    $scope.moveTaskDown = moveTaskDown;\n    $scope.isFirstTask = isFirstTask;\n    $scope.isLastTask = isLastTask;\n    $scope.deleteTask = deleteTask;\n    $scope.duplicateSection = duplicateSection;\n    $scope.openTaskModal = openTaskModal;\n    $scope.addNewTask = addNewTask;\n\n    $scope.openAttributeModal = openAttributeModal;\n    $scope.openAttributeEditModal = openAttributeEditModal;\n    $scope.addNewAttribute = addNewAttribute;\n\n    $scope.moveAttributeUp = moveAttributeUp;\n    $scope.moveAttributeDown = moveAttributeDown;\n    $scope.isFirstAttribute = isFirstAttribute;\n    $scope.isLastAttribute = isLastAttribute;\n\n    $scope.deleteAttribute = deleteAttribute;\n    $scope.saving_survey = false;\n    $scope.saveSurvey = saveSurvey;\n    $scope.cancel = cancel;\n\n    $scope.toggleTaskRequired = toggleTaskRequired;\n    $scope.toggleAttributeRequired = toggleAttributeRequired;\n    $scope.toggleTaskPublic = toggleTaskPublic;\n\n    $scope.changeTaskLabel = changeTaskLabel;\n\n    $scope.getInterimId = getInterimId;\n    $scope.removeInterimIds = removeInterimIds;\n\n    $scope.switchTab = switchTab;\n\n    $scope.loadRoleData = loadRoleData;\n    $scope.roles_allowed = [];\n    $scope.roles = [];\n\n    $scope.onlyOptional = onlyOptional;\n    $scope.anonymiseReportersEnabled = false;\n    $scope.location_precision = 1000;\n\n    activate();\n\n    function activate() {\n        $scope.tab_history = {};\n\n        // Set initial menu tab\n        $scope.switchTab('post', 'survey-build');\n\n        $scope.loadRoleData();\n        $scope.save = $translate.instant('app.save');\n        $scope.saving = $translate.instant('app.saving');\n\n        ConfigEndpoint.get({id: 'map'}, function (map) {\n            $scope.location_precision = 1000 / Math.pow(10, map.location_precision);\n        });\n\n        Features.loadFeatures()\n        .then(() => {\n            $scope.targetedSurveysEnabled = Features.isFeatureEnabled('targeted-surveys');\n            $scope.anonymiseReportersEnabled = Features.isFeatureEnabled('anonymise-reporters');\n        });\n\n        if ($scope.surveyId) {\n            loadFormData();\n        } else {\n            // When creating new survey\n            // pre-fill object with default tasks and attributes\n            $scope.survey = {\n                color: null,\n                require_approval: true,\n                everyone_can_create: true,\n                tasks: [\n                    {\n                        label: 'Post',\n                        priority: 0,\n                        required: false,\n                        type: 'post',\n                        show_when_published: true,\n                        task_is_internal_only: false,\n                        attributes: [\n                            {\n                                cardinality: 0,\n                                input: 'text',\n                                label: 'Title',\n                                priority: 1,\n                                required: true,\n                                type: 'title',\n                                options: [],\n                                config: {},\n                                form_stage_id: getInterimId()\n                            },\n                            {\n                                cardinality: 0,\n                                input: 'text',\n                                label: 'Description',\n                                priority: 2,\n                                required: true,\n                                type: 'description',\n                                options: [],\n                                config: {},\n                                form_stage_id: getInterimId()\n                            }\n                        ],\n                        is_public: true\n                    }\n                ]\n            };\n\n            $scope.survey.tasks[0].id = $scope.getInterimId();\n        }\n\n        loadAvailableForms();\n        loadAvailableCategories();\n\n        if (!$scope.surveyId) {\n            $q.all([Features.loadFeatures(), FormEndpoint.queryFresh().$promise]).then(function (data) {\n                var forms_limit = Features.getLimit('forms');\n                // When limit is TRUE , it means no limit\n                // @todo run check before render\n                if (forms_limit !== true && forms_limit <= data[1].length) {\n                    Notify.limit('limit.post_type_limit_reached');\n                    $location.path('settings/surveys');\n                }\n            });\n        }\n    }\n\n\n    function onlyOptional(editAttribute) {\n        return editAttribute.type !== 'title' && editAttribute.type !== 'description';\n    }\n\n    function switchTab(section, tab) {\n\n        // First unset last active tab\n        var old_tab = $scope.tab_history[section];\n        if (old_tab) {\n            var old_tab_li = old_tab + '-li';\n            angular.element(document.getElementById(old_tab)).removeClass('active');\n            angular.element(document.getElementById(old_tab_li)).removeClass('active');\n        }\n        // Set new active tab\n        tab = tab + '-' + section;\n        $scope.tab_history[section] = tab;\n        var tab_li = tab + '-li';\n        angular.element(document.getElementById(tab)).addClass('active');\n        angular.element(document.getElementById(tab_li)).addClass('active');\n    }\n\n    function getInterimId() {\n        var id = 'interim_id_' + $scope.currentInterimId;\n        $scope.currentInterimId++;\n        return id;\n    }\n\n    function removeInterimIds() {\n        _.each($scope.survey.tasks, function (task) {\n            task.id = !_.isString(task.id) ? task.id : undefined;\n        });\n    }\n\n    function loadAvailableForms() {\n        // Get available forms for relation field\n        FormEndpoint.queryFresh().$promise.then(function (forms) {\n            $scope.availableForms = forms;\n        });\n    }\n    function loadAvailableCategories() {\n        // Get available categories.\n        TagEndpoint.queryFresh().$promise.then(function (tags) {\n            $scope.availableCategories = tags;\n            // adding category-objects attribute-options\n            $scope.availableCategories = _.chain($scope.availableCategories)\n                .map(function (category) {\n                    const ret = _.findWhere($scope.availableCategories, {id: category.id});\n                    if (ret && ret.children.length > 0) {\n                        ret.children = _.chain(ret.children)\n                            .map(function (child) {\n                                return _.findWhere($scope.availableCategories, {id: child.id});\n                            })\n                            .filter()\n                            .value();\n                    }\n                    return ret;\n                })\n                .filter()\n                .value();\n\n        });\n    }\n\n    function loadFormData() {\n        // If we're editing an existing survey,\n        // load the survey info and all the fields.\n        $q.all([\n            FormEndpoint.getFresh({ id: $scope.surveyId }).$promise,\n            FormStageEndpoint.queryFresh({ formId: $scope.surveyId }).$promise,\n            FormAttributeEndpoint.queryFresh({ formId: $scope.surveyId }).$promise,\n            FormRoleEndpoint.queryFresh({ formId: $scope.surveyId }).$promise\n        ]).then(function (results) {\n            var survey = results[0];\n            survey.tasks = _.sortBy(results[1], 'priority');\n            var attributes = _.chain(results[2])\n                .sortBy('priority')\n                .value();\n            _.each(attributes, function (attr) {\n                    if (attr.type === 'tags') {\n                        attr.options = _.map(attr.options, function (option) {\n                            return parseInt(option);\n                        });\n                    }\n                });\n            _.each(survey.tasks, function (task) {\n                // Set initial menu tab\n                $scope.switchTab(task.id, 'section-build');\n                task.attributes = _.filter(attributes, function (attribute) {\n                    return attribute.form_stage_id === task.id;\n                });\n            });\n            //survey.grouped_attributes = _.sortBy(survey.attributes, 'form_stage_id');\n            $scope.survey = survey;\n\n            var roles_allowed = results[3];\n\n            $scope.roles_allowed = _.pluck(roles_allowed, 'role_id');\n            // Remove source survey information\n            if ($scope.actionType === 'duplicate') {\n\n                $scope.survey.name = undefined;\n                $scope.survey.description = undefined;\n\n                delete $scope.survey.id;\n                delete $scope.survey.created;\n                delete $scope.survey.updated;\n                delete $scope.survey.url;\n                delete $scope.survey.can_create;\n                delete $scope.survey.tags;\n\n                // Reset Task and Attribute IDs\n                _.each($scope.survey.tasks, function (task) {\n                    task.form_id = undefined;\n                    task.id = $scope.getInterimId();\n                    delete task.url;\n\n                    _.each(task.attributes, function (attribute) {\n                        attribute.form_stage_id = task.id;\n                        delete attribute.id;\n                        delete attribute.url;\n                        delete attribute.key;\n                    });\n                });\n            }\n        });\n    }\n\n    function loadRoleData() {\n        $q.all([\n            RoleEndpoint.query().$promise\n        ]).then(function (results) {\n            $scope.roles = results[0];\n        });\n    }\n\n    function cancel() {\n        $location.url('/settings/surveys');\n    }\n\n    function handleResponseErrors(errorResponse) {\n        $scope.saving_survey = false;\n        Notify.apiErrors(errorResponse);\n    }\n\n    // START -- Reorder tasks\n    // This function assumes the default\n    // Post task is unmoveable\n    function isFirstTask(task) {\n        var tasks = $scope.survey.tasks,\n            // Find our current stage\n            index = _.indexOf(tasks, task);\n        return index === 1;\n    }\n\n    function isLastTask(task) {\n        var tasks = $scope.survey.tasks,\n            // Find our current stage\n            index = _.indexOf(tasks, task);\n        return index === tasks.length - 1;\n    }\n\n    // START -- Reorder tasks\n    function isFirstAttribute(task, attribute) {\n        var attributes = task.attributes,\n            // Find our current attribute\n            index = _.indexOf(attributes, attribute);\n        return index === 0;\n    }\n\n    function isLastAttribute(task, attribute) {\n        var attributes = task.attributes,\n            // Find our current attribute\n            index = _.indexOf(attributes, attribute);\n        return index === attributes.length - 1;\n    }\n\n    function canReorderTask(task) {\n        //Only the Post task can not be reordered\n        return task.label !== 'Post';\n    }\n\n    function moveTaskUp(task) {\n        changeTaskPriority(task, -1);\n    }\n\n    function moveTaskDown(task) {\n        changeTaskPriority(task, 1);\n    }\n\n    function moveAttributeUp(task, attribute) {\n        changeAttributePriority(task, attribute, -1);\n    }\n\n    function moveAttributeDown(task, attribute) {\n        changeAttributePriority(task, attribute, 1);\n    }\n\n    function changeAttributePriority(task, attribute, increment) {\n        var attributes = task.attributes,\n            // Find our current stage\n            index = _.indexOf(attributes, attribute),\n            // Grab prev/next stage\n            next = attributes[index + increment];\n\n        // Check we're not at the end of the list\n        if (_.isUndefined(next)) {\n            return;\n        }\n        // Swap priorities\n        next.priority = attribute.priority;\n        attribute.priority = attribute.priority + increment;\n\n        // Resort attribute list\n        task.attributes = _.sortBy(attributes, 'priority');\n    }\n\n    function changeTaskPriority(task, increment) {\n        var tasks = $scope.survey.tasks,\n            // Find our current stage\n            index = _.indexOf(tasks, task),\n            // Grab prev/next stage\n            next = tasks[index + increment];\n\n        // Check we're not at the end of the list\n        if (_.isUndefined(next)) {\n            return;\n        }\n        // Swap priorities\n        next.priority = task.priority;\n        task.priority = task.priority + increment;\n\n        // Resort stage list\n        $scope.survey.tasks = _.sortBy(tasks, 'priority');\n    }\n\n    function changeTaskLabel(task) {\n        // Task labels must be unique\n\n        // If the task is not yet saved we need to make sure to update\n        // it's attributes form_stage_id as this is their linkage\n        if (!task.id) {\n            _.each(task.attributes, function (attribute) {\n                attribute.form_stage_id = task.label;\n            });\n        }\n\n    }\n    // END - reorder tasks\n\n    // Start Modify Tasks\n    function openTaskModal() {\n        ModalService.openTemplate('<survey-task-create></survey-task-create>', 'survey.add_task', '', $scope, true, true);\n    }\n\n    function getNewTaskPriority() {\n        return $scope.survey.tasks.length ? _.last($scope.survey.tasks).priority + 1 : 0;\n    }\n\n    function getNewAttributePriority(task) {\n        return task.attributes.length ? _.last(task.attributes).priority + 1 : 0;\n    }\n\n    function addNewTask(task) {\n        ModalService.close();\n        // Set task priority\n        task.priority = getNewTaskPriority();\n        task.id = $scope.getInterimId();\n        $scope.survey.tasks.push(task);\n        $scope.switchTab(task.id, 'section-build');\n    }\n\n    function openAttributeModal(task) {\n        // Set active task so we know who this attribute will belong to\n        $scope.activeTask = task;\n        ModalService.openTemplate('<survey-attribute-create></survey-attribute-create>', 'survey.add_field', '', $scope, true, true);\n    }\n\n    function openAttributeEditModal(task, attribute) {\n        // If creating a new attribute we need to close\n        // the type picker first\n        $scope.activeTask = task;\n        if (!attribute.form_stage_id) {\n            ModalService.close();\n        }\n        $scope.editAttribute = attribute;\n        var title = attribute.id ? 'survey.edit_field' : 'survey.add_field';\n        ModalService.openTemplate('<survey-attribute-editor></survey-attribute-editor>', title, '', $scope, true, true);\n    }\n\n    function addNewAttribute(attribute, task) {\n        ModalService.close();\n        // Set active task as form_stage_id\n        // If this task is new and has not been saved\n        // it won't have an id so in this instance we use its label\n        // Labels are not guaranteed to be unique\n        // TODO refactor this\n        if (!attribute.form_stage_id) {\n            // Set attribute priority\n            attribute.priority = getNewAttributePriority(task);\n            attribute.form_stage_id = task.id ? task.id : task.label;\n            task.attributes.push(attribute);\n        }\n    }\n\n    function deleteAttribute(attribute, task) {\n        Notify.confirmDelete('notify.form.delete_attribute_confirm', 'notify.form.delete_attribute_confirm_desc').then(function () {\n            // If we have not yet saved this attribute\n            // we can drop it immediately\n            if (!attribute.id) {\n                task.attributes = _.filter(task.attributes, function (item) {\n                    return item.label !== attribute.label;\n                });\n                // Attribute delete is currently only available in modal\n                // so close the modal\n                ModalService.close();\n                return;\n            }\n\n            FormAttributeEndpoint.delete({\n                formId: $scope.survey.id,\n                id: attribute.id\n            }).$promise.then(function (attribute) {\n                // Remove attribute from scope, binding should take care of the rest\n                var index = _.findIndex(task.attributes, function (item) {\n                    return item.id === attribute.id;\n                });\n\n                task.attributes.splice(index, 1);\n\n                FormStageEndpoint.invalidateCache();\n\n                Notify.notify('notify.form.destroy_attribute_success', {name: attribute.label});\n\n                // Attribute is only available in modal so\n                // close the modal\n                ModalService.close();\n            });\n        });\n    }\n\n    function duplicateSection(task) {\n        var dup = angular.copy(task);\n        dup.label = undefined;\n        dup.description = undefined;\n        dup.id = getInterimId();\n        _.each(dup.attributes, function (attribute) {\n            delete attribute.id;\n            delete attribute.url;\n            delete attribute.key;\n            attribute.form_stage_id = dup.id;\n        });\n        $scope.survey.tasks.push(dup);\n        $scope.switchTab(dup.id, 'section-build');\n    }\n\n    function deleteTask(task) {\n\n        Notify.confirmDelete('notify.form.delete_stage_confirm', 'notify.form.delete_stage_confirm_desc').then(function () {\n            // If we haven't saved the task yet then we can just drop it\n            if (!task.id || _.isString(task.id)) {\n                $scope.survey.tasks = _.filter($scope.survey.tasks, function (item) {\n                    return item.label !== task.label;\n                });\n                return;\n            }\n\n            FormStageEndpoint.delete({\n                formId: $scope.survey.id,\n                id: task.id\n            }).$promise.then(function () {\n                // Remove stage from scope, binding should take care of the rest\n                Notify.notify('notify.form.destroy_stage_success', {name: task.label});\n\n                $scope.survey.tasks = _.filter($scope.survey.tasks, function (item) {\n                    return item.id !== task.id;\n                });\n\n            });\n        });\n    }\n    // END - modify task\n\n    //Start - modify Survey\n\n    function saveSurvey() {\n        // Set saving to true to disable user actions\n        $scope.saving_survey = true;\n        // Save the survey\n        FormEndpoint\n        .saveCache($scope.survey)\n        .$promise\n        .then(function (survey) {\n            // If the survey is new, cache the new id\n            if ($scope.survey.id !== survey.id) {\n                $scope.survey.id = survey.id;\n            }\n            // Save tasks and roles and return promises\n            return $q.all([saveTasks(), saveRoles()]);\n        })\n        .then(function () {\n            // Save attributes and return promises\n            return saveAttributes();\n        })\n        .then(function () {\n            // Display success message\n            SurveyNotify.success(\n                'notify.form.edit_form_success',\n                { name: $scope.survey.name },\n                { formId: $scope.survey.id }\n            );\n\n            // Redirect to survey list\n            $state.go('settings.surveys', {}, { reload: true });\n        })\n        // Catch and handle errors\n        .catch(handleResponseErrors);\n    }\n\n    function saveTasks() {\n        var promises = [];\n        // Remove interim ids from tasks\n        $scope.removeInterimIds();\n        _.each($scope.survey.tasks, function (task) {\n            // Assign survey id to each task\n            task.form_id = $scope.survey.id;\n            // Add each task to promise array\n            promises.push(\n                FormStageEndpoint\n                .saveCache(_.extend(task, { formId: $scope.survey.id }))\n                .$promise\n            );\n        });\n        return $q.all(promises).then(function (tasks) {\n            // Ensure tasks are ordered by priority\n            tasks = _.sortBy(tasks, 'priority');\n            // Associate tasks to preserve attributes\n            _.each(tasks, function (task, index) {\n                _.extend($scope.survey.tasks[index], task);\n            });\n        });\n    }\n\n    function saveAttributes() {\n        var promises = [];\n        _.each($scope.survey.tasks, function (task) {\n            _.each(task.attributes, function (attribute) {\n                // Remove faulty category ids from each attribute\n                if (attribute.type === 'tags') {\n                    attribute.options = _.filter(attribute.options, function (option) {\n                        return !isNaN(option);\n                    });\n                }\n                // Assign stage id to each attribute\n                attribute.form_stage_id = task.id;\n                // Add each attribute to promise array\n                promises.push(\n                    FormAttributeEndpoint\n                    .saveCache(_.extend(attribute, { formId: $scope.survey.id }))\n                    .$promise\n                );\n            });\n        });\n        return $q.all(promises);\n    }\n\n    function saveRoles() {\n        // adding admin to roles_allowed if not already there\n        let admin = _.findWhere($scope.roles, {name: 'admin'});\n        if (!$scope.survey.everyone_can_create && _.indexOf($scope.roles_allowed, admin.id) === -1) {\n            $scope.roles_allowed.push(admin.id);\n        }\n        return FormRoleEndpoint\n        .saveCache(_.extend({ roles: $scope.roles_allowed }, { formId: $scope.survey.id }))\n        .$promise;\n    }\n\n    function toggleTaskRequired(task) {\n        task.required = !task.required;\n    }\n\n    function toggleTaskPublic(task) {\n        task.is_public = !task.is_public;\n    }\n\n    function toggleAttributeRequired(attribute) {\n        attribute.required = !attribute.required;\n    }\n\n    // Options functions\n    $scope.hasOptions = function (attribute) {\n        return _.contains(['checkbox', 'radio', 'select'], attribute.input);\n    };\n    $scope.removeOption = function (attribute, key) {\n        attribute.options.splice(key, 1);\n    };\n    $scope.addOption = function (attribute) {\n        attribute.options.push('');\n    };\n}\n","module.exports = \"<div>\\n  <!-- mode-context needs to be in each template -->\\n  <div class=\\\"mode-context init\\\" dropdown>\\n      <header class=\\\"mode-context-header\\\">\\n          <ol class=\\\"breadcrumbs\\\">\\n              <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n              <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n              <li><a href=\\\"/settings/surveys\\\" translate>app.surveys</a></li>\\n          </ol>\\n          <h1 ng-show=\\\"survey.id\\\" class=\\\"mode-context-title\\\" translate>app.edit_survey</h1>\\n          <h1 ng-show=\\\"!survey.id\\\" class=\\\"mode-context-title\\\" translate>app.add_survey</h1>\\n          <a ng-show=\\\"targetedSurveysEnabled\\\" ui-sref=\\\"settings.surveys.targeted.create\\\"><span translate=\\\"settings.send_targeted\\\">Send a targeted survey via SMS</span> ></a>\\n      </header>\\n\\n      <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n          <svg class=\\\"iconic\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n          </svg>\\n          <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n      </span>\\n  </div>\\n\\n  <main role=\\\"main\\\">\\n    <!-- toolbar -->\\n    <div class=\\\"toolbar\\\">\\n        <div class=\\\"button-group\\\">\\n            <button type=\\\"button\\\" class=\\\"button-flat\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  ng-if=\\\"!saving_survey\\\" ng-click=\\\"saveSurvey()\\\">{{save}}</button>\\n            <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  disabled ng-if=\\\"saving_survey\\\">{{saving}}\\n              <div class=\\\"loading\\\">\\n                <div class=\\\"line\\\"></div>\\n                <div class=\\\"line\\\"></div>\\n                <div class=\\\"line\\\"></div>\\n              </div>\\n          </button>\\n        </div>\\n    </div>\\n    <!-- end toolbar -->\\n\\n    <div class=\\\"full-col\\\">\\n      <section class=\\\"form-sheet\\\">\\n        <!-- TODO: get form colour here -->\\n        <span class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: survey.color}\\\"></span>\\n        <div class=\\\"form-field survey\\\">\\n          <!--  TODO: add placeholder text-->\\n            <label translate>survey.survey_name</label>\\n            <input type=\\\"text\\\" placeholder=\\\"{{ 'survey.survey_name' | translate }}\\\" ng-model=\\\"survey.name\\\">\\n\\n        </div>\\n\\n          <div class=\\\"form-field survey\\\">\\n            <label translate>app.description</label>\\n            <textarea placeholder=\\\"{{ 'survey.describe_your_survey' | translate }}\\\" ng-model=\\\"survey.description\\\">Posts about streets that need resurfacing, repairs, or the removal of a hazard.</textarea>\\n        </div>\\n\\n        <nav class=\\\"tabs-menu init\\\" data-tabs=\\\"survey-details\\\">\\n            <ul>\\n                <li id=\\\"survey-build-post-li\\\">\\n                  <a ng-click=\\\"switchTab('post', 'survey-build')\\\" translate=\\\"survey.build\\\">\\n                    Build\\n                  </a>\\n                </li>\\n                <li id=\\\"survey-configure-post-li\\\">\\n                  <a ng-click=\\\"switchTab('post', 'survey-configure')\\\" translate=\\\"survey.configure\\\">\\n                    Configure\\n                  </a>\\n                </li>\\n                <li id=\\\"survey-share-post-li\\\">\\n                  <a ng-click=\\\"switchTab('post', 'survey-share')\\\" ng-show=\\\"survey.id\\\" translate=\\\"survey.share\\\">\\n                    Share\\n                  </a>\\n                </li>\\n            </ul>\\n        </nav>\\n\\n        <div id=\\\"survey-build-post\\\" class=\\\"survey-details tabs-target\\\" >\\n          <div class=\\\"listing init\\\" style=\\\"margin-left: 4px;\\\">\\n            <h3 class=\\\"listing-heading hidden\\\" translate=\\\"survey.post_fields\\\">Fields</h3>\\n\\n            <div class=\\\"listing-item\\\" ng-repeat=\\\"attribute in survey.tasks[0].attributes track by $index\\\">\\n              <div class=\\\"listing-item-select\\\">\\n                  <div class=\\\"buttons-updown\\\">\\n                     <button type=\\\"button\\\" class=\\\"button-beta\\\" ng-disabled=\\\"isFirstAttribute(survey.tasks[0], attribute)\\\" ng-click=\\\"moveAttributeUp(survey.tasks[0], attribute)\\\">\\n                         <svg class=\\\"iconic\\\">\\n                             <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-top\\\"></use>\\n                         </svg>\\n                         <span class=\\\"label hidden\\\">Move up</span>\\n                     </button>\\n                     <button type=\\\"button\\\" class=\\\"button-beta\\\" ng-disabled=\\\"isLastAttribute(survey.tasks[0], attribute)\\\" ng-click=\\\"moveAttributeDown(survey.tasks[0], attribute)\\\">\\n                         <svg class=\\\"iconic\\\">\\n                             <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                         </svg>\\n                         <span class=\\\"label hidden\\\">Move down</span>\\n                     </button>\\n                 </div>\\n              </div>\\n              <div class=\\\"listing-item-secondary\\\" ng-show=\\\"onlyOptional(attribute)\\\">\\n                  <button class=\\\"button-beta button-flat\\\" ng-click=\\\"deleteAttribute(attribute, survey.tasks[0])\\\">\\n                      <svg class=\\\"iconic\\\">\\n                          <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                      </svg>\\n                      <span class=\\\"hidden\\\">Delete</span>\\n                  </button>\\n              </div>\\n\\n              <div class=\\\"listing-item-primary\\\" ng-click=\\\"openAttributeEditModal(survey.tasks[0], attribute)\\\">\\n                  <div class=\\\"listing-item-image\\\">\\n                  <!-- TODO: Set icon based on type -->\\n                      <svg class=\\\"iconic\\\">\\n                          <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#ic_short_text_24px\\\"></use>\\n                      </svg>\\n                  </div>\\n                  <h2 class=\\\"listing-item-title\\\">\\n                      {{attribute.label}}\\n                    <span class=\\\"listing-item-image tooltip\\\" ng-show=\\\"attribute.response_private\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#lock-locked\\\"></use>\\n                        </svg>\\n                        <span class=\\\"bug\\\" translate=\\\"survey.response_private_desc\\\">Only people with permission to edit responses can see responses to this field</span>\\n                    </span>\\n                  </h2>\\n              </div>\\n            </div>\\n            <div class=\\\"listing-item\\\">\\n                <div class=\\\"listing-item-primary\\\">\\n                    <h2 class=\\\"listing-item-title\\\">\\n                        <a ng-click=\\\"openAttributeModal(survey.tasks[0])\\\" class=\\\"button button-beta\\\" data-modal=\\\"add-field\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                            </svg>\\n                           <span translate=\\\"survey.add_field\\\">Add field</span>\\n                        </a>\\n                    </h2>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div id=\\\"survey-configure-post\\\" class=\\\"survey-details tabs-target\\\">\\n          <!--// Require review //-->\\n          <div class=\\\"form-field switch\\\">\\n            <label translate=\\\"survey.require_review\\\">Require posts be reviewed before they're published</label>\\n            <p data-fieldgroup-target=\\\"require-review-message\\\" ng-show=\\\"survey.require_approval\\\" translate=\\\"survey.require_review_desc\\\">New responses to this survey will be put \\\"under review,\\\" and therefore not immediately visible to the public. Users with permission to review the response can review and \\\"publish\\\" them, which would then make them visible to everyone.</p>\\n            <div class=\\\"toggle-switch\\\">\\n                <input class=\\\"tgl\\\" id=\\\"post-review\\\" type=\\\"checkbox\\\" ng-model=\\\"survey.require_approval\\\">\\n                <label class=\\\"tgl-btn\\\" for=\\\"post-review\\\"></label>\\n            </div>\\n          </div>\\n          <!--// Hide Author Information //-->\\n          <div class=\\\"form-field switch\\\" ng-show=\\\"anonymiseReportersEnabled\\\">\\n              <label translate=\\\"survey.hide_author_information\\\">Hide author information</label>\\n              <p ng-show=\\\"survey.hide_author\\\" data-fieldgroup-target=\\\"hide-author-message\\\" translate=\\\"survey.hide_author_information_desc\\\">Only people with permission to edit responses will be able to see who submitted them; and only when editing them.</p>\\n              <div class=\\\"toggle-switch\\\">\\n                  <input class=\\\"tgl init\\\" id=\\\"hide-author\\\" type=\\\"checkbox\\\" data-fieldgroup-toggle=\\\"hide-author-message\\\" ng-model=\\\"survey.hide_author\\\">\\n                  <label class=\\\"tgl-btn\\\" for=\\\"hide-author\\\"></label>\\n              </div>\\n          </div>\\n\\n          <div class=\\\"form-field switch\\\" ng-show=\\\"anonymiseReportersEnabled\\\">\\n              <label translate=\\\"survey.hide_location_information\\\">Hide location information</label>\\n              <p ng-show=\\\"survey.hide_location\\\" data-fieldgroup-target=\\\"hide-location-message\\\" translate-values=\\\"{ precision: location_precision}\\\" translate=\\\"survey.hide_location_information_desc\\\">Only people with permission to edit responses will be able to see location info; and only when editing them.</p>\\n              <div class=\\\"toggle-switch\\\">\\n                  <input class=\\\"tgl init\\\" id=\\\"hide-location\\\" type=\\\"checkbox\\\" data-fieldgroup-toggle=\\\"hide-location-message\\\" ng-model=\\\"survey.hide_location\\\">\\n                  <label class=\\\"tgl-btn\\\" for=\\\"hide-location\\\"></label>\\n              </div>\\n          </div>\\n\\n          <div class=\\\"form-field switch\\\" ng-show=\\\"anonymiseReportersEnabled\\\">\\n              <label translate=\\\"survey.hide_time_information\\\">Hide exact time information</label>\\n              <p ng-show=\\\"survey.hide_time\\\" data-fieldgroup-target=\\\"hide-time-message\\\" translate=\\\"survey.hide_time_information_desc\\\">Only people with permission to edit responses will be able to see exact respon time; and only when editing them.</p>\\n              <div class=\\\"toggle-switch\\\">\\n                  <input class=\\\"tgl init\\\" id=\\\"hide-time\\\" type=\\\"checkbox\\\" data-fieldgroup-toggle=\\\"hide-time-message\\\" ng-model=\\\"survey.hide_time\\\">\\n                  <label class=\\\"tgl-btn\\\" for=\\\"hide-time\\\"></label>\\n              </div>\\n          </div>\\n\\n          <!--// Who can add //-->\\n          <fieldset>\\n            <legend translate=\\\"survey.who_can_add\\\">Who can add to this survey</legend>\\n            <div class=\\\"form-field radio icon-input\\\" ng-class=\\\"{ 'checked': survey.everyone_can_create }\\\">\\n              <label for=\\\"survey-add_everyone\\\">\\n                <svg class=\\\"iconic\\\">\\n                  <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\"></use>\\n                </svg>\\n                <input name=\\\"survey-add\\\" id=\\\"survey-add_everyone\\\" ng-value=\\\"true\\\" checked=\\\"\\\" type=\\\"radio\\\" ng-model=\\\"survey.everyone_can_create\\\">\\n                <span class=\\\"label\\\" translate=\\\"nav.everyone\\\">Everyone</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"form-field radio icon-input\\\"  ng-class=\\\"{ 'checked': !survey.everyone_can_create }\\\">\\n              <label for=\\\"survey-add_roles\\\">\\n                <svg class=\\\"iconic\\\">\\n                  <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#people\\\"></use>\\n                </svg>\\n                <input class=\\\"init\\\" name=\\\"survey-add\\\" id=\\\"survey-add_roles\\\" ng-value=\\\"false\\\" ng-modaldata-fieldgroup-toggle=\\\"survey-add_roles\\\" type=\\\"radio\\\" ng-model=\\\"survey.everyone_can_create\\\">\\n                <span translate=\\\"app.specific_roles\\\">Specific roles...</span>\\n              </label>\\n\\n              <div class=\\\"form-fieldgroup init\\\" data-fieldgroup-target=\\\"survey-add_roles\\\" ng-class=\\\"{true:'', false:'active'}[survey.everyone_can_create]\\\">\\n                <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"role in roles\\\">\\n                  <label>\\n                    <input\\n                        type=\\\"checkbox\\\"\\n                        checklist-model=\\\"roles_allowed\\\"\\n                        ng-disabled=\\\"role.name === 'admin'\\\"\\n                        ng-checked=\\\"role.name === 'admin'\\\"\\n                        checklist-value=\\\"role.id\\\"\\n                    >\\n                    {{role.display_name | translate}}\\n                  </label>\\n                </div>\\n              </div>\\n            </div>\\n          </fieldset>\\n\\n          <color-picker color-container=\\\"survey\\\"></color-picker>\\n          <!-- <fieldset data-fieldset-type=\\\"color\\\">\\n              <legend><span class=\\\"swatch\\\" style=\\\"background-color: #A51A1A;\\\"></span>Survey color</legend>\\n              <p>Your survey's color will be used for map markers, and the left border of the survey and its responses.</p>\\n\\n              <div class=\\\"form-field\\\">\\n                  <label class=\\\"hidden\\\">Hex value</label>\\n                  <div class=\\\"minicolors minicolors-theme-default minicolors-position-bottom minicolors-position-left minicolors-inline\\\"><input type=\\\"text\\\" data-input-type=\\\"color\\\" value=\\\"#A51A1A\\\" class=\\\"minicolors-input\\\" size=\\\"7\\\"><div class=\\\"minicolors-panel minicolors-slider-hue minicolors-with-swatches\\\"><div class=\\\"minicolors-slider minicolors-sprite\\\"><div class=\\\"minicolors-picker\\\" style=\\\"top: 150px;\\\"></div></div><div class=\\\"minicolors-opacity-slider minicolors-sprite\\\"><div class=\\\"minicolors-picker\\\"></div></div><div class=\\\"minicolors-grid minicolors-sprite\\\" style=\\\"background-color: rgb(255, 0, 0);\\\"><div class=\\\"minicolors-grid-inner\\\"></div><div class=\\\"minicolors-picker\\\" style=\\\"top: 52px; left: 127px;\\\"><div></div></div></div><ul class=\\\"minicolors-swatches\\\"><li class=\\\"minicolors-swatch minicolors-sprite\\\"><span class=\\\"minicolors-swatch-color\\\" style=\\\"background-color: rgb(165, 26, 26);\\\"></span></li><li class=\\\"minicolors-swatch minicolors-sprite\\\"><span class=\\\"minicolors-swatch-color\\\" style=\\\"background-color: rgb(230, 147, 39);\\\"></span></li><li class=\\\"minicolors-swatch minicolors-sprite\\\"><span class=\\\"minicolors-swatch-color\\\" style=\\\"background-color: rgb(34, 116, 180);\\\"></span></li><li class=\\\"minicolors-swatch minicolors-sprite\\\"><span class=\\\"minicolors-swatch-color\\\" style=\\\"background-color: rgb(91, 170, 0);\\\"></span></li></ul></div></div>\\n              </div>\\n          </fieldset> -->\\n        </div>\\n        <!-- Share Tab Options -->\\n        <div id=\\\"survey-share-post\\\" class=\\\"survey-details tabs-target\\\" ng-show=\\\"survey.id\\\">\\n          <share-menu survey-id=\\\"surveyId\\\"></share-menu>\\n        </div>\\n      </section>\\n      <!-- Task sections -->\\n      <section class=\\\"form-sheet\\\" ng-repeat=\\\"task in survey.tasks | limitTo: 1 - survey.tasks.length\\\">\\n        <div class=\\\"form-field title section-title\\\">\\n            <label class=\\\"hidden\\\" translate=\\\"survey.task_name\\\">Section name</label>\\n            <input type=\\\"text\\\" placeholder=\\\"{{ 'survey.untitled_task' | translate }}\\\" ng-change=\\\"changeTaskLabel(task)\\\" ng-model=\\\"task.label\\\">\\n\\n            <label class=\\\"hidden\\\" translate=\\\"survey.task_description\\\">Section description</label>\\n            <textarea\\n              name=\\\"description\\\"\\n              placeholder=\\\"{{ 'survey.describe_this_task' | translate }}\\\"\\n              rows=\\\"1\\\"\\n              ng-model=\\\"task.description\\\"\\n              ></textarea>\\n\\n            <!-- <p class=\\\"alert\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#people\\\"></use>\\n                </svg>\\n                The fields in this section can only be completed and viewed by select people. <a>Change settings</a>\\n            </p> -->\\n            <div class=\\\"section-title-actions\\\" dropdown>\\n                <button class=\\\"button-beta button-flat init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n                    <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#ellipses\\\"></use>\\n                    </svg>\\n                    <span class=\\\"hidden\\\" translate=\\\"app.more\\\">More</span>\\n                </button>\\n\\n                <ul class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                    <li>\\n                        <a href=\\\"\\\" data-modal=\\\"delete-post\\\" ng-click=\\\"duplicateSection(task)\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/material/svg-sprite-content-symbol.svg\") + \"#ic_content_copy_24px\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" translate=\\\"survey.duplicate_task\\\">Duplicate task</span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a href=\\\"\\\" data-modal=\\\"delete-post\\\" ng-click=\\\"deleteTask(task)\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                        </svg>\\n                        <span class=\\\"label\\\" translate=\\\"survey.delete_task\\\">Delete task</span>\\n                        </a>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n\\n        <nav class=\\\"tabs-menu init\\\" data-tabs=\\\"section-1-details\\\">\\n            <ul>\\n                <li class=\\\"active\\\" ng-attr-id=\\\"{{ 'section-build-' + task.id + '-li'}}\\\">\\n                  <a ng-click=\\\"switchTab(task.id, 'section-build')\\\" translate=\\\"survey.build\\\">\\n                    Build\\n                  </a>\\n                </li>\\n                <li ng-attr-id=\\\"{{ 'section-configure-' + task.id + '-li'}}\\\">\\n                  <a ng-click=\\\"switchTab(task.id, 'section-configure')\\\" translate=\\\"survey.configure\\\">\\n                    Configure\\n                  </a>\\n                </li>\\n            </ul>\\n        </nav>\\n\\n        <div ng-attr-id=\\\"{{ 'section-build-' + task.id }}\\\" class=\\\"section-1-details tabs-target active\\\">\\n            <div class=\\\"listing init\\\">\\n              <div class=\\\"listing-item\\\" ng-repeat=\\\"attribute in task.attributes track by $index\\\">\\n                  <div class=\\\"listing-item-select\\\">\\n                      <div class=\\\"buttons-updown\\\">\\n                         <button type=\\\"button\\\" class=\\\"button-beta\\\" ng-disabled=\\\"isFirstAttribute(task, attribute)\\\" ng-click=\\\"moveAttributeUp(task, attribute)\\\">\\n                             <svg class=\\\"iconic\\\">\\n                                 <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-top\\\"></use>\\n                             </svg>\\n                             <span class=\\\"label hidden\\\">Move up</span>\\n                         </button>\\n                         <button type=\\\"button\\\" class=\\\"button-beta\\\" ng-disabled=\\\"isLastAttribute(task, attribute)\\\" ng-click=\\\"moveAttributeDown(task, attribute)\\\">\\n                             <svg class=\\\"iconic\\\">\\n                                 <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                             </svg>\\n                             <span class=\\\"label hidden\\\">Move down</span>\\n                         </button>\\n                     </div>\\n                  </div>\\n\\n                  <div class=\\\"listing-item-secondary\\\" ng-show=\\\"onlyOptional(attribute)\\\">\\n                      <button class=\\\"button-beta button-flat\\\" ng-click=\\\"deleteAttribute(attribute, task)\\\">\\n                          <svg class=\\\"iconic\\\">\\n                              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                          </svg>\\n                          <span class=\\\"hidden\\\">Delete</span>\\n                      </button>\\n                  </div>\\n\\n                  <div class=\\\"listing-item-primary\\\" ng-click=\\\"openAttributeEditModal(task, attribute)\\\">\\n                      <div class=\\\"listing-item-image\\\">\\n                          <svg class=\\\"iconic\\\">\\n                              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#ic_short_text_24px\\\"></use>\\n                          </svg>\\n                      </div>\\n                      <h2 class=\\\"listing-item-title\\\">\\n                          {{attribute.label}}\\n                        <span class=\\\"listing-item-image tooltip\\\" ng-show=\\\"attribute.response_private\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#lock-locked\\\"></use>\\n                            </svg>\\n                            <span class=\\\"bug\\\" translate=\\\"survey.response_private_desc\\\">Only people with permission to edit responses can see responses to this field</span>\\n                        </span>\\n                      </h2>\\n                  </div>\\n              </div>\\n              <div class=\\\"listing-item\\\">\\n                  <div class=\\\"listing-item-primary\\\">\\n                      <h2 class=\\\"listing-item-title\\\">\\n                          <a ng-click=\\\"openAttributeModal(task)\\\" class=\\\"button button-beta\\\" data-modal=\\\"add-field\\\">\\n                              <svg class=\\\"iconic\\\">\\n                                  <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                              </svg>\\n                             <span translate=\\\"survey.add_field\\\">Add field</span>\\n                          </a>\\n                      </h2>\\n                  </div>\\n              </div>\\n            </div>\\n        </div>\\n\\n        <div ng-attr-id=\\\"{{ 'section-configure-' + task.id }}\\\" class=\\\"section-1-details tabs-target\\\">\\n          <div class=\\\"form-field switch\\\">\\n            <label translate=\\\"survey.required\\\">Required</label>\\n            <p data-fieldgroup-target=\\\"require-review-message\\\" ng-show=\\\"task.required\\\" translate=\\\"survey.required_desc\\\">Require this section be completed before a post can be visible to the public.</p>\\n            <div class=\\\"toggle-switch\\\" ng-attr-id=\\\"{{ 'toggle-switch-required-' + task.id }}\\\">\\n                <input class=\\\"tgl\\\" ng-attr-id=\\\"{{ 'task-required-' + task.id }}\\\" type=\\\"checkbox\\\" ng-model=\\\"task.required\\\">\\n                <label class=\\\"tgl-btn\\\" for=\\\"task-required-{{task.id}}\\\" ng-attr-id=\\\"{{ 'task-required-label-' + task.id }}\\\"></label>\\n            </div>\\n        </div>\\n        <div class=\\\"form-field switch checked\\\">\\n            <label translate=\\\"survey.internal_use_task\\\">Task is only for internal use</label>\\n            <!-- todo show list of roles with correct permission for clarity in message below-->\\n            <p data-fieldgroup-target=\\\"internal_only-message\\\" class=\\\"active\\\" ng-show=\\\"task.task_is_internal_only\\\" translate=\\\"survey.internal_use_task_desc\\\">This task will only be visible to User who have Manage Post permission.</p>\\n            <div class=\\\"toggle-switch\\\" ng-attr-id=\\\"{{ 'toggle-switch-show-' + task.id }}\\\">\\n                <input class=\\\"tgl init\\\" ng-attr-id=\\\"{{ 'internal_only-' + task.id }}\\\" type=\\\"checkbox\\\" data-fieldgroup-toggle=\\\"internal_only-message\\\" ng-model=\\\"task.task_is_internal_only\\\">\\n                <label class=\\\"tgl-btn\\\" for=\\\"internal_only-{{task.id}}\\\" ng-attr-id=\\\"{{ 'internal_only-label-' + task.id }}\\\"></label>\\n            </div>\\n        </div>\\n        <div class=\\\"form-field switch checked\\\">\\n            <label translate=\\\"survey.show_this_task_to\\\">Show this task to everyone when published</label>\\n            <p data-fieldgroup-target=\\\"show_section-message\\\" class=\\\"active\\\" ng-show=\\\"task.show_when_published\\\" translate=\\\"survey.show_this_task_to_desc\\\">When a survey response is published, data from this section will be displayed.</p>\\n            <div class=\\\"toggle-switch\\\" ng-attr-id=\\\"{{ 'toggle-switch-show-' + task.id }}\\\">\\n                <input class=\\\"tgl init\\\" ng-attr-id=\\\"{{ 'show_section-' + task.id }}\\\" type=\\\"checkbox\\\" data-fieldgroup-toggle=\\\"show_section-message\\\" ng-model=\\\"task.show_when_published\\\">\\n\\n                <label class=\\\"tgl-btn\\\" for=\\\"show_section-{{task.id}}\\\" ng-attr-id=\\\"{{ 'show_section-label-' + task.id }}\\\"></label>\\n            </div>\\n        </div>\\n\\n          <!-- <fieldset>\\n            <legend translate=\\\"survey.who_can_contribute_to_section\\\">Who can contribute to fields in this section</legend>\\n            <div class=\\\"form-field radio icon-input\\\" ng-class=\\\"{ 'checked': task.everyone_can_contribute }\\\">\\n              <label for=\\\"survey-add_everyone\\\">\\n                <svg class=\\\"iconic\\\">\\n                  <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\"></use>\\n                </svg>\\n                <input name=\\\"survey-add\\\" id=\\\"survey-add_everyone\\\" ng-value=\\\"true\\\" checked=\\\"\\\" type=\\\"radio\\\" ng-model=\\\"task.everyone_can_contribute\\\">\\n                <span class=\\\"label\\\" translate=\\\"nav.everyone\\\">Everyone</span>\\n              </label>\\n            </div>\\n\\n            <div class=\\\"form-field radio icon-input\\\"  ng-class=\\\"{ 'checked': !task.everyone_can_contribute }\\\">\\n              <label for=\\\"survey-add_roles\\\">\\n                <svg class=\\\"iconic\\\">\\n                  <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#people\\\"></use>\\n                </svg>\\n                <input class=\\\"init\\\" name=\\\"survey-add\\\" id=\\\"survey-add_roles\\\" ng-value=\\\"false\\\" ng-modaldata-fieldgroup-toggle=\\\"survey-add_roles\\\" type=\\\"radio\\\" ng-model=\\\"task.everyone_can_contribute\\\">\\n                <span translate=\\\"app.specific_roles\\\">Specific roles...</span>\\n              </label>\\n\\n              <div class=\\\"form-fieldgroup init\\\" data-fieldgroup-target=\\\"survey-add_roles\\\" ng-class=\\\"{true:'', false:'active'}[task.everyone_can_contribute]\\\">\\n                <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"role in roles\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" checklist-model=\\\"section_roles_allowed\\\" checklist-value=\\\"role.id\\\">\\n                    {{role.display_name}}\\n                  </label>\\n                </div>\\n              </div>\\n            </div>\\n          </fieldset> -->\\n        </div>\\n      </section>\\n      <!-- Add nw section/task -->\\n      <div class=\\\"listing-item\\\">\\n          <div class=\\\"listing-item-primary\\\">\\n              <button ng-click=\\\"openTaskModal()\\\" class=\\\"button-gamma init\\\" data-toggle=\\\"field-type\\\">\\n                  <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                  </svg>\\n                  <span class=\\\"button-label\\\" translate=\\\"survey.add_task\\\">Add task</span>\\n              </button>\\n          </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\";","module.exports = [\n    '$rootScope',\n    'ModalService',\nfunction (\n    $rootScope,\n    ModalService\n) {\n    return {\n        restrict: 'E',\n        template: require('./task-create.html'),\n        link: function ($scope, $element, $attrs) {\n\n            // Init an empty saved search\n            $scope.newTask = {\n                required : false,\n                attributes: [],\n                type: 'task',\n                show_when_published: false,\n                task_is_internal_only: true\n            };\n\n            $scope.closeModal = function () {\n                ModalService.close();\n            };\n        }\n    };\n}];\n","module.exports = \"<div>\\n  <div class=\\\"form-field title\\\">\\n     <label translate=\\\"survey.task_name\\\">task name</label>\\n     <input type=\\\"text\\\" placeholder=\\\"{{ 'survey.name_this_task' | translate }}\\\" ng-model=\\\"newTask.label\\\">\\n  </div>\\n  <div class=\\\"form-field\\\">\\n      <label for=\\\"task_description\\\" translate=\\\"survey.task_description\\\">\\n          task description\\n      </label>\\n      <textarea id=\\\"task_description\\\" placeholder=\\\"{{ 'survey.describe_this_task' | translate }}\\\" name=\\\"description\\\" data-min-rows=\\\"1\\\" rows=\\\"1\\\" ng-model=\\\"newTask.description\\\"></textarea>\\n\\n  </div>\\n  <div class=\\\"form-field switch\\\">\\n     <label translate=\\\"survey.require_section\\\">Require this section be completed before a post can be visible to the public</label>\\n     <div class=\\\"toggle-switch\\\">\\n        <input class=\\\"tgl\\\" id=\\\"require-toggle\\\" type=\\\"checkbox\\\" ng-model=\\\"newTask.required\\\">\\n        <label class=\\\"tgl-btn\\\" for=\\\"require-toggle\\\"></label>\\n     </div>\\n  </div>\\n  <div class=\\\"form-field\\\">\\n      <button type=\\\"button\\\" class=\\\"button-link modal-trigger\\\" ng-click=\\\"closeModal()\\\" translate=\\\"app.cancel\\\">Cancel</button>\\n      <button type=\\\"button\\\" class=\\\"button-alpha modal-trigger\\\" ng-click=\\\"addNewTask(newTask)\\\" translate=\\\"app.add_and_close\\\">Add &amp; close</button>\\n  </div>\\n</div>\\n\";","module.exports = [\n    '$rootScope',\n    '$translate',\n    'ModalService',\n    '_',\nfunction (\n    $rootScope,\n    $translate,\n    ModalService,\n    _\n) {\n    return {\n        restrict: 'E',\n        template: require('./attribute-create.html'),\n        link: function ($scope, $element, $attrs) {\n\n            // Init an empty saved search\n            $scope.newAttribute = {\n                required: false,\n                options: [],\n                config: {},\n                priority: 0\n            };\n\n            $scope.createNewAttribute = function (type) {\n                // Set initial label name based on type\n                type.label = '';\n                $scope.openAttributeEditModal($scope.activeTask, _.extend($scope.newAttribute, type));\n            };\n\n            $scope.closeModal = function () {\n                ModalService.close();\n            };\n\n            $scope.availableAttrTypes = [\n                {\n                    label: $translate.instant('survey.short_text'),\n                    type: 'varchar',\n                    input: 'text',\n                    description: $translate.instant('survey.text_desc')\n                },\n                {\n                    label: $translate.instant('survey.long_text'),\n                    type: 'text',\n                    input: 'textarea',\n                    description: $translate.instant('survey.textarea_desc')\n                },\n                {\n                    label: $translate.instant('survey.number_decimal'),\n                    type: 'decimal',\n                    input: 'number',\n                    description: $translate.instant('survey.decimal_desc')\n                },\n                {\n                    label:  $translate.instant('survey.number_integer'),\n                    type: 'int',\n                    input: 'number',\n                    description: $translate.instant('survey.integer_desc')\n                },\n                {\n                    label: $translate.instant('survey.location'),\n                    type: 'point',\n                    input: 'location',\n                    description: $translate.instant('survey.location_desc')\n                },\n                // {\n                //     label: 'Geometry',\n                //     type: 'geometry',\n                //     input: 'text'\n                // },\n                {\n                    label: $translate.instant('survey.date'),\n                    type: 'datetime',\n                    input: 'date',\n                    description: $translate.instant('survey.date_desc')\n                },\n                {\n                    label: $translate.instant('survey.datetime'),\n                    type: 'datetime',\n                    input: 'datetime',\n                    description: $translate.instant('survey.datetime_desc')\n                },\n                // {\n                //     label: 'Time',\n                //     type: 'datetime',\n                //     input: 'time'\n                // },\n                {\n                    label: $translate.instant('survey.select'),\n                    type: 'varchar',\n                    input: 'select',\n                    description: $translate.instant('survey.select_desc')\n                },\n                {\n                    label:  $translate.instant('survey.radio_button'),\n                    type: 'varchar',\n                    input: 'radio',\n                    description: $translate.instant('survey.radio_desc')\n                },\n                {\n                    label: $translate.instant('survey.checkbox'),\n                    type: 'varchar',\n                    input: 'checkbox',\n                    cardinality: 0,\n                    description: $translate.instant('survey.checkbox_desc')\n                },\n                {\n                    label: $translate.instant('survey.related_post'),\n                    type: 'relation',\n                    input: 'relation',\n                    description: $translate.instant('survey.relation_desc')\n                },\n                {\n                    label: $translate.instant('survey.upload_image'),\n                    type: 'media',\n                    input: 'upload',\n                    description: $translate.instant('survey.upload_desc'),\n                    config: {\n                        hasCaption: true\n                    }\n                },\n                {\n                    label: $translate.instant('survey.embed_video'),\n                    type: 'varchar',\n                    input: 'video',\n                    description: $translate.instant('survey.video_desc')\n                },\n                {\n                    label: 'Markdown',\n                    type: 'markdown',\n                    input: 'markdown',\n                    description: $translate.instant('survey.markdown_desc')\n                },\n                {\n                    label: $translate.instant('survey.categories'),\n                    type: 'tags',\n                    cardinality: 0,\n                    input: 'tags',\n                    description: $translate.instant('settings.settings_list.categories_desc')\n                }\n            ];\n        }\n    };\n}];\n","module.exports = \"<dl class=\\\"modal-body\\\" >\\n\\n    <dt class=\\\"list-item\\\" ng-repeat-start=\\\"type in availableAttrTypes\\\">\\n        <a ng-click=\\\"createNewAttribute(type)\\\" data-modal=\\\"edit-field\\\">\\n            {{type.label}}\\n        </a>\\n    </dt>\\n    <dd ng-repeat-end=\\\"\\\">{{type.description}}</dd>\\n </dl>\\n\";","module.exports = [\n    '$rootScope',\n    'ModalService',\n    '_',\n    'Editor',\nfunction (\n    $rootScope,\n    ModalService,\n    _,\n    Editor\n    ) {\n    return {\n        restrict: 'E',\n        template: require('./attribute-editor.html'),\n        link: function ($scope, $element, $attrs) {\n            /**\n             * FIXME: this is a hacky solution to replace the empty config array for an object literal.\n             * - What should happen is that we get an empty object literal, or NULL, directly from the backend.\n             * - What really happens is that we get an array, add a key on it, and then it cannot be stringified correctly, which prevents the information from getting to the backend.\n             */\n            $scope.label = angular.copy($scope.editAttribute.label);\n            $scope.editAttribute.config = (!$scope.editAttribute.config || (_.isArray($scope.editAttribute.config) && $scope.editAttribute.config.length === 0)) ? {} : $scope.editAttribute.config;\n            $scope.labelError = false;\n\n            const initiateEditor = function () {\n                const editorHeight = 180;\n                $scope.editor = new Editor({\n                    el: document.querySelector('#editSection'),\n                    previewStyle: 'vertical',\n                    height: `${editorHeight}px`,\n                    initialEditType: 'wysiwyg',\n                    toolbarItems: [\n                        'heading',\n                        'bold',\n                        'italic',\n                        'link',\n                        'ol',\n                        'ul'\n                    ],\n                    usageStatistics: false\n                });\n\n                $scope.editor.setValue($scope.editAttribute.instructions);\n                /** This is a hack to override the tui-editor's own inline-style\n                 * that makes the scroll get stuck inside the editor-area */\n                let editor = document.querySelector('#editSection');\n                editor.style.height = `${editorHeight + 60}px`;\n            };\n\n            initiateEditor();\n\n            $scope.save = function (editAttribute, activeTask) {\n                editAttribute.instructions = $scope.editor.getValue();\n                if (!$scope.attributeLabel.$invalid) {\n                    $scope.editAttribute.label = $scope.label;\n                    $scope.addNewAttribute(editAttribute, activeTask);\n                }\n            };\n\n            $scope.closeModal = function () {\n                ModalService.close();\n            };\n\n            $scope.onlyOptional = function () {\n                return $scope.editAttribute.type !== 'title' && $scope.editAttribute.type !== 'description';\n            };\n\n            $scope.canDisplay = function () {\n                return $scope.editAttribute.input !== 'upload' && $scope.editAttribute.type !== 'title' && $scope.editAttribute.type !== 'description' && $scope.editAttribute.input !== 'tags';\n            };\n\n            $scope.canMakePrivate = function () {\n                return $scope.editAttribute.type !== 'tags';\n            };\n\n            $scope.canDisableCaption = function () {\n                return $scope.editAttribute.type === 'media' && $scope.editAttribute.input === 'upload';\n            };\n        }\n    };\n}];\n","module.exports = \" <div class=\\\"modal-body\\\">\\n  <div class=\\\"form-field required\\\"\\n    ng-class=\\\"{\\n        'error': attributeLabel.$invalid && attributeLabel.$dirty\\n    }\\\">\\n    <form name=\\\"attributeLabel\\\">\\n      <label translate=\\\"app.name\\\">Name</label>\\n      <input type=\\\"text\\\" ng-model=\\\"label\\\" ng-required=\\\"true\\\" placeholder=\\\"{{ 'form.field_name_placeholder' | translate}}\\\">\\n      <div\\n                class=\\\"alert error\\\"\\n                ng-show=\\\"attributeLabel.$invalid && attributeLabel.$dirty\\\"\\n            >\\n                <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                </svg>\\n                <span translate=\\\"{{'post.valid.label.required'}}\\\"></span>\\n            </div>\\n    </form>\\n   </div>\\n   <div class=\\\"form-field switch\\\">\\n    <label translate=\\\"survey.show_field_description\\\">Add field description (optional):</label>\\n    <div class=\\\"form-field\\\">\\n        <div id=\\\"editSection\\\"></div>\\n    </div>\\n</div>\\n   <div ng-if=\\\"canDisplay()\\\">\\n       <div class=\\\"form-field\\\" ng-if=\\\"hasOptions(editAttribute)\\\">\\n          <label translate>form.field_options</label>\\n          <div class=\\\"input-inline\\\" ng-repeat=\\\"(key, option) in editAttribute.options track by $index\\\">\\n              <input type=\\\"text\\\" placeholder=\\\"{{ 'form.field_option_placeholder'|translate }}\\\" ng-model=\\\"editAttribute.options[key]\\\">\\n              <button type=\\\"button\\\" class=\\\"button-flat button-beta\\\" ng-if=\\\"editAttribute.options.length > 1\\\" ng-click=\\\"removeOption(editAttribute, key)\\\">\\n                <svg class=\\\"iconic\\\">\\n                  <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                </svg>\\n                <span class=\\\"button-label hidden\\\">Remove</span>\\n              </button>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"button-secondary alt\\\" ng-click=\\\"addOption(editAttribute)\\\"><i class=\\\"fa fa-plus\\\"></i> <span translate>form.field_add_option</span></button>\\n       </div>\\n   </div>\\n   <!-- editing/adding categories -->\\n    <div class=\\\"form-field\\\" ng-if=\\\"editAttribute.input ==='tags'\\\">\\n        <label translate>Which categories should be available</label>\\n        <category-selector\\n            available=\\\"availableCategories\\\"\\n            selected=\\\"editAttribute.options\\\"\\n            enable-parents=\\\"true\\\"\\n        ></category-selector>\\n    </div>\\n    <!-- End of editing/adding categories -->\\n        <div class=\\\"form-field\\\" ng-if=\\\"editAttribute.input === 'relation'\\\">\\n            <label translate>survey.field_allowed_relation_survey</label>\\n            <ul name=\\\"visible-to\\\">\\n               <li ng-repeat=\\\"relationForm in availableForms | filter : filterNotCurrentForm\\\">\\n                   <label>\\n                       <input type=\\\"checkbox\\\" checklist-model=\\\"editAttribute.config.input.form\\\" checklist-value=\\\"relationForm.id\\\" />\\n                        {{relationForm.name}}\\n                   </label>\\n               </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"form-field switch\\\" ng-show=\\\"onlyOptional() && editAttribute.input !== 'tags'\\\">\\n          <label translate=\\\"survey.required\\\">Require this field be completed</label>\\n          <div class=\\\"toggle-switch\\\">\\n             <input class=\\\"tgl\\\" id=\\\"switchnewattribute\\\" type=\\\"checkbox\\\" ng-model=\\\"editAttribute.required\\\">\\n             <label class=\\\"tgl-btn\\\" for=\\\"switchnewattribute\\\"></label>\\n          </div>\\n       </div>\\n\\n       <!-- start: media upload toggle to make caption an optional field-->\\n       <div class=\\\"form-field switch\\\" ng-show=\\\"canDisableCaption()\\\">\\n         <label translate=\\\"survey.collect_image_caption\\\">Disable Caption field</label>\\n         <p data-fieldgroup-target=\\\"field-caption-disabled-warning\\\" class=\\\"init active\\\" translate=\\\"survey.disable_caption_field_explanation\\\" ng-show=\\\"!editAttribute.config.hasCaption\\\">\\n           This will disable all captions for this field, but it won't delete them from the database. You will be able to re-enable them later.\\n         </p>\\n           <div class=\\\"toggle-switch\\\">\\n           <input class=\\\"tgl\\\" id=\\\"switch-hascaption\\\" type=\\\"checkbox\\\" ng-model=\\\"editAttribute.config.hasCaption\\\">\\n           <label class=\\\"tgl-btn\\\" for=\\\"switch-hascaption\\\"></label>\\n         </div>\\n       </div>\\n       <!-- end: media upload toggle to make caption an optional field-->\\n       <div class=\\\"form-field switch\\\" ng-show=\\\"canMakePrivate()\\\">\\n          <label translate=\\\"survey.make_response_private\\\">Make responses private</label>\\n          <p data-fieldgroup-target=\\\"field-private-message-3\\\" class=\\\"init active\\\" translate=\\\"survey.response_private_desc\\\" ng-show=\\\"editAttribute.response_private\\\">\\n            <svg class=\\\"iconic\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#lock-locked\\\"></use>\\n            </svg>\\n              Only people with permission to edit responses will be able to see responses to this field.\\n          </p>\\n          <div class=\\\"toggle-switch\\\">\\n             <input class=\\\"tgl\\\" id=\\\"switchprivateresponse\\\" type=\\\"checkbox\\\" ng-model=\\\"editAttribute.response_private\\\">\\n             <label class=\\\"tgl-btn\\\" for=\\\"switchprivateresponse\\\"></label>\\n          </div>\\n       </div>\\n       <div class=\\\"form-field switch\\\" ng-if=\\\"canDisplay()\\\">\\n            <label translate=\\\"app.default_value\\\">Default value (optional):</label>\\n            <div class=\\\"form-field\\\">\\n              <div ng-switch=\\\"editAttribute.input\\\">\\n                  <input ng-switch-when=\\\"location\\\" type=\\\"text\\\" placeholder=\\\"{{ 'form.default_location_placeholder'|translate }}\\\" ng-model=\\\"editAttribute.default\\\">\\n                  <input ng-switch-when=\\\"date\\\" type=\\\"text\\\" date-time=\\\"editAttribute.default\\\" ng-model=\\\"editAttribute.default\\\">\\n                  <input ng-switch-when=\\\"int\\\" type=\\\"number\\\" step=\\\"1\\\" ng-model=\\\"editAttribute.default\\\">\\n                  <input ng-switch-when=\\\"decimal\\\" type=\\\"number\\\" ng-model=\\\"editAttribute.default\\\">\\n                  <input ng-switch-default type=\\\"text\\\" placeholder=\\\"{{ 'form.default_default_placeholder'|translate }}\\\" ng-model=\\\"editAttribute.default\\\">\\n              </div>\\n            </div>\\n        </div>\\n   </div>\\n   <div class=\\\"form-field\\\">\\n      <button ng-show=\\\"!editAttribute.id\\\" type=\\\"button\\\" class=\\\"button-alpha modal-trigger\\\" ng-click=\\\"save(editAttribute, activeTask)\\\" translate=\\\"app.add_and_close\\\">Add &amp; close</button>\\n      <button ng-show=\\\"editAttribute.id\\\" type=\\\"button\\\" class=\\\"button-alpha modal-trigger\\\" ng-click=\\\"save(editAttribute, activeTask)\\\" translate=\\\"app.update_and_close\\\">Update &amp; close</button>\\n   </div>\\n\\n</div>\\n\";","module.exports = SurveyNotify;\n\nvar scope;\n\nSurveyNotify.$inject = ['_', '$q', '$rootScope', '$translate', 'SliderService', 'ModalService'];\nfunction SurveyNotify(_, $q, $rootScope, $translate, SliderService, ModalService) {\n    return {\n        success: success\n    };\n\n    function success(successText, translateValues, values) {\n        var scope = getScope();\n\n        function showSlider(successText) {\n            values.successText = successText;\n            scope = _.extend(scope, values);\n\n            SliderService.openTemplate(require('./survey-success.html'), 'thumb-up', 'confirmation', scope, false, false);\n        }\n\n        $translate(successText, translateValues).then(showSlider, showSlider);\n    }\n\n    function getScope() {\n        if (scope) {\n            scope.$destroy();\n        }\n        scope = $rootScope.$new();\n        return scope;\n    }\n}\n","module.exports = \"<p>\\n  {{successText}}\\n</p>\\n\\n<a class=\\\"button button-beta\\\" ng-click=\\\"close()\\\" ui-sref=\\\"postCreate({id: formId})\\\" translate=\\\"notify.form.add_to_survey\\\">Add to survey</a>\\n<button class=\\\"button-flat message-trigger\\\" ng-click=\\\"close()\\\" translate=\\\"message.button.dismiss\\\">\\n    Dismiss\\n</button>\\n\";","module.exports = TargetedQuestionDirective;\n\nTargetedQuestionDirective.$inject = [];\nfunction TargetedQuestionDirective() {\n    return {\n        restrict: 'E',\n        link: TargetedQuestionLink,\n        template: require('./targeted-question-modal.html')\n    };\n}\n\nfunction TargetedQuestionLink($scope, $element, $attrs) {\n    $scope.charactersRemaining = charactersRemaining;\n    $scope.removeError = removeError;\n    $scope.save = save;\n\n    function charactersRemaining() {\n        if ($scope.editQuestion.question === undefined || $scope.editQuestion.question.length === 0) {\n            $scope.error = $scope.editQuestion.question !== undefined ?  true : false;\n            $scope.message = 'You need to add a question.';\n            return 160;\n        } else {\n            $scope.error = $scope.editQuestion.question.length < 160 ? false : true;\n            $scope.message = 'Your question is too long, you can use maximum 160 characters.';\n            return 160 - $scope.editQuestion.question.length;\n        }\n    }\n    function removeError() {\n        $scope.questionError = false;\n    }\n\n    function save() {\n        if ($scope.charactersRemaining() < 0) {\n            $scope.questionError = false;\n        } else if ($scope.editQuestion.newQuestion && $scope.survey.attributes && $scope.checkForDuplicate()) {\n            $scope.questionError = true;\n            $scope.questionMessage = 'This question already exists';\n        } else if (!$scope.editQuestion.question || !$scope.editQuestion.question.length) {\n            $scope.questionError = true;\n            $scope.questionMessage = 'You need to add a question';\n        } else if (!$scope.questionError) {\n            $scope.addNewQuestion();\n        }\n    }\n}\n","module.exports = \"<div class=\\\"modal-body\\\">\\n    <div class=\\\"form-field\\\" ng-class=\\\"{'error': error || questionError, 'success': !error && !questionError}\\\">\\n        <label  class=\\\"required\\\" translate=\\\"survey.targeted_survey.question_text\\\"></label>\\n        <p translate=\\\"survey.targeted_survey.question_description\\\"></p>\\n\\n        <textarea placeholder=\\\"Sample question: Hi there! How are you feeling today? Your response is free.\\\" ng-model=\\\"editQuestion.question\\\" required ng-change=\\\"removeError()\\\"></textarea>\\n\\n        <span class=\\\"right\\\" translate=\\\"survey.targeted_survey.char_remains\\\" translate-values=\\\"{remaining: charactersRemaining()}\\\"></span>\\n        </div>\\n\\n        <div\\n            class=\\\"alert error\\\"\\n            ng-show=\\\"error\\\"\\n        >\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n            </svg>\\n            <p>{{message}}</p>\\n        </div>\\n\\n        <div\\n            class=\\\"alert error\\\"\\n            ng-show=\\\"questionError\\\"\\n        >\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n            </svg>\\n            <p>{{questionMessage}}</p>\\n        </div>\\n\\n    <div class=\\\"form-field switch checked\\\">\\n        <label for=\\\"switch3\\\" translate=\\\"survey.make_response_private\\\"></label>\\n        <p ng-show=\\\"editQuestion.response_private\\\" translate=\\\"survey.response_private_desc\\\"></p>\\n        <div class=\\\"toggle-switch\\\">\\n            <input class=\\\"tgl\\\" id=\\\"switch3\\\" type=\\\"checkbox\\\" ng-model=\\\"editQuestion.response_private\\\">\\n            <label class=\\\"tgl-btn\\\" for=\\\"switch3\\\"></label>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"modal-actions\\\">\\n            <button class=\\\"button-alpha modal-trigger\\\" ng-click=\\\"save()\\\" translate=\\\"form.save_and_close\\\"></button>\\n            <button class=\\\"button-destructive modal-trigger\\\" translate=\\\"survey.targeted_survey.delete\\\" ng-click=\\\"deleteQuestion()\\\" ng-if=\\\"!editQuestion.newQuestion\\\"></button>\\n            <button class=\\\"button modal-trigger\\\" translate=\\\"survey.targeted_survey.cancel\\\" ng-click=\\\"cancel()\\\" ng-if=\\\"editQuestion.newQuestion\\\"></button>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = [\n    '$q',\n    'ConfigEndpoint',\n    'Leaflet',\n    'Maps',\n    'Features',\nfunction (\n    $q,\n    ConfigEndpoint,\n    L,\n    Maps,\n    Features\n) {\n    return {\n        restrict: 'E',\n        scope: {\n            config: '='\n        },\n        template: require('./map.html'),\n        link: function ($scope, $element, $attrs) {\n            var map, marker;\n\n            $scope.getPrecision = getPrecision;\n            $scope.patternDigitsOnly = /^[0-9]+$/;\n            $scope.patternFloat = /[-+]?(\\d*[.])?\\d+/;\n            $scope.minZoom = 0;\n            $scope.maxZoom = 18;\n            $scope.minObfuscation = 0;\n            $scope.maxObfuscation = 9;\n            $scope.updatePrecision = updatePrecision;\n            $scope.updateMapPreview = updateMapPreview;\n            $scope.updateMapPreviewLayer = updateMapPreviewLayer;\n            $scope.current_precision =  9;\n            $scope.locationPrecisionEnabled = false;\n\n            activate();\n\n            function activate() {\n                Features.loadFeatures().then(function () {\n                    $scope.locationPrecisionEnabled = Features.isFeatureEnabled('anonymise-reporters');\n                });\n\n                $scope.baselayers = Maps.getBaseLayers();\n\n                // Set initial map params\n                $q.all({\n                    map: Maps.createMap($element[0].querySelector('#settings-map')),\n                    config: Maps.getConfig(true)\n                }).then(function (data) {\n                    map = data.map;\n                    angular.extend($scope.config, data.config);\n\n                    marker = L.marker(map.getCenter(), {\n                        draggable: true,\n                        icon: Maps.pointIcon()\n                    });\n                    marker.addTo(map);\n\n                    // Get zoom limits from leaflet\n                    getMapZoomLevels();\n\n                    // Set up event handlers\n                    marker.on('dragend', handleDragEnd);\n                    map.on('zoomend', handleMoveEnd);\n                    map.on('click', handleClick);\n\n                    $scope.current_precision =  $scope.getPrecision();\n                });\n            }\n\n            function getPrecision() {\n                return 1000 / Math.pow(10, $scope.config.location_precision);\n            }\n\n            function updatePrecision() {\n                $scope.current_precision = $scope.getPrecision();\n            }\n\n            // Get this map's available zoom levels.\n            function getMapZoomLevels() {\n                $scope.minZoom = map.getMinZoom();\n                $scope.maxZoom = map.getMaxZoom();\n            }\n\n            function updateMapPreviewLayer() {\n                // Set the preview map's tileset to the current default.\n                map.eachLayer(function (layer) {\n                    if (layer instanceof L.TileLayer) {\n                        layer.remove();\n                    }\n                });\n                Maps.getLayer($scope.config.default_view.baselayer).addTo(map);\n            }\n\n            // Update map view from config\n            function updateMapPreview() {\n                // Center the map at our current default.\n                // Set the zoom level to our default zoom.\n                map.setView(\n                    [$scope.config.default_view.lat, $scope.config.default_view.lon],\n                    $scope.config.default_view.zoom\n                );\n\n                // Update our draggable marker to the default.\n                marker.setLatLng([$scope.config.default_view.lat, $scope.config.default_view.lon]);\n            }\n\n            // Update our map defaults when the marker is dragged to a new spot.\n            function handleDragEnd(e) {\n                $scope.$evalAsync(function () {\n                    var latLng = e.target.getLatLng().wrap();\n                    $scope.config.default_view.lat = latLng.lat;\n                    $scope.config.default_view.lon = latLng.lng;\n\n                    $scope.updateMapPreview();\n                });\n            }\n\n            function handleClick(e) {\n                $scope.$evalAsync(function () {\n                    var latLng = e.latlng.wrap();\n                    $scope.config.default_view.lat = latLng.lat;\n                    $scope.config.default_view.lon = latLng.lng;\n\n                    $scope.updateMapPreview();\n                });\n            }\n\n            // Update our default zoom level when the preview map's is changed.\n            function handleMoveEnd(e) {\n                $scope.$evalAsync(function () {\n                    $scope.config.default_view.zoom = map.getZoom();\n                });\n            }\n        }\n    };\n}];\n","module.exports = \"<div>\\n\\n    <div class=\\\"form-field\\\">\\n        <label class=\\\"input-label\\\" translate>settings.map_default_location</label>\\n        <div id=\\\"settings-map\\\" style=\\\"height: 300px; width: 100%;\\\"></div>\\n    </div>\\n\\n    <div class=\\\"form-field\\\">\\n        <label translate>settings.map_default_baselayer</label>\\n        <select id=\\\"map-settings-base-layer\\\" class=\\\"form-control\\\" ng-model=\\\"config.default_view.baselayer\\\" ng-change=\\\"updateMapPreviewLayer()\\\" ng-options=\\\"index as layer.name for (index, layer) in baselayers\\\">\\n        </select>\\n    </div>\\n\\n    <div class=\\\"form-field\\\">\\n       <label class=\\\"input-label\\\"\\n            ng-class=\\\"{'error': map.latitude.$valid}\\\"\\n            for=\\\"map-settings-latitude\\\" translate>settings.map_default_latitude</label>\\n        <input name=\\\"latitude\\\" id=\\\"map-settings-latitude\\\" type=\\\"number\\\" step=\\\"any\\\" ng-min=\\\"-90\\\" ng-max=\\\"90\\\" required\\n            ng-class=\\\"{'error': map.latitude.$valid}\\\"\\n            ng-model=\\\"config.default_view.lat\\\" ng-pattern=\\\"patternFloat\\\" ng-change=\\\"updateMapPreview()\\\" />\\n    </div>\\n\\n    <div class=\\\"form-field\\\">\\n        <label class=\\\"input-label\\\"\\n            ng-class=\\\"{'error': map.latitude.$valid}\\\"\\n            for=\\\"map-settings-longitude\\\" translate>settings.map_default_longitude</label>\\n        <input name=\\\"longitude\\\" id=\\\"map-settings-longitude\\\" type=\\\"number\\\" step=\\\"any\\\" min=\\\"-180\\\" max=\\\"180\\\" required\\n            ng-class=\\\"{'error': map.longitude.$valid}\\\"\\n            ng-model=\\\"config.default_view.lon\\\" ng-pattern=\\\"patternFloat\\\" ng-change=\\\"updateMapPreview()\\\" />\\n    </div>\\n\\n    <div class=\\\"form-field\\\">\\n        <label class=\\\"input-label\\\" for=\\\"map-settings-zoom\\\" translate>settings.map_default_zoom_level</label>\\n        <input id=\\\"map-settings-zoom\\\" type=\\\"number\\\" min=\\\"{{minZoom}}\\\" max=\\\"{{maxZoom}}\\\" required class=\\\"form-control\\\" ng-model=\\\"config.default_view.zoom\\\" ng-pattern=\\\"onlyNumbers\\\" ng-change=\\\"updateMapPreview()\\\" />\\n    </div>\\n    <div class=\\\"form-field\\\" ng-show=\\\"locationPrecisionEnabled\\\">\\n        <label class=\\\"input-label\\\" for=\\\"map-settings-obfuscation\\\">\\n            <span translate>\\n                settings.map_location_precision\\n            </span>            \\n        </label>\\n        <p>\\n            <span translate>\\n                settings.map_precise_to\\n            </span>\\n            {{ current_precision }}km\\n        </p>\\n        <input id=\\\"map-settings-obfuscation\\\" type=\\\"number\\\" min=\\\"{{minObfuscation}}\\\" ng-change=\\\"updatePrecision()\\\" max=\\\"{{maxObfuscation}}\\\" required class=\\\"form-control\\\" ng-model=\\\"config.location_precision\\\" ng-pattern=\\\"onlyNumbers\\\" ng-change=\\\"updateMapPreview()\\\" />\\n    </div>\\n    <div class=\\\"form-field checkbox\\\">\\n        <input type=\\\"checkbox\\\" ng-model=\\\"config.clustering\\\" id=\\\"map-settings-clustering\\\">\\n        <label for=\\\"map-settings-clustering\\\" translate>settings.map_clustering</label>\\n    </div>\\n</div>\\n\";","module.exports = [\n    '$q',\n    '$http',\n    '$translate',\n    '$location',\n    '$rootScope',\n    'ConfigEndpoint',\n    'ApiKeyEndpoint',\n    '_',\n    'Notify',\n    'Maps',\n    'Util',\n    'Languages',\n    'Features',\n    'Session',\n    'TranslationService',\nfunction (\n    $q,\n    $http,\n    $translate,\n    $location,\n    $rootScope,\n    ConfigEndpoint,\n    ApiKeyEndpoint,\n    _,\n    Notify,\n    Maps,\n    Util,\n    Languages,\n    Features,\n    Session,\n    TranslationService\n) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            formId: '@',\n            formTemplate: '@'\n        },\n        template: require('./settings-editor.html'),\n        link: function ($scope, $element, $attrs) {\n            $scope.saving_config = false;\n\n            $scope.save = $translate.instant('app.save');\n            $scope.saving = $translate.instant('app.saving');\n            $scope.map = {};\n            $scope.fileContainer = {\n                file : null\n            };\n            $scope.SystemLanguage = '';\n\n            Features.loadFeatures().then(function () {\n                $scope.isPrivateEnabled = Features.isFeatureEnabled('private');\n            });\n\n            // Get API Key\n            ApiKeyEndpoint.query().$promise.then(function (results) {\n                $scope.api_key = results[0];\n            });\n\n            ConfigEndpoint.get({ id: 'site' }).$promise.then((site) => {\n                $scope.site = site;\n                $scope.SystemLanguage = site.language;\n            });\n\n            $scope.userSavedSettings = false;\n\n            $scope.clearHeader = function () {\n                $scope.site.image_header = null;\n            };\n\n            var updateSiteHeader = function () {\n                $rootScope.$broadcast('event:update:header');\n            };\n\n            var uploadHeaderImage = function () {\n                var dfd = $q.defer();\n\n                if ($scope.fileContainer.file) {\n                    var formData = new FormData();\n                    formData.append('file', $scope.fileContainer.file);\n\n                    $http.post(\n                        Util.apiUrl('/media'),\n                        formData,\n                        {\n                            headers: {\n                                'Content-Type': undefined\n                            }\n                        }\n                    ).then(function (response) {\n                        $scope.site.image_header = response.data.original_file_url;\n                        dfd.resolve();\n                    }, function (errorResponse) {\n                        dfd.reject(errorResponse);\n                    });\n                } else {\n                    dfd.resolve();\n                }\n\n                return dfd.promise;\n            };\n\n            $scope.generateApiKey = function () {\n                Notify.confirmModal('notify.api_key.change_question').\n                then(function () {\n                    var persist = $scope.api_key ? ApiKeyEndpoint.update($scope.api_key) : ApiKeyEndpoint.save({});\n                    persist.$promise.then(function (result) {\n                        $scope.api_key = result;\n                    });\n                });\n            };\n\n            $scope.updateConfig = function () {\n                $scope.saving_config = true;\n                uploadHeaderImage().then(function () {\n                    $q.all([\n                        ConfigEndpoint.saveCache($scope.site).$promise,\n                        ConfigEndpoint.saveCache($scope.map).$promise\n                    ]).then(function (result) {\n                        $scope.saving_config = false;\n                        updateSiteHeader();\n                        let newSystemLanguage = result[0].language;\n                        let userLanguage = Session.getSessionDataEntry('language');\n                        if ((userLanguage === undefined || userLanguage === null) && $scope.SystemLanguage !== newSystemLanguage) {\n                            TranslationService.translate(newSystemLanguage);\n                        }\n                        $scope.SystemLanguage = newSystemLanguage;\n                        Notify.notify('notify.general_settings.save_success');\n                    }, function (errorResponse) {\n                        Notify.apiErrors(errorResponse);\n                        $scope.saving_config = false;\n                    });\n                }, function (errorResponse) {\n                    Notify.apiErrors(errorResponse);\n                    $scope.saving_config = false;\n                });\n            };\n\n            $scope.cancel = function () {\n                $location.path('/settings');\n            };\n        }\n    };\n}];\n","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>app.general</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <form id=\\\"site\\\" name=\\\"form\\\" ng-submit=\\\"updateConfig()\\\">\\n\\n            <!-- toolbar -->\\n            <div class=\\\"toolbar\\\">\\n                <div class=\\\"button-group\\\">\\n                    <button type=\\\"button\\\" class=\\\"button-flat\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n                    <button type=\\\"submit\\\" ng-click=\\\"updateConfig()\\\" class=\\\"button-alpha\\\"  ng-if=\\\"!saving_config\\\" ng-disabled=\\\"form.$invalid || isUnchanged(site) || saving_config\\\">{{save}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"button-alpha\\\"  ng-if=\\\"saving_config\\\" ng-disabled=\\\"form.$invalid || isUnchanged(site) || saving_config\\\" translate>{{saving}}\\n                      <div class=\\\"loading\\\">\\n                        <div class=\\\"line\\\"></div>\\n                        <div class=\\\"line\\\"></div>\\n                        <div class=\\\"line\\\"></div>\\n                      </div>\\n                    </button>\\n\\n\\n<!--                     <button type=\\\"button\\\" ng-click=\\\"updateConfig()\\\" class=\\\"button-alpha\\\" type=\\\"submit\\\" ng-disabled=\\\"form.$invalid || isUnchanged(site) || saving_config\\\" translate>\\n                        <div class=\\\"loading\\\" ng-if=\\\"saving_config\\\">\\n                            <div class=\\\"line\\\"></div>\\n                            <div class=\\\"line\\\"></div>\\n                            <div class=\\\"line\\\"></div>\\n                        </div>\\n                        <span ng-hide=\\\"saving\\\" translate>app.save</span>\\n                    </button>\\n -->                </div>\\n            </div>\\n            <!-- end toolbar -->\\n\\n            <div class=\\\"main-col\\\">\\n\\n                <div class=\\\"form-sheet\\\">\\n                    <div class=\\\"form-field\\\">\\n                        <label for=\\\"site-settings-name\\\" ng-class=\\\"{ 'success': !form.name.$invalid && form.name.$dirty, 'error' : form.name.$invalid && form.name.$dirty }\\\" translate>settings.deployment_name</label>\\n                        <input id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"{{'settings.deployment_name' | translate}}\\\" ng-model=\\\"site.name\\\" ng-class=\\\"{'error': form.name.$invalid && form.name.$dirty}\\\" required>\\n\\n                         <div class=\\\"alert error\\\" ng-repeat=\\\"(error, value) in form.name.$error\\\" ng-show=\\\"form.name.$dirty\\\" >\\n                            <svg class=\\\"iconic\\\">\\n                              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                            <p>{{'settings.valid.name.' + error  | translate}}</p>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-field\\\">\\n                        <label for=\\\"site-settings-description\\\" translate>settings.site_description</label>\\n\\n                        <textarea id=\\\"site-settings-description\\\" name=\\\"description\\\" type=\\\"text\\\" ng-model=\\\"site.description\\\" placeholder=\\\"{{'settings.site_description_placeholder' | translate}}\\\" data-min-rows='1' rows='1'></textarea>\\n                    </div>\\n\\n                    <div class=\\\"form-field\\\">\\n                         <label translate>settings.deployment_logo</label>\\n                         <figure ng-show=\\\"site.image_header\\\">\\n                            <img ng-src=\\\"{{ site.image_header }}\\\" class=\\\"postcard-image deployment-logo\\\" />\\n                            <button class=\\\"button-flat\\\" ng-click=\\\"clearHeader()\\\" translate=\\\"settings.delete_logo\\\"></button>\\n                         </figure>\\n\\n                         <file-upload container=\\\"fileContainer\\\">\\n                         </file-upload>\\n                    </div>\\n\\n                    <div class=\\\"form-field\\\" ng-class=\\\"{ 'error': form.email.$invalid && form.email.$dirty }\\\">\\n                        <label translate>settings.site_email</label>\\n                        <p class=\\\"small\\\" translate>settings.site_email_note</p>\\n                        <input id=\\\"site-settings-email\\\" type=\\\"email\\\" placeholder=\\\"name@domain.com\\\" value=\\\"brandon@ushahidi.com\\\" name=\\\"email\\\" ng-model=\\\"site.email\\\">\\n                        <div ng-repeat=\\\"(error, value) in form.email.$error\\\"\\n                            ng-show=\\\"form.email.$dirty\\\"\\n                            class=\\\"alert error\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                            </svg>\\n                            <p translate=\\\"{{'user.valid.email.' + error}}\\\" translate-default=\\\"{{error}}\\\"></p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-field\\\">\\n                    <label translate>settings.site_language</label>\\n                    <language-switch site=\\\"site\\\"></language-switch>\\n                    </div>\\n                    <div class=\\\"form-field checkbox\\\" ng-show=\\\"isPrivateEnabled\\\">\\n                         <input id=\\\"private\\\" ng-model=\\\"site.private\\\" type=\\\"checkbox\\\">\\n                         <label for=\\\"private\\\" translate>settings.site_private</label>\\n                         <p translate=\\\"settings.site_private_desc\\\">Enabling this option makes your deployment and it’s data only accessible to registered users with the correct privileges, who must sign in for access.</p>\\n                    </div>\\n\\n                    <div class=\\\"form-field\\\">\\n                      <label translate=\\\"settings.api_key\\\">API Key</label>\\n                      <p translate=\\\"settings.api_key_desc\\\">The API Key is unique to your deployment, it can be used to allow third party systems to interact with your Ushahidi deployment.</p>\\n                      <button type=\\\"button\\\" class=\\\"button-beta\\\" ng-click=\\\"generateApiKey()\\\">\\n                        <svg class=\\\"iconic\\\">\\n                          <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#key\\\"></use>\\n                        </svg>\\n                        <span class=\\\"button-label hidden-when-small\\\">\\n                          Generate API Key\\n                        </span>\\n                      </button>\\n                      <span id=\\\"api_key\\\" class=\\\"bug\\\">{{api_key.api_key}}</span>\\n\\n                    </div>\\n\\n                    <settings-map config=\\\"map\\\"></settings-map>\\n                </div>\\n\\n                <div class=\\\"form-sheet\\\" ng-show=\\\"todo\\\">\\n\\n                    {# TODO: not yet implemented #}\\n\\n                    <div class=\\\"form-sheet-summary\\\">\\n                        <h3 class=\\\"form-sheet-title\\\" translate>settings.deployment_delete_this</h3>\\n                    </div>\\n\\n                    <div class=\\\"form-field\\\">\\n                        <p translate>settings.deployment_delete_info</p>\\n\\n                        <button class=\\\"button-destructive\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                            </svg>\\n                            <span class=\\\"button-label\\\" translate>settings.deployment_delete</span>\\n                        </button>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </form>\\n\\n    </main>\\n\\n</div>\\n\";","/**\n * Ushahidi Angular Filter System User directive\n * Drop in directive for managing filters for users\n */\n\nmodule.exports = [\nfunction (\n) {\n    var controller = [\n        '$scope',\n        '$rootScope',\n        '$translate',\n        '$timeout',\n        'RoleEndpoint',\n        'UserEndpoint',\n        '_',\n        function (\n            $scope,\n            $rootScope,\n            $translate,\n            $timeout,\n            RoleEndpoint,\n            UserEndpoint,\n            _\n        ) {\n            $scope.filtersMenuOpen = false;\n            $scope.cancel = function () {\n                // Reset filters\n                $scope.usersFiltersForm.$rollbackViewValue();\n                // and close dropdown\n                $scope.filtersMenuOpen = false;\n            };\n\n            $scope.applyFilters = function () {\n                // ngFormController automatically commits changes to the model ($scope.filters)\n                // Just close the dropdown\n                $scope.filtersMenuOpen = false;\n            };\n        }];\n    return {\n        restrict: 'E',\n        replace: true,\n        template: require('./filter-users.html'),\n        scope: {\n            filters: '='\n        },\n        controller: controller\n    };\n}];\n","module.exports = \"<form name=\\\"usersFiltersForm\\\" role=\\\"search\\\" class=\\\"searchbar\\\" dropdown is-open=\\\"filtersMenuOpen\\\" auto-close=\\\"outsideClick\\\" ng-submit=\\\"applyFilters()\\\" ng-model-options=\\\"{ updateOn : 'submit' }\\\" ng-class=\\\"{ active: status.isopen }\\\">\\n    <!-- Include search bar -->\\n    <filter-searchbar model=\\\"filters\\\"></filter-searchbar>\\n\\n    <!-- Toggle Filters show/hide -->\\n    <div class=\\\"searchbar-options\\\">\\n        <a href=\\\"#\\\" id=\\\"toggleUserSearchFilters\\\" class=\\\"button searchbar-options-filter init\\\" data-toggle=\\\"search-filters\\\" dropdown-toggle>\\n            <span class=\\\"button-label\\\" translate>app.filters</span>\\n            <svg class=\\\"iconic\\\">\\n              <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n        </a>\\n    </div>\\n\\n    <!-- Filters menu -->\\n    <div class=\\\"dropdown-menu init\\\" data-toggle-target=\\\"search-filters\\\" dropdown-menu>\\n        <div class=\\\"dropdown-menu-body\\\">\\n            <filter-role model=\\\"filters.role\\\"></filter-role>\\n        </div>\\n\\n        <div class=\\\"form-field filter-actions\\\">\\n            <button type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancel()\\\" translate>app.cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"button-alpha\\\" ng-disabled=\\\"applyEnabled\\\"  translate>app.apply_filters</button>\\n        </div>\\n    </div>\\n</form>\\n\";","module.exports = [\n    '$translate',\n    '$rootScope',\n    '$location',\n    'RoleEndpoint',\n    'Notify',\n    '_',\n    'Features',\nfunction (\n    $translate,\n    $rootScope,\n    $location,\n    RoleEndpoint,\n    Notify,\n    _,\n    Features\n) {\n    return {\n        restrict: 'A',\n        link: function ($scope, $element, $attrs) {\n            $rootScope.setLayout('layout-a');\n            $scope.refreshView = function () {\n                RoleEndpoint.queryFresh().$promise.then(function (roles) {\n                    $scope.roles = roles;\n                });\n            };\n\n            $scope.refreshView();\n            Features.loadFeatures().then(function () {\n                $scope.rolesEnabled = Features.isFeatureEnabled('roles');\n            });\n        }\n    };\n}];\n","module.exports = [\n    '$translate',\n    '$location',\n    'RoleEndpoint',\n    'PermissionEndpoint',\n    'Notify',\nfunction (\n    $translate,\n    $location,\n    RoleEndpoint,\n    PermissionEndpoint,\n    Notify\n) {\n    return {\n        restrict: 'A',\n        link: function ($scope, $element, $attrs) {\n            $scope.whereToNext = 'settings/roles';\n            $scope.save = $translate.instant('app.save');\n            $scope.saving = $translate.instant('app.saving');\n            $scope.saving_role = false;\n            // @uirouter-refactor this is very wrong.\n            RoleEndpoint.getFresh({id: $scope.$resolve.$transition$.params().id}).$promise.then(function (role) {\n                $scope.role = role;\n\n                $scope.title = $scope.role.id ? 'role.edit_role' : 'role.add_role';\n\n                $translate($scope.title).then(function (title) {\n                    $scope.title = title;\n                    $scope.$emit('setPageTitle', title);\n                });\n            });\n\n            PermissionEndpoint.query().$promise.then(function (permissions) {\n                $scope.permissions = permissions.results;\n            });\n\n            $scope.cancel = function () {\n                $location.path($scope.whereToNext);\n            };\n\n            $scope.saveRole = function (role) {\n                $scope.saving_role = true;\n                role.name = role.name ? role.name : role.display_name;\n\n                RoleEndpoint.saveCache(role).$promise.then(function (result) {\n                    Notify.notify('notify.role.save_success', {role: role.display_name});\n                    $location.path($scope.whereToNext);\n                }, function (errorResponse) { // error\n                    Notify.apiErrors(errorResponse);\n                });\n                $scope.saving_role = false;\n            };\n\n            var handleResponseErrors = function (errorResponse) {\n                Notify.apiErrors(errorResponse);\n            };\n\n            $scope.checkIfLastAdmin = function () {\n                var admins = 0;\n                _.each($scope.roles, function (role) {\n                    if (role.name === 'admin') {\n                        admins++;\n                    }\n                });\n\n                return admins === 1;\n            };\n\n            $scope.deleteRole = function (role) {\n                if (role.name === 'admin' && $scope.checkIfLastAdmin()) {\n                    Notify.error('notify.role.last_admin');\n                    return;\n                }\n\n                Notify.confirmDelete('notify.role.delete_question', {\n                    role: role.display_name\n                }).then(function () {\n                    RoleEndpoint.delete({ id: role.id }).$promise.then(function () {\n                        Notify.notify('notify.role.destroy_success', {\n                            role: role.display_name\n                        });\n                        $location.path($scope.whereToNext);\n                    }, handleResponseErrors);\n                });\n            };\n        }\n    };\n}];\n","module.exports = [\n    '$translate',\n    '$rootScope',\n    '$location',\n    'WebhookEndpoint',\n    'Notify',\n    '_',\n    'Features',\nfunction (\n    $translate,\n    $rootScope,\n    $location,\n    WebhookEndpoint,\n    Notify,\n    _,\n    Features\n) {\n    return {\n        restrict: 'A',\n        link: function ($scope, $element, $attrs) {\n            $rootScope.setLayout('layout-a');\n\n            $scope.refreshView = function () {\n                WebhookEndpoint.queryFresh().$promise.then(function (webhooks) {\n                    $scope.webhooks = webhooks;\n                });\n            };\n\n            $scope.refreshView();\n            Features.loadFeatures().then(function () {\n                $scope.webhooksEnabled = Features.isFeatureEnabled('webhooks');\n            });\n        }\n    };\n}];\n","module.exports = [\n    '$q',\n    '$translate',\n    '$location',\n    '_',\n    '$state',\n    'WebhookEndpoint',\n    'FormEndpoint',\n    'FormAttributeEndpoint',\n    'Notify',\nfunction (\n    $q,\n    $translate,\n    $location,\n    _,\n    $state,\n    WebhookEndpoint,\n    FormEndpoint,\n    FormAttributeEndpoint,\n    Notify\n) {\n    return {\n        restrict: 'A',\n        link: function ($scope, $element, $attrs) {\n            $scope.whereToNext = 'settings/webhooks';\n\n            // TODO: This should be set in the settings config table and retrieved from the API\n            $scope.event_types = ['create', 'update'];\n            $scope.entity_types = ['post'];\n\n            $scope.formEnabled = false;\n            $scope.selectedForm = undefined;\n\n            $scope.save = $translate.instant('app.save');\n            $scope.saving = $translate.instant('app.saving');\n            $scope.processing = false;\n\n            $q.all([\n              FormEndpoint.query().$promise,\n              WebhookEndpoint.getFresh({id: $scope.$resolve.$transition$.params().id}).$promise\n            ]).then(function (response) {\n                $scope.forms = response[0];\n                $scope.webhook = response[1];\n\n                if ($scope.webhook.form_id) {\n                    $scope.toggleFormAssociation();\n                    var form = _.find($scope.forms, function (form) {\n                        return form.id === $scope.webhook.form_id;\n                    });\n\n                    $scope.setSelectedForm(form);\n                }\n\n                $scope.title = $scope.webhook.id ? 'webhook.edit_webhook' : 'webhook.add_webhook';\n\n                $translate($scope.title).then(function (title) {\n                    $scope.title = title;\n                    $scope.$emit('setPageTitle', title);\n                });\n            });\n\n\n            $scope.cancel = function () {\n                $location.path($scope.whereToNext);\n            };\n\n            $scope.saveWebhook = function (webhook) {\n                $scope.processing = true;\n                webhook.name = webhook.name ? webhook.name : webhook.display_name;\n\n                WebhookEndpoint.saveCache(webhook).$promise.then(function (result) {\n                    Notify.notify('notify.webhook.save_success', {webhook: webhook.display_name});\n                    $location.path($scope.whereToNext);\n                }, function (errorResponse) { // error\n                    Notify.apiErrors(errorResponse);\n                });\n                $scope.processing = false;\n            };\n\n            var handleResponseErrors = function (errorResponse) {\n                $scope.processing = false;\n                Notify.apiErrors(errorResponse);\n            };\n\n\n            $scope.getFormAttributes = function (form) {\n\n                if ($scope.selectedForm.attributes) {\n                    return;\n                }\n\n                $scope.selectedForm.attributes = [];\n\n                // Get Attributes if not previously loaded\n                FormAttributeEndpoint.query({formId: form.id}).$promise.then(function (results) {\n                    // Due to the oddness of title and description being both Post fields and Attributes\n                    // it is necessary to construct an index into the Post object that can be used with the\n                    // Laravel/Kohana function array_get/array_set\n                    _.each(results, function (attribute) {\n                        if (attribute.type === 'title' || attribute.type === 'description') {\n                            attribute.post_key = attribute.type === 'title' ? attribute.type : 'content';\n                        } else {\n                            attribute.post_key = 'values.' + attribute.key;\n                        }\n                        $scope.selectedForm.attributes.push(attribute);\n                    });\n                });\n            };\n\n            $scope.setSelectedForm = function (form, provider_id) {\n                $scope.webhook.form_id = form.id;\n                $scope.selectedForm = form;\n                $scope.getFormAttributes(form);\n            };\n\n            $scope.toggleFormAssociation = function () {\n                if ($scope.formEnabled) {\n                    if ($scope.webhook.form_id) {\n                        $scope.selectedForm = undefined;\n                        $scope.webhook.form_id = undefined;\n                        $scope.webhook.source_field_key = undefined;\n                        $scope.webhook.destination_field_key = undefined;\n                    }\n                }\n                $scope.formEnabled = !$scope.formEnabled;\n            };\n\n            $scope.deleteWebhook = function (webhook) {\n\n                Notify.confirmDelete('notify.webhook.delete_question', {\n                    webhook: webhook.display_name\n                }).then(function () {\n                    WebhookEndpoint.delete({ id: webhook.id }).$promise.then(function () {\n                        Notify.notify('notify.webhook.destroy_success', {\n                            webhook: webhook.display_name\n                        });\n                        $location.path($scope.whereToNext);\n                    }, handleResponseErrors);\n                });\n            };\n        }\n    };\n}];\n","module.exports = [\n    '$stateProvider',\n    '$urlMatcherFactoryProvider',\nfunction (\n    $stateProvider,\n    $urlMatcherFactoryProvider\n) {\n    $urlMatcherFactoryProvider.strictMode(false);\n    /* todo: these routes should only exist when the user is admin! */\n    $stateProvider\n    .state(\n        {\n            name: 'settings',\n            controller: require('./settings.controller.js'),\n            template: require('./settings.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.list',\n            url: '/settings',\n            template: require('./settings-list.html'),\n            controller: require('./settings-list.controller.js')\n        }\n    )\n    .state(\n        {\n            name: 'settings.general',\n            url: '/settings/general',\n            controller: require('./site/site.controller.js'),\n            template: require('./site/settings-general.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.dataImport',\n            url: '/settings/data-import',\n            controller: require('./data-import/data-import.controller.js'),\n            template: require('./data-import/data-import.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.dataAfterImport',\n            url: '/settings/data-after-import',\n            controller: require('./data-import/data-after-import.controller.js'),\n            template: require('./data-import/after-import.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.userSettings',\n            url: '/settings/user-settings',\n            controller: require('./user-settings/user-settings.controller.js'),\n            template: require('./user-settings/user-settings.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.dataExport',\n            url: '/settings/data-export',\n            controller: require('./data-export/data-export.controller.js'),\n            template: require('./data-export/data-export.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.hdx',\n            url: '/settings/hdx',\n            controller: require('./data-export/hdx-export.controller.js'),\n            template: require('./data-export/hdx-export.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.hdxDetails',\n            url: '/settings/hdx-details',\n            component: 'hdxDetails',\n            params: {\n                exportJob: null\n            }\n        }\n    )\n\n    .state(\n        {\n            name: 'settings.surveys',\n            url: '/settings/surveys',\n            controller: require('./surveys/surveys.controller.js'),\n            template: require('./surveys/surveys.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.surveys.create',\n            url: '/create',\n            controller: require('./surveys/edit.controller.js'),\n            template: require('./surveys/survey-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.surveys.targeted',\n            url: '/targeted-survey'\n        }\n    )\n    .state(\n        {\n            name: 'settings.surveys.targeted.create',\n            url: '/targeted-survey/create',\n            controller: require('./surveys/targeted-surveys/targeted-edit.controller.js'),\n            template: require('./surveys/targeted-surveys/targeted-survey-edit.html')\n        }\n    )\n\n    .state(\n        {\n            name: 'settings.surveys.targeted.published',\n            url: '/targeted-survey/published/:id',\n            controller: require('./surveys/targeted-surveys/targeted-edit.controller.js'),\n            template: require('./surveys/targeted-surveys/targeted-survey-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.surveys.id',\n            url: '/:action/:id',\n            controller: require('./surveys/edit.controller.js'),\n            template: require('./surveys/survey-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.categories',\n            url: '/settings/categories',\n            controller: require('./categories/categories.controller.js'),\n            template: require('./categories/categories.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.categories.create',\n            url: '/create',\n            controller: require('./categories/edit.controller.js'),\n            template: require('./categories/categories-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.categories.edit',\n            url: '/:id',\n            controller: require('./categories/edit.controller.js'),\n            template: require('./categories/categories-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.users',\n            url: '/settings/users',\n            controller: require('./users/users.controller.js'),\n            template: require('./users/users.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.users.create',\n            url: '/create',\n            controller: require('./users/create.controller.js'),\n            template: require('./users/users-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.users.edit',\n            url: '/:id',\n            controller: require('./users/edit.controller.js'),\n            template: require('./users/users-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.roles',\n            url: '/settings/roles',\n            controller: require('./roles/roles.controller.js'),\n            template: require('./roles/roles.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.roles.create',\n            url: '/create',\n            controller: require('./roles/roles.controller.js'),\n            template: require('./roles/roles-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.roles.edit',\n            url: '/:id',\n            controller: require('./roles/roles.controller.js'),\n            template: require('./roles/roles-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.webhooks',\n            url: '/settings/webhooks',\n            controller: require('./webhooks/webhooks.controller.js'),\n            template: require('./webhooks/webhooks.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.webhooks.create',\n            url: '/create',\n            controller: require('./webhooks/webhooks.controller.js'),\n            template: require('./webhooks/webhooks-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.webhooks.edit',\n            url: '/:id',\n            controller: require('./webhooks/webhooks.controller.js'),\n            template: require('./webhooks/webhooks-edit.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.datasources',\n            url: '/settings/datasources',\n            controller: require('./datasources/datasources.controller.js'),\n            template: require('./datasources/datasources.html')\n        }\n    )\n    .state(\n        {\n            name: 'settings.plan',\n            url: '/settings/plan',\n            controller: require('./plans/plans.controller.js'),\n            template: require('./plans/plan.html')\n        }\n    );\n}];\n","module.exports = [\n    '$scope',\n    '$translate',\n    '$location',\n    '$rootScope',\nfunction (\n    $scope,\n    $translate,\n    $location,\n    $rootScope\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    $translate('tool.settings').then(function (title) {\n        $scope.title = title;\n        $scope.$emit('setPageTitle', title);\n    });\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n}];\n","module.exports = \"<ui-view></ui-view>\";","module.exports = \"<div>\\n    <layout-class layout=\\\"c\\\"></layout-class>\\n    <div class=\\\"mode-context init\\\" ng-controller=\\\"navigation as nav\\\" dropdown>\\n        <header class=\\\"mode-context-header\\\" ng-class=\\\"{ 'has-logo' : nav.site.image_header }\\\">\\n            <h1 class=\\\"mode-context-title\\\"><a ui-sref=\\\"posts.map.all\\\" ng-bind=\\\"nav.site.name\\\"></a></h1>\\n            <img ng-if=\\\"nav.site.image_header\\\" ng-src=\\\"{{ nav.site.image_header }}\\\" class=\\\"deployment-logo\\\" />\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n\\n        <div class=\\\"mode-context-body\\\">\\n            <p markdown-to-html=\\\"nav.site.description\\\"></p>\\n        </div>\\n    </div>\\n    <main role=\\\"main\\\">\\n\\n        <div class=\\\"main-col\\\">\\n\\n            <div class=\\\"listing card init\\\" ng-show=\\\"hasManageSettingsPermission()\\\">\\n               <div class=\\\"listing-item\\\" ng-show=\\\"hasPermission('Manage Settings')\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.general\\\" translate>settings.settings_list.general</a></h2>\\n                       <p class=\\\"listing-item-secondary\\\" translate>settings.settings_list.general_desc</p>\\n                   </div>\\n               </div>\\n\\n               <div class=\\\"listing-item\\\" ng-show=\\\"hasPermission('Manage Settings')\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.surveys\\\" translate>settings.settings_list.surveys</a></h2>\\n                       <p class=\\\"listing-item-secondary\\\" translate>settings.settings_list.surveys_desc</p>\\n                   </div>\\n               </div>\\n\\n               <div class=\\\"listing-item\\\" ng-show=\\\"hasPermission('Manage Settings')\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.datasources\\\" translate>settings.settings_list.data_sources</a></h2>\\n                       <p class=\\\"listing-item-secondary\\\" translate>settings.settings_list.data_sources_desc</p>\\n                   </div>\\n               </div>\\n               <div class=\\\"listing-item\\\" ng-show=\\\"hasPermission('Bulk Data Import and Export') || hasPermission('Bulk Data Import')\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.dataImport\\\" translate>settings.settings_list.import</a></h2>\\n                       <p class=\\\"listing-item-secondary\\\" translate>settings.settings_list.import_desc</p>\\n                   </div>\\n               </div>\\n               <div class=\\\"listing-item\\\" ng-show=\\\"userSettingsEnabled && hxlEnabled\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\">\\n                           <a ui-sref=\\\"settings.userSettings\\\" translate>settings.settings_list.user_settings</a></h2>\\n                           <p class=\\\"listing-item-secondary\\\" translate>settings.settings_list.user_settings_desc</p>\\n                   </div>\\n               </div>\\n\\n               <div class=\\\"listing-item\\\" ng-show=\\\"hasPermission('Bulk Data Import and Export')\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\">\\n                           <a ui-sref=\\\"settings.dataExport\\\" translate>{{dataExportTitle}}</a></h2>\\n                           <p class=\\\"listing-item-secondary\\\" translate>{{dataExportDescription}}</p>\\n                   </div>\\n               </div>\\n\\n               <div class=\\\"listing-item\\\" ng-show=\\\"hasPermission('Manage Users')\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.users\\\" translate>settings.settings_list.users</a></h2>\\n                       <p class=\\\"listing-item-secondary\\\" translate>settings.settings_list.users_desc</p>\\n                   </div>\\n               </div>\\n\\n               <div class=\\\"listing-item\\\" ng-show=\\\"isAdmin()\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.roles\\\" translate>settings.settings_list.roles</a></h2>\\n                       <p class=\\\"listing-item-secondary\\\" translate>settings.settings_list.roles_desc</p>\\n                   </div>\\n               </div>\\n\\n               <div class=\\\"listing-item\\\" ng-show=\\\"hasPermission('Manage Settings')\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.categories\\\" translate>settings.settings_list.categories</a></h2>\\n                       <p class=\\\"listing-item-secondary\\\" translate>settings.settings_list.categories_desc</p>\\n                   </div>\\n               </div>\\n\\n               <div class=\\\"listing-item\\\" ng-show=\\\"hasPermission('Manage Settings')\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.webhooks\\\" translate>settings.settings_list.webhooks</a></h2>\\n                       <p class=\\\"listing-item-secondary\\\" translate>settings.settings_list.webhooks_desc</p>\\n                   </div>\\n               </div>\\n\\n               <div class=\\\"listing-item\\\" ng-show=\\\"planIsAvailable\\\">\\n                   <div class=\\\"listing-item-primary\\\">\\n                       <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.plan\\\" translate>settings.settings_list.plans</a></h2>\\n                       <p class=\\\"listing-item-secondary\\\"  translate-values=\\\"{ current_plan: tierNames[tier] }\\\" translate>settings.settings_list.plan_desc</p>\\n                   </div>\\n               </div>\\n           </div>\\n        </div>\\n    </main>\\n</div>\\n\";","module.exports = [\n    '$translate',\n    '$rootScope',\n    '_',\n    'ConfigEndpoint',\n    'Notify',\n    'Util',\n    'Languages',\n    'Features',\n    '$scope',\nfunction (\n    $translate,\n    $rootScope,\n    _,\n    ConfigEndpoint,\n    Notify,\n    Util,\n    Languages,\n    Features,\n    $scope\n) {\n    $scope.isAdmin = $rootScope.isAdmin;\n    $scope.hasPermission = $rootScope.hasPermission;\n    $scope.hasManageSettingsPermission = $rootScope.hasManageSettingsPermission;\n    $scope.tierNames = {\n        'free': 'Mapper',\n        'surveyor': 'Surveyor',\n        'responder': 'Responder',\n        'free-pre-jun-2016': 'Mapper (Legacy)',\n        'zerorated': 'Social Impact'\n    };\n    $scope.dataExportTitle = 'settings.settings_list.export';\n    $scope.dataExportDescription = 'settings.settings_list.export_desc';\n\n    Features.loadFeatures().then(function () {\n        $scope.planIsAvailable = Features.isViewEnabled('plan');\n        $scope.userSettingsEnabled = Features.isFeatureEnabled('user-settings');\n        $scope.hxlEnabled = Features.isFeatureEnabled('hxl');\n\n        // adjusting title/description of data-export based on if hxl is enabled\n        if ($scope.hxlEnabled) {\n            $scope.dataExportTitle =  'settings.settings_list.export_hxl';\n            $scope.dataExportDescription = 'settings.settings_list.export_desc_hxl';\n        }\n\n        ConfigEndpoint.get({id: 'site'}).$promise.then(function (site) {\n            $scope.tier = site.tier;\n        });\n    });\n}];\n","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$location',\n    '$translate',\nfunction (\n    $scope,\n    $rootScope,\n    $location,\n    $translate\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    $rootScope.setLayout('layout-a');\n    $translate('tool.site_settings').then(function (title) {\n        $scope.title = title;\n        $rootScope.$emit('setPageTitle', title);\n    });\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n}];\n","module.exports = \"<settings-editor></settings-editor>\\n\";","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$location',\n    '$translate',\n    'FormEndpoint',\n    'Notify',\n    '_',\nfunction (\n    $scope,\n    $rootScope,\n    $location,\n    $translate,\n    FormEndpoint,\n    Notify,\n    _\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    // Change layout class\n    $rootScope.setLayout('layout-c');\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n    $scope.fileContainer = {\n        file : null\n    };\n\n    FormEndpoint.query().$promise.then(function (response) {\n        $scope.forms = response;\n    });\n}];\n","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n\\n       <header class=\\\"mode-context-header\\\">\\n           <ol class=\\\"breadcrumbs\\\">\\n               <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n               <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n           </ol>\\n           <h1 class=\\\"mode-context-title\\\" translate>app.import</h1>\\n       </header>\\n\\n       <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n           <svg class=\\\"iconic\\\">\\n               <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n           </svg>\\n           <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n       </span>\\n   </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <div class=\\\"main-col\\\" importer-csv>\\n          <div class=\\\"alert\\\" translate=\\\"feature_limits.view_unavailable\\\" translate-values=\\\"{value: 'Bulk Data Import and Export'}\\\" ng-show=\\\"!csvEnabled\\\">\\n          </div>\\n          <form name=\\\"upload\\\" ng-show=\\\"csvEnabled\\\">\\n            <div class=\\\"form-sheet\\\">\\n                <div class=\\\"form-sheet-summary\\\">\\n                    <h2 class=\\\"form-sheet-title\\\" translate=\\\"data_import.csv\\\">CSV</h2>\\n                    <p translate=\\\"data_import.import_explanation_csv\\\">Import the data from a CSV spreadsheet into your deployment as posts belonging to a specific survey.</p>\\n                </div>\\n\\n                <div class=\\\"stepper\\\">\\n\\n                    <div class=\\\"stepper-item\\\" ng-class=\\\"{'complete': stepOneComplete, 'active' : isActiveStep(1), 'disabled' : !isActiveStep(1) }\\\">\\n                        <h2 class=\\\"stepper-heading\\\">\\n                            <span class=\\\"stepper-badge\\\" ng-show=\\\"!stepOneComplete\\\">1</span>\\n                            <span class=\\\"stepper-badge\\\" ng-show=\\\"stepOneComplete\\\">\\n                                <svg class=\\\"iconic\\\">\\n                                    <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#check\\\"></use>\\n                                </svg>\\n                            </span>\\n                            <div translate=\\\"data_import.choose_csv_file\\\">\\n                              Choose CSV file\\n                            </div>\\n                        </h2>\\n                        <div ng-show=\\\"!stepOneComplete\\\">\\n                            <div class=\\\"form-field\\\">\\n                              <file-upload container=\\\"fileContainer\\\" required>\\n                              </file-upload>\\n                            </div>\\n\\n                            <fieldset class=\\\"custom-fieldset init\\\" dropdown auto-close=\\\"outsideClick\\\">\\n                                <legend data-toggle=\\\"dropdown-menu\\\" class=\\\"dropdown-trigger init\\\" dropdown-toggle>\\n                                  <span class=\\\"legend-label\\\">\\n                                    <span tranlate=\\\"data_import.import_to\\\">\\n                                      Import to\\n                                    </span>\\n                                    <span class=\\\"custom-fieldset-value\\\" ng-show=\\\"!selectedForm.id\\\" translate=\\\"data_import.which_survey\\\">\\n                                      which survey?\\n                                    </span>\\n                                    <span class=\\\"custom-fieldset-value\\\">\\n                                      {{selectedForm.name}}\\n                                    </span>\\n                                  </span>\\n                                  <svg class=\\\"iconic chevron\\\">\\n                                    <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                                  </svg>\\n                                </legend>\\n\\n                                <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                                  <div class=\\\"form-field radio\\\" ng-repeat=\\\"form in forms\\\" ng-class=\\\"{'checked' : isSelectedForm(form)}\\\" ng-click=\\\"setSelectedForm(form)\\\">\\n                                    <label for=\\\"import-to-{{form.id}}\\\">\\n                                        <input id=\\\"import-to-{{form.id}}\\\" name=\\\"import-to\\\" type=\\\"radio\\\">\\n                                        {{form.name}}\\n                                    </label>\\n                                  </div>\\n                                </div>\\n                            </fieldset>\\n\\n                            <div class=\\\"form-field\\\">\\n                                <button class=\\\"button-alpha\\\" type=\\\"submit\\\" ng-disabled=\\\"upload.$invalid\\\" ng-click=\\\"completeStepOne()\\\" translate=\\\"settings.continue\\\">Continue</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"stepper-item\\\" ng-class=\\\"{'complete': stepTwoComplete, 'active' : isActiveStep(2), 'disabled' : !isActiveStep(2) }\\\">\\n                        <h2 class=\\\"stepper-heading\\\">\\n                            <span class=\\\"stepper-badge\\\">2</span>\\n                            <span translate=\\\"data_import.configure_imported_posts\\\">\\n                              Configure imported posts\\n                            </span>\\n                        </h2>\\n                        <div ng-show=\\\"stepOneComplete\\\">\\n                          <ol class=\\\"metadata\\\">\\n                              <li>{{fileContainer.file.name}}</li>\\n                              <li>{{selectedForm.name}}</li>\\n                          </ol>\\n\\n                          <fieldset>\\n                              <legend translate=\\\"data_import.imported_posts_status\\\">Imported posts should have their status...</legend>\\n                              <div class=\\\"form-field radio\\\">\\n                                <label for=\\\"status-model-mark\\\">\\n                                  <input type=\\\"radio\\\" id=\\\"status-model-mark\\\" name=\\\"status-model\\\" ng-model=\\\"statusOption\\\" value=\\\"mark_as\\\"/>\\n                                  <span translate=\\\"data_import.marked_as\\\">Marked as...</span>\\n                                </label>\\n                                <fieldset data-fieldgroup-target=\\\"status-model-mark\\\" ng-show=\\\"isStatusOption('mark_as')\\\">\\n                                  <legend class=\\\"hidden\\\">Post status</legend>\\n                                    <div class=\\\"form-field radio icon-input\\\" ng-class=\\\"{'checked' : isStatusSelected('published')}\\\">\\n                                      <label for=\\\"status-published\\\" ng-click=\\\"setStatus('published')\\\">\\n                                          <svg class=\\\"iconic\\\">\\n                                              <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#globe\\\"></use>\\n                                          </svg>\\n                                          <input type=\\\"radio\\\" name=\\\"status\\\" id=\\\"status-published\\\" checked data-fieldgroup-toggle=\\\"status-model-mark-published\\\" />\\n                                          <span translate=\\\"post.published\\\">Published</span>\\n                                      </label>\\n\\n                                      <!--// IF the chosen survey has tasks that must be completed before its posts can be published //-->\\n                                      <p ng-show=\\\"hasRequiredTask\\\" class=\\\"alert\\\" data-fieldgroup-target=\\\"status-model-mark-published\\\">Your survey, <strong>{{selectedForm.name}}</strong>, includes tasks that typically must be completed for each post before they can be marked 'published.' During this import, all of your imported posts will have their tasks marked as 'incomplete', while still allowing their status to be marked as 'published.' If you edit any of these posts after they've been imported, however, you'll be asked to complete those tasks before re-publishing them.</p>\\n                                      <!--// END IF //-->\\n                                  </div>\\n\\n                                  <div class=\\\"form-field radio icon-input\\\" ng-class=\\\"{'checked' : isStatusSelected('draft')}\\\">\\n                                      <label for=\\\"status-review\\\" ng-click=\\\"setStatus('draft')\\\">\\n                                          <svg class=\\\"iconic\\\">\\n                                              <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#document\\\"></use>\\n                                          </svg>\\n                                          <input type=\\\"radio\\\" name=\\\"status\\\" id=\\\"status-review\\\" />\\n                                          <span translate=\\\"post.draft\\\">Under review</span>\\n                                      </label>\\n                                  </div>\\n\\n                                  <div class=\\\"form-field radio icon-input\\\" ng-class=\\\"{'checked' : isStatusSelected('archived')}\\\">\\n                                      <label for=\\\"status-archive\\\" ng-click=\\\"setStatus('archived')\\\">\\n                                          <svg class=\\\"iconic\\\">\\n                                              <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#box\\\"></use>\\n                                          </svg>\\n                                          <input type=\\\"radio\\\" name=\\\"status\\\" id=\\\"status-archive\\\"/>\\n                                          <span translate=\\\"post.archived\\\">Archived</span>\\n                                      </label>\\n                                  </div>\\n                                </fieldset>\\n                              </div>\\n\\n                              <div class=\\\"form-field radio\\\">\\n                                <label for=\\\"status-model-columns\\\" >\\n                                    <input type=\\\"radio\\\" id=\\\"status-model-columns\\\" name=\\\"status-model\\\" data-fieldgroup-toggle=\\\"status-model-columns\\\" ng-model=\\\"statusOption\\\" value=\\\"defined_column\\\"/>\\n                                    <span translate=\\\"data_import.defined_column\\\">Defined by a column in your CSV file...</span>\\n                                </label>\\n\\n                                <div class=\\\"form-field select\\\" data-fieldgroup-target=\\\"status-model-columns\\\" ng-show=\\\"isStatusOption('defined_column')\\\">\\n                                    <div class=\\\"custom-select\\\">\\n                                      <select ng-model=\\\"selectedStatus\\\">\\n                                         <option ng-repeat=\\\"column in csv.columns track by $index\\\" value=\\\"{{$index}}\\\" label=\\\"{{column}}\\\" >\\n                                      </select>\\n                                    </div>\\n                                    <p><em translate=\\\"data_import.status_explanation\\\">Ushahidi recognizes one of three post statuses: Published, Under review, and Archived. So be sure that each entry in the column you select has one of those three values.</em></p>\\n\\n                                    <!--// IF the chosen survey has tasks that must be completed before its posts can be published //-->\\n                                    <p class=\\\"alert\\\" data-fieldgroup-target=\\\"status-model-mark-published\\\">Your survey, <strong>{{selectedForm.name}}</strong>, includes tasks that typically must be completed for each post before they can be marked 'published.' During this import, all of your imported posts will have their tasks marked as 'incomplete', even if their status is marked as 'published.' If you edit any of these posts after they've been imported, however, you'll be asked to complete those tasks before re-publishing them.</p>\\n                                    <!--// END IF //-->\\n                                </div>\\n                              </div>\\n                      </fieldset>\\n\\n                      <fieldset>\\n                          <legend translate=\\\"data_import.choose_which_column\\\">Choose which CSV column should be assigned to each survey field</legend>\\n                          <p translate=\\\"data_import.each_survey_field\\\">Each of the survey's fields are listed below. Choose the column from your CSV file that you'd like to use to populate each of those fields.</p>\\n\\n                          <table>\\n                              <thead>\\n                                  <tr>\\n                                      <th translate=\\\"data_import.survey_field\\\">Survey field</th>\\n                                      <th translate=\\\"data_import.csv_column\\\">CSV column</th>\\n                                  </tr>\\n                              </thead>\\n\\n                              <tbody>\\n                                  <tr ng-repeat=\\\"attribute in selectedForm.attributes\\\">\\n                                      <td><span ng-class=\\\"{'required' : attribute.required}\\\">{{attribute.label}}</span></td>\\n                                      <td>\\n                                          <div class=\\\"custom-select\\\">\\n                                              <select ng-model=\\\"maps_to[attribute.key]\\\">\\n                                                <option selected=\\\"selected\\\" value=\\\"\\\" translate=\\\"data_import.leave_empty\\\">\\n                                                    Leave empty\\n                                                </option>\\n                                                 <option ng-repeat=\\\"column in csv.columns track by $index\\\" value=\\\"{{$index}}\\\" label=\\\"{{column}}\\\" >\\n                                              </select>\\n                                          </div>\\n                                      </td>\\n                                  </tr>\\n                              </tbody>\\n                            </table>\\n\\n                          </fieldset>\\n                          <div class=\\\"form-field\\\">\\n                            <button class=\\\"button-beta button-flat\\\" data-accordion-trigger=\\\"0\\\" ng-click=\\\"cancelImport()\\\" translate=\\\"data_import.cancel_import\\\">Cancel</button>\\n                            <button type=\\\"submit\\\" class=\\\"button-alpha\\\" ng-click=\\\"completeStepTwo(csv)\\\" translate=\\\"data_import.finish_import\\\">Finish import</button>\\n                          </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n          </form>\\n        </div>\\n    </main>\\n</div>\\n\";","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$location',\n    '$translate',\n    '$q',\n    'Notify',\n    '_',\nfunction (\n    $scope,\n    $rootScope,\n    $location,\n    $translate,\n    $q,\n    Notify,\n    _\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    // Change layout class\n    $rootScope.setLayout('layout-c');\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n}];\n","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n\\n       <header class=\\\"mode-context-header\\\">\\n           <ol class=\\\"breadcrumbs\\\">\\n               <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n               <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n           </ol>\\n           <h1 class=\\\"mode-context-title\\\" translate>app.import</h1>\\n       </header>\\n\\n       <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n           <svg class=\\\"iconic\\\">\\n               <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n           </svg>\\n           <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n       </span>\\n   </div>\\n    <main role=\\\"main\\\">\\n\\n        <div class=\\\"main-col\\\" after-import-csv>\\n\\n          <div class=\\\"form-sheet\\\" ng-show=\\\"!importComplete\\\">\\n              <div class=\\\"form-sheet-summary\\\">\\n                  <h2 class=\\\"form-sheet-title\\\" translate=\\\"data_import.nearly_complete\\\">Your import is nearly complete</h2>\\n                  <progress max=\\\"100\\\" value=\\\"60\\\">\\n                      <!--// Fallback for browsers that don't support progress element //-->\\n                      <div class=\\\"progress-bar\\\">\\n                          <span style=\\\"width: 60%;\\\">Progress: 60%</span>\\n                      </div>\\n                  </progress>\\n                  <p translate=\\\"data_import.finish_info\\\">The data from your CSV spreadsheet is still being processed. You're welcome to leave this page or wait until the process is complete. Either way, we'll notify you when your data is ready.</p>\\n              </div>\\n\\n              <div class=\\\"form-field\\\">\\n                  <a href=\\\"/settings/data-import\\\" class=\\\"button button-gamma button-flat\\\" translate=\\\"data_import.import_another\\\">Import another CSV file</a>\\n              </div>\\n          </div>\\n\\n          <div class=\\\"form-sheet\\\" ng-show=\\\"importComplete\\\">\\n              <div class=\\\"form-sheet-summary\\\">\\n                  <h2 class=\\\"form-sheet-title\\\" translate=\\\"data_import.import_complete\\\">Your import is complete</h2>\\n                  <p translate-values=\\\"{filename: filename}\\\" translate=\\\"data_import.complete_info\\\">The data from your CSV spreadsheet, <em>filename.csv</em>, was successfully imported into your <a href=\\\"\\\">Street Maintenance</a> survey.</p>\\n              </div>\\n\\n              <div class=\\\"form-field\\\">\\n                  <a ng-href=\\\"/collections/{{collectionId}}\\\" class=\\\"button button-alpha\\\" translate=\\\"data_import.see_imported_posts\\\">See imported posts</a>\\n                  <a href=\\\"/settings/data-import\\\" class=\\\"button button-gamma button-flat\\\" translate=\\\"data_import.import_another_csv\\\">Import another CSV file</a>\\n              </div>\\n         </div>\\n\\n    </main>\\n</div>\\n\";","module.exports = [\n    '$scope',\n    '$rootScope',\n    'Features',\n    '$state',\n    '_',\n    '$q',\n    'LoadingProgress',\n    'UserSettingsEndpoint',\n    'Notify',\nfunction (\n    $scope,\n    $rootScope,\n    Features,\n    $state,\n    _,\n    $q,\n    LoadingProgress,\n    UserSettingsEndpoint,\n    Notify\n) {\n    $scope.saveKey = saveKey;\n    $scope.changeKey = changeKey;\n    $scope.changeId = changeId;\n\n    $scope.showCancel = false;\n    $scope.hxlMaintainerSet = false;\n    $scope.hxlApiKeySet = false;\n    $scope.cancelMaintainerSet = cancelMaintainerSet;\n    $scope.cancelApiKeySet = cancelApiKeySet;\n    $scope.isLoading = LoadingProgress.getLoadingState;\n\n    $scope.tempApiKey = '';\n    $scope.tempMaintainerId = '';\n\n    $scope.hdxSettings = {\n        'hdx_api_key': {\n            id: null,\n            user_id: $rootScope.currentUser.userId,\n            config_key: 'hdx_api_key',\n            config_value: ''\n        },\n        'hdx_maintainer_id': {\n            id: null,\n            user_id: $rootScope.currentUser.userId,\n            config_key: 'hdx_maintainer_id',\n            config_value: ''\n        }\n    };\n\n    // Change layout class\n    $rootScope.setLayout('layout-c');\n\n    // Checking feature-flag for user-settings and hxl\n    Features.loadFeatures().then(function () {\n        if (!Features.isFeatureEnabled('user-settings') || !Features.isFeatureEnabled('hxl')) {\n            $state.go('posts.map.all');\n        }\n    });\n\n    UserSettingsEndpoint.getFresh({id: $rootScope.currentUser.userId}).$promise.then((settings) => {\n        _.each(settings.results, (setting) => {\n            setting.user_id = setting.user.id;\n            updateSettings(setting);\n        });\n    });\n\n    function updateSettings(setting) {\n        if (setting.config_key === 'hdx_api_key') {\n            setting.config_value = '*** *** *** *** *** *** *** ' + setting.config_value.slice(setting.config_value.length - 4);\n            $scope.hdxSettings.hdx_api_key = setting;\n            $scope.hxlApiKeySet = true;\n            $scope.showCancel = true;\n        }\n        if (setting.config_key === 'hdx_maintainer_id') {\n            $scope.hxlMaintainerSet = true;\n            $scope.tempMaintainerId = setting.config_value;\n            $scope.hdxSettings.hdx_maintainer_id = setting;\n            $scope.showCancel = true;\n        }\n    }\n\n    function changeKey() {\n        $scope.hxlApiKeySet = false;\n    }\n\n    function changeId() {\n        $scope.hxlMaintainerSet = false;\n    }\n\n    function cancelMaintainerSet() {\n        $scope.tempMaintainerId = $scope.hdxSettings.hdx_maintainer_id.config_value;\n        $scope.hxlMaintainerSet = true;\n    }\n\n    function cancelApiKeySet() {\n        $scope.tempApiKey = '';\n        $scope.hxlApiKeySet = true;\n    }\n\n    function goToHdxView() {\n        $state.go('settings.hdx');\n    }\n\n    function saveKey() {\n        var calls = [];\n        var tmpSetting;\n        if ($scope.api.api_key.$dirty) {\n            tmpSetting = $scope.hdxSettings.hdx_api_key;\n            tmpSetting.config_value = $scope.tempApiKey;\n            calls.push(\n                UserSettingsEndpoint.saveCache(tmpSetting).$promise\n            );\n        }\n\n        if ($scope.api.hdx_maintainer_id.$dirty) {\n            tmpSetting = $scope.hdxSettings.hdx_maintainer_id;\n            tmpSetting.config_value = $scope.tempMaintainerId;\n            calls.push(\n                UserSettingsEndpoint.saveCache(tmpSetting).$promise\n            );\n        }\n\n        $q.all(calls).then((response) => {\n            _.each(response, (setting) => {\n                setting.user_id = setting.user.id;\n                updateSettings(setting);\n            });\n            Notify.notifyAction('settings.user_settings.api_key_saved', null, false, 'thumb-up', 'circle-icon confirmation', {callback: goToHdxView, text: 'settings.user_settings.start_tagging', callbackArg: null, actionClass: 'button button-alpha'});\n        }, handleResponseErrors);\n    }\n\n    function handleResponseErrors(errorResponse) {\n        Notify.apiErrors(errorResponse);\n    }\n}];\n","module.exports = \"<div class=\\\"mode-context init\\\" dropdown>\\n\\n    <header class=\\\"mode-context-header\\\">\\n        <ol class=\\\"breadcrumbs\\\">\\n            <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n            <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n        </ol>\\n        <h1 class=\\\"mode-context-title\\\" translate>settings.settings_list.user_settings</h1>\\n    </header>\\n\\n    <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n        <svg class=\\\"iconic\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n        </svg>\\n        <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n    </span>\\n</div>\\n<main role=\\\"main\\\">\\n    <div class=\\\"progress-bar\\\" ng-show=\\\"isLoading()\\\">\\n        <span>\\n        ..\\n        </span>\\n    </div>\\n    <div class=\\\"main-col\\\">\\n        <div class=\\\"form-sheet\\\">\\n            <div class=\\\"form-sheet-summary\\\">\\n                <h2 class=\\\"form-sheet-title\\\" translate=\\\"settings.settings_list.user_settings\\\">\\n                Configure HDX API\\n                </h2>\\n                <p translate=\\\"settings.user_settings.user_settings_desc_1\\\">Here you can add your unique key for your Humanitarian Data Exchange (HDX) account.</p>\\n                <p translate=\\\"settings.user_settings.user_settings_desc_2\\\">Once you set it up, this will enable you to upload data directly to a Humanitarian Data Exchange (HDX) account.</p>\\n                <p translate=\\\"settings.user_settings.user_settings_desc_3\\\">You can find your API key on your Humanitarian Data Exchange (HDX) profile once you're logged in.</p>\\n\\n                <a href=\\\"https://data.humdata.org/faq\\\" class=\\\"link-blue\\\" target=\\\"_blank\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                    </svg>\\n                    {{'settings.user_settings.view_guide' |translate}}\\n                </a>\\n            </div>\\n\\n            <img class=\\\"field-logo\\\" src=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/hdx-logo.png\") + \"\\\" />\\n            <form name=\\\"api\\\">\\n                <div\\n                    class=\\\"form-field init required\\\"\\n                    ng-class=\\\"{'error': api.hdx_maintainer_id.$invalid && api.hdx_maintainer_id.$dirty,'success': !api.hdx_maintainer_id.$invalid && api.hdx_maintainer_id.$dirty}\\\"\\n                    ng-show=\\\"!hxlMaintainerSet\\\"\\n                >\\n                    <label class=\\\"required \\\" for=\\\"hdx_maintainer_id\\\" translate=\\\"settings.user_settings.hdx_maintainer_id\\\">\\n                        HDX User Id\\n                    </label>\\n                    <p translate=\\\"settings.user_settings.profile_page\\\"> Found on your Humanitarian Data Exchange (HDX) profile page</p>\\n                    <input id=\\\"hdx_maintainer_id\\\" name=\\\"hdx_maintainer_id\\\" ng-required=\\\"true\\\" type=\\\"text\\\" ng-model=\\\"tempMaintainerId\\\" required=\\\"required\\\"/>\\n                </div>\\n\\n                <div class=\\\"form-field alert error\\\" ng-show=\\\"!hxlMaintainerSet && api.hdx_maintainer_id.$invalid && api.hdx_maintainer_id.$dirty\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                    </svg>\\n                    <p translate=\\\"settings.user_settings.valid_user\\\">A user id is required</p>\\n                </div>\\n\\n                <div class=\\\"form-field\\\" ng-show=\\\"!hxlMaintainerSet\\\">\\n                    <button ng-show=\\\"showCancel\\\" type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancelMaintainerSet()\\\" translate=\\\"app.cancel\\\">Cancel</button>\\n                    <button class=\\\"button button-alpha\\\" translate=\\\"app.save\\\" ng-click=\\\"saveKey()\\\">Save</button>\\n                </div>\\n\\n\\n                <div class=\\\"form-field init required key\\\" ng-show=\\\"hxlMaintainerSet\\\">\\n                    <label class=\\\"required \\\" for=\\\"hdx_maintainer_id_text\\\" translate=\\\"settings.user_settings.hdx_maintainer_id\\\">\\n                        HDX Maintainer Id\\n                    </label>\\n                    <span id=\\\"hdx_maintainer_id_text\\\">{{hdxSettings['hdx_maintainer_id'].config_value}}\\n                        <a class=\\\"link-blue\\\" ng-click=\\\"changeId()\\\" >Change your User ID</a>\\n                    </span>\\n                </div>\\n\\n                <div\\n                    class=\\\"form-field init required\\\"\\n                    ng-class=\\\"{'error': api.api_key.$invalid && api.api_key.$dirty,'success': !api.api_key.$invalid && api.api_key.$dirty}\\\"\\n                    ng-show=\\\"!hxlApiKeySet\\\"\\n                >\\n                    <label class=\\\"required \\\" for=\\\"api_key\\\" translate=\\\"settings.user_settings.api_key\\\">\\n                        Api key\\n                    </label>\\n                    <p translate=\\\"settings.user_settings.profile_page\\\"> Found on your Humanitarian Data Exchange (HDX) profile page</p>\\n                    <input id=\\\"api_key\\\" name=\\\"api_key\\\" ng-required=\\\"true\\\" type=\\\"text\\\" ng-model=\\\"tempApiKey\\\" required=\\\"required\\\"/>\\n                </div>\\n\\n                <div class=\\\"form-field alert error\\\" ng-show=\\\"!hxlApiKeySet && api.api_key.$invalid && api.api_key.$dirty && !hxlApiKeySet\\\">\\n                    <svg class=\\\"iconic\\\">\\n                        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                    </svg>\\n                    <p translate=\\\"settings.user_settings.valid_key\\\">A valid key is required</p>\\n                </div>\\n\\n                <div class=\\\"form-field\\\" ng-show=\\\"!hxlApiKeySet\\\">\\n                    <button ng-show=\\\"showCancel\\\" type=\\\"button\\\" class=\\\"button-link\\\" ng-click=\\\"cancelApiKeySet()\\\" translate=\\\"app.cancel\\\">Cancel</button>\\n                    <button class=\\\"button button-alpha\\\" translate=\\\"app.save\\\" ng-click=\\\"saveKey()\\\">Save</button>\\n                </div>\\n\\n                <div class=\\\"form-field init required key\\\" ng-show=\\\"hxlApiKeySet\\\">\\n                    <label class=\\\"required\\\" for=\\\"api_key_text\\\" translate=\\\"settings.user_settings.api_key\\\">\\n                        Api key\\n                    </label>\\n                    <span id=\\\"api_key_text\\\">{{hdxSettings['hdx_api_key'].config_value}}\\n                        <a class=\\\"link-blue\\\" ng-click=\\\"changeKey()\\\" >Change your API key</a>\\n                    </span>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</main>\\n\";","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$location',\n    'DataExport',\n    'Notify',\n    'FormEndpoint',\n    'FormAttributeEndpoint',\n    '_',\n    'LoadingProgress',\n    'Features',\n    'UserSettingsEndpoint',\nfunction (\n    $scope,\n    $rootScope,\n    $location,\n    DataExport,\n    Notify,\n    FormEndpoint,\n    FormAttributeEndpoint,\n    _,\n    LoadingProgress,\n    Features,\n    UserSettingsEndpoint\n) {\n    $scope.exportAll = exportAll;\n    $scope.showFields = false;\n    $scope.showProgress = false;\n    $scope.selectFields = selectFields;\n    $scope.selectedFields = [];\n    $scope.exportSelected = exportSelected;\n    $scope.selectAll = selectAll;\n    $scope.displayedForms = [];\n    $scope.getForms = getForms;\n    $scope.isLoading = LoadingProgress.getLoadingState;\n    $scope.attachAttributes = attachAttributes;\n    $scope.loadExportJobs = loadExportJobs;\n    $scope.switchTab = switchTab;\n    $scope.exportJobs = [];\n    $scope.dataExportTitle =  'data_export.title';\n    $scope.loadingFeature = true;\n\n    $rootScope.$on('event:export_job:stopped', function () {\n        $scope.showProgress = false;\n    });\n    $rootScope.$on('event:export_job:started', function () {\n        $scope.showProgress = true;\n    });\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasPermission('Bulk Data Import and Export') === false && $rootScope.hasPermission('Bulk Data Import') === false) {\n        return $location.path('/');\n    }\n\n    // Check if hxl-feature is enabled\n    Features.loadFeatures().then(function () {\n        $scope.hxlEnabled = Features.isFeatureEnabled('hxl');\n        if ($scope.hxlEnabled) {\n            $scope.dataExportTitle = 'data_export.title_hxl';\n            $scope.loadingFeature = false;\n        }\n    });\n\n    // Check if hxl-api-key is added\n    UserSettingsEndpoint.getFresh({id: $rootScope.currentUser.userId}).$promise.then((settings) => {\n        $scope.hxlApiKey = false;\n        _.each(settings.results, (setting) => {\n            if (setting.config_key === 'hdx_api_key') {\n                $scope.hxlApiKey = true;\n                $scope.loadingFeature = false;\n            }\n        });\n    });\n\n    // Change layout class\n    $rootScope.setLayout('layout-c');\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n\n\n    activate();\n\n    function activate() {\n        $scope.loadExportJobs();\n        $scope.tab_history = {};\n\n        // Set initial menu tab\n        $scope.switchTab('export', 'main');\n    }\n\n    function getForms() {\n        FormEndpoint.queryFresh().$promise.then(function (response) {\n            $scope.forms = response;\n            $scope.attachAttributes();\n        });\n    }\n\n    function switchTab(section, tab) {\n\n        // First unset last active tab\n        var old_tab = $scope.tab_history[section];\n        if (old_tab) {\n            var old_tab_li = old_tab + '-li';\n            angular.element(document.getElementById(old_tab)).removeClass('active');\n            angular.element(document.getElementById(old_tab_li)).removeClass('active');\n        }\n        // Set new active tab\n        tab = tab + '-' + section;\n        $scope.tab_history[section] = tab;\n        var tab_li = tab + '-li';\n        angular.element(document.getElementById(tab)).addClass('active');\n        angular.element(document.getElementById(tab_li)).addClass('active');\n    }\n\n\n    function attachAttributes() {\n        // requesting attributes and attaches them to the correct form\n        _.each($scope.forms, function (form) {\n            FormAttributeEndpoint.query({formId: form.id}).$promise.then(function (response) {\n                form.attributes = response;\n            });\n        });\n    }\n\n    function selectFields() {\n        $scope.showFields = !$scope.showFields;\n    }\n\n    function selectAll(form) {\n        $scope.selectedFields[form.id] = !$scope.selectedFields[form.id] ? [] : $scope.selectedFields[form.id];\n        if ($scope.selectedFields[form.id].length === form.attributes.length) {\n            $scope.selectedFields[form.id] = [];\n        } else {\n            _.each(form.attributes, function (attribute) {\n                if (!_.contains($scope.selectedFields[form.id], attribute.key)) {\n                    $scope.selectedFields[form.id].push(attribute.key);\n                }\n            });\n        }\n    }\n\n    function exportAll() {\n        DataExport.startExport({send_to_hdx: false, include_hxl: false, send_to_browser: true});\n        $scope.showProgress = true;\n    }\n\n    function exportSelected() {\n        var fields = _.chain($scope.selectedFields)\n            .flatten() // concatinating attributes into one array\n            .compact() // removing nulls\n            .value(); // output\n\n        if (fields.length === 0) {\n            // displaying notification if no fields are selected\n            var message =  '<p translate=\"data_export.no_fields\"></p>';\n            Notify.notifyAction(message, null, false, 'warning', 'error');\n        } else {\n            DataExport.startExport({fields, send_to_hdx: false, include_hxl: false, send_to_browser: true});\n            $scope.showFields = false;\n            $scope.showProgress = true;\n        }\n    }\n\n    function loadExportJobs() {\n        DataExport.loadExportJobs().then(function (response) {\n            DataExport.setExportJobs(DataExport.processExportJobs(response));\n            $scope.exportJobs = DataExport.getExportJobs();\n        });\n    }\n\n    $scope.$on('exportJobs:updated', (event, data, newData) => {\n        $scope.exportJobs = DataExport.getExportJobs();\n    });\n\n\n    // start fetching forms to display\n    getForms();\n}];\n","module.exports = \"<div>\\n   <!-- TODO This should realy go into its own directive -->\\n    <div class=\\\"mode-context init\\\" dropdown>\\n\\n       <header class=\\\"mode-context-header\\\">\\n           <ol class=\\\"breadcrumbs\\\">\\n               <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n               <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n           </ol>\\n           <h1 class=\\\"mode-context-title\\\" translate>data_export.export</h1>\\n       </header>\\n\\n       <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n           <svg class=\\\"iconic\\\">\\n               <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n           </svg>\\n           <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n       </span>\\n   </div>\\n\\n    <main role=\\\"main\\\">\\n        <div class=\\\"progress-bar\\\" ng-show=\\\"isLoading() && showFields\\\">\\n            <span>\\n                ..\\n            </span>\\n        </div>\\n\\n        <div class=\\\"main-col\\\">\\n            <div class=\\\"form-sheet\\\" ng-show=\\\"!showFields\\\">\\n                <div class=\\\"form-sheet-summary\\\">\\n                    <h2 class=\\\"form-sheet-title\\\" translate>\\n                    {{dataExportTitle}}\\n                    </h2>\\n                    <p translate ng-show=\\\"!showProgress && !hxlEnabled\\\">data_export.description</p>\\n                    <!-- TODO: Revisit and condense below structure of translations when migrating to react -->\\n                    <p ng-show=\\\"!showProgress && hxlEnabled\\\">\\n                        {{'data_export.description_hxl' | translate}}\\n                        <a href=\\\"http://hxlstandard.org/tagging/\\\" class=\\\"link-blue\\\" target=\\\"_blank\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                            </svg>\\n                            {{'data_export.hxl_tags' | translate}}\\n                        </a>,\\n                        <a href=\\\"http://hxlstandard.org/dictionary/\\\" class=\\\"link-blue\\\" target=\\\"_blank\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                            </svg>\\n                            {{'data_export.hxl_attributes' | translate}}\\n                        </a>\\n                        {{'data_export.and_choose' | translate}}\\n                        <a href=\\\"https://data.humdata.org/\\\" class=\\\"link-blue\\\" target=\\\"_blank\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                            </svg>\\n                            {{'data_export.HDX' | translate}}\\n                        </a>\\n                        {{'data_export.account' | translate}}\\n                    </p>\\n                    <p translate ng-show=\\\"showProgress\\\">data_export.export_progress</p>\\n                </div>\\n\\n                <nav class=\\\"tabs-menu init\\\" data-tabs=\\\"survey-details\\\">\\n                        <ul>\\n                            <li id=\\\"main-export-li\\\">\\n                                <a ng-click=\\\"switchTab('export', 'main')\\\" translate>\\n                                data_export.export\\n                                </a>\\n                            </li>\\n                            <li id=\\\"history-export-li\\\">\\n                                <a ng-click=\\\"switchTab('export', 'history')\\\" translate>\\n                                data_export.export_history\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </nav>\\n\\n                <div id=\\\"main-export\\\" class=\\\"survey-details tabs-target\\\" >\\n                    <div class=\\\"form-field\\\" ng-hide=\\\"hxlApiKey || !hxlEnabled || loadingFeature\\\">\\n                        <div class=\\\"alert\\\" >\\n                            <p>{{'data_export.hxl_apikey_alert_1' | translate}}</p>\\n                            <p>{{'data_export.hxl_apikey_alert_2' | translate}}\\n                            <a ui-sref=\\\"settings.userSettings\\\" class=\\\"link-blue\\\">\\n                                {{'data_export.hxl_configure' | translate}}\\n                            </a>\\n                                {{'data_export.hxl_apikey_alert_3' | translate}}\\n                            </p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-field\\\">\\n                        <button class=\\\"button-alpha\\\" translate ng-click=\\\"exportAll()\\\" ng-disabled=\\\"showProgress\\\">data_export.all</button>\\n                        <button class=\\\"button\\\"  ng-click=\\\"selectFields()\\\" translate ng-disabled=\\\"showProgress\\\">data_export.select_fields</button>\\n                        <a ui-sref=\\\"settings.hdx\\\" class=\\\"button\\\" ng-show=\\\"hxlEnabled\\\" ng-disabled=\\\"showProgress || !hxlApiKey\\\" translate>data_export.tags_attributes</a>\\n                    </div>\\n                </div>\\n                <div id=\\\"history-export\\\" class=\\\"survey-details tabs-target\\\">\\n                    <div class=\\\"listing\\\">\\n                        <div class=\\\"listing-item\\\" ng-repeat=\\\"job in exportJobs\\\">\\n                            <div class=\\\"listing-item-primary\\\">\\n                                <h2 class=\\\"listing-item-title\\\"><a href=\\\"{{job.url}}\\\" target=\\\"_blank\\\" translate=\\\"data_export.job\\\" translate-values=\\\"{jobId: job.id}\\\">Job {{job.id}}</a></h2>\\n                                <p class=\\\"listing-item-secondary\\\" translate=\\\"data_export.{{job.status}}\\\">Status: {{job.status}}</p>\\n                                <p class=\\\"listing-item-secondary\\\" translate=\\\"data_export.created\\\" translate-values=\\\"{created: job.created}\\\">Created: {{job.created}}</p>\\n                                <p class=\\\"listing-item-secondary\\\" translate=\\\"data_export.expires\\\" translate-values=\\\"{expires: job.url_expiration}\\\">Expires: {{job.url_expiration}}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-sheet\\\" ng-show=\\\"showFields && !showProgress\\\">\\n                <div class=\\\"form-sheet-summary\\\">\\n                    <h2 class=\\\"form-sheet-title\\\" translate>\\n                    data_export.select_fields_title\\n                    </h2>\\n                    <p translate>data_export.select_fields_desc</p>\\n                </div>\\n                <div class=\\\"form-field\\\" ng-repeat=\\\"form in forms\\\">\\n                    <label><bdi>{{form.name}}</bdi></label>\\n                    <div class=\\\"form-field checkbox\\\" ng-show=\\\"form.attributes\\\">\\n                        <label>\\n                            <input\\n                                type=\\\"checkbox\\\"\\n                                ng-checked=\\\"selectedFields[form.id].length === form.attributes.length\\\"\\n                                ng-click=\\\"selectAll(form)\\\"\\n                            >\\n                            <em><span translate=\\\"category.select_all\\\"></span></em>\\n                        </label>\\n                    </div>\\n                    <div class=\\\"form-field checkbox\\\" ng-repeat=\\\"attribute in form.attributes\\\">\\n                    <label>\\n                        <input\\n                            type=\\\"checkbox\\\"\\n                            checklist-model=\\\"selectedFields[form.id]\\\"\\n                            checklist-value=\\\"attribute.key\\\"\\n                            value=\\\"attribute.key\\\"\\n                        >\\n                        <bdi>{{attribute.label}}</bdi>\\n                    </label>\\n                    </div>\\n            </div>\\n            <div class=\\\"form-field\\\">\\n                <button class=\\\"button-alpha\\\" ng-click=\\\"exportSelected()\\\" translate>data_export.export_selected\\n                </button>\\n                <button class=\\\"button\\\" ng-click=\\\"selectFields()\\\" translate>data_export.cancel</button>\\n            </div>\\n        </div>\\n    </div>\\n    </main>\\n</div>\\n\";","module.exports = [\n    '$scope',\n    '$rootScope',\n    'Features',\n    '$state',\n    'HxlExport',\n    '_',\n    'LoadingProgress',\n    '$anchorScroll',\n    'Notify',\n    'DataExport',\nfunction (\n    $scope,\n    $rootScope,\n    Features,\n    $state,\n    HxlExport,\n    _,\n    LoadingProgress,\n    $anchorScroll,\n    Notify,\n    DataExport\n) {\n    $scope.selectHxlAttribute = selectHxlAttribute;\n    $scope.addAnother = addAnother;\n    $scope.range = range;\n    $scope.selectTag = selectTag;\n    $scope.exportData = exportData;\n    $scope.selectAll = selectAll;\n    $scope.isLoading = LoadingProgress.getLoadingState;\n    $scope.getSelectedFields = getSelectedFields;\n    $scope.hxlAttributeSelected = hxlAttributeSelected;\n    $scope.showProgress = false;\n\n    // Change layout class\n    $rootScope.setLayout('layout-c');\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n    // Check if hxl-feature is enabled\n    Features.loadFeatures().then(function () {\n        $scope.hxlEnabled = Features.isFeatureEnabled('hxl');\n        // Redirect to home if not enabled\n        if (!$scope.hxlEnabled) {\n            $state.go('posts.map.all');\n        }\n    });\n\n    activate();\n\n    function activate() {\n        HxlExport.getFormsWithTags().then((formsWithTags)=> {\n            $scope.forms = formsWithTags;\n        });\n    }\n\n    function range(attribute) {\n        if (!attribute.nbAttributes) {\n            attribute.nbAttributes = 1;\n        }\n        return _.range(attribute.nbAttributes);\n    }\n\n    function addAnother(attribute) {\n        attribute.nbAttributes++;\n    }\n\n    function hxlAttributeSelected(hxlAttribute, formAttribute, index) {\n        let disabled = false;\n        // hack to not disable the value in the current dropdown\n        let selectedHxlAttributes = angular.copy(formAttribute.selectedHxlAttributes);\n        delete selectedHxlAttributes[index];\n        if (_.findWhere(selectedHxlAttributes, {attribute: hxlAttribute.attribute})) {\n            disabled = true;\n        }\n        return disabled;\n    }\n\n    function selectAll(form) {\n        if (form.selected) {\n            form.attributes = _.map(form.attributes, (attribute) => {\n                attribute.selected = [attribute.id];\n                return attribute;\n\n            });\n        } else {\n            form.attributes = _.map(form.attributes, (attribute) => {\n                attribute.selected = [];\n                return attribute;\n            });\n        }\n    }\n\n    function getSelectedFields() {\n        let selectedFields = [];\n        _.each($scope.forms, (form) => {\n            _.each(form.attributes, (attribute) => {\n                if (attribute.selected && attribute.selected.length > 0) {\n                    selectedFields.push(attribute.key);\n                }\n            });\n        });\n\n        if ($scope.fieldError && selectedFields.length > 0) {\n            $scope.fieldError = false;\n        }\n        return selectedFields;\n    }\n\n    function selectTag(attribute) {\n        attribute.selected = [attribute.id];\n        attribute.hxl_label = createHxlLabel(attribute);\n        if (!attribute.selectedTag || !attribute.selectedTag.tag_name) {\n            addAnother(attribute);\n        }\n\n        attribute.selectedHxlAttributes = [];\n    }\n\n    function selectHxlAttribute(attribute) {\n        if (!needsMatchedAttribute(attribute)) {\n            attribute.hxl_label = createHxlLabel(attribute);\n        } else {\n            attribute = addGeoMatchedAttribute(attribute);\n        }\n        return attribute;\n    }\n    function addGeoMatchedAttribute(attribute) {\n        const hxl_attribute = attribute.selectedHxlAttributes[attribute.selectedHxlAttributes.length - 1];\n        // check if we have lat or lon and assign the correct opposite attribute for it\n        const opposite_attribute_str = hxl_attribute.attribute === 'lat' ? 'lon' : 'lat';\n        // If the label is not just #geo, it means the action is removing a tag instead of adding one,\n        // and we need to clear the label instead of adding to it\n        if (attribute.hxl_label[0] !== '#geo') {\n            attribute.hxl_label = ['#geo'];\n            attribute.selectedHxlAttributes = [];\n            attribute.nbAttributes--;\n        } else {\n            addAnother(attribute);\n            attribute.selectedHxlAttributes.push({attribute: opposite_attribute_str });\n            attribute.hxl_label = [\n                '#geo+lat',\n                '#geo+lon'\n            ];\n        }\n        return attribute;\n    }\n\n    /**\n     * Checks if we need a matched lat/lon attribute.\n     * Only applies to #geo tags with a lat/lon attribute selected\n     * @param attribute\n     * @param ignoreMatch\n     * @param needsMatchLatLon\n     * @returns {*}\n     */\n    function needsMatchedAttribute(attribute) {\n        if (attribute.selectedTag.tag_name !== 'geo') {\n            return false;\n        }\n        let needs_match = _.filter(attribute.selectedHxlAttributes, (selected) => {\n            return selected.attribute === 'lon' || selected.attribute === 'lat';\n        }).length;\n        return needs_match === 1;\n    }\n\n    function createHxlLabel(attribute) {\n        if (!attribute.selectedTag) {\n            return [];\n        }\n        let label = '#' + attribute.selectedTag.tag_name;\n        _.each(attribute.selectedHxlAttributes, (hxl_attribute) => {\n            label = label + '+' + hxl_attribute.attribute;\n        });\n        return [label];\n    }\n\n    function formatIds() {\n        let hxlData = [];\n        _.each($scope.forms, (form) => {\n            _.each(form.attributes, (formAttribute) => {\n                if (formAttribute.selected && formAttribute.selected.length > 0) {\n                    // checking if there is a tag selected. If not, there will be no hxl-attributes selected either\n                    let obj = formAttribute.selectedTag ? {form_attribute_id: formAttribute.id, hxl_tag_id: formAttribute.selectedTag.id} : {form_attribute_id: formAttribute.id};\n                    if (formAttribute.selectedHxlAttributes && !_.isEmpty(formAttribute.selectedHxlAttributes)) {\n                        _.each(formAttribute.selectedHxlAttributes, (hxlAttribute) => {\n                            let hxlAttr = getHxlAttributeByTagIdAndName(formAttribute, hxlAttribute.attribute);\n                            if (hxlAttr) {\n                                let objWithAttr = angular.copy(obj);\n                                objWithAttr.hxl_attribute_id = parseInt(hxlAttr.id);\n                                hxlData.push(objWithAttr);\n                            }\n                        });\n                    } else {\n                        hxlData.push(obj);\n                    }\n                }\n            });\n        });\n        return hxlData;\n    }\n\n    function getHxlAttributeByTagIdAndName(formAttribute, hxlAttributeName) {\n        const tag = _.findWhere(formAttribute.tags, {id: formAttribute.selectedTag.id});\n        return _.findWhere(tag.hxl_attributes, {attribute: hxlAttributeName});\n    }\n\n    function exportData(sendToHDX) {\n        const formattedIds = formatIds();\n        if (formattedIds.length === 0) {\n            // scrolling to top and display the error-message\n            $scope.fieldError = true;\n            $anchorScroll();\n        } else {\n            $scope.fieldError = false;\n            let title, description, button, cancel;\n            let data = {\n                'fields': $scope.getSelectedFields(),\n                'filters':\n                {\n                    'status' : ['published','draft'],\n                    'has_location' : 'all',\n                    'orderby' : 'created',\n                    'order' : 'desc',\n                    'order_unlocked_on_top' : 'true',\n                    'source' : ['sms','twitter','web','email']\n                },\n                'send_to_hdx': sendToHDX,\n                'include_hxl': true,\n                'send_to_browser': !sendToHDX,\n                'hxl_heading_row': formattedIds\n            };\n\n            if (sendToHDX) {\n                title = 'data_export.upload_title';\n                description = 'data_export.upload_desc';\n                button = 'data_export.upload_button';\n            } else {\n                title = 'data_export.hdx_csv_title';\n                description = 'data_export.hdx_csv_desc';\n                button = 'data_export.export_button';\n            }\n\n            cancel = 'data_export.go_back';\n\n            Notify.confirmModal(title, null, description, `{fields: ${getSelectedFields().length}}`, button, cancel).then(() => {\n                    if (sendToHDX) {\n                        $state.go('settings.hdxDetails', {exportJob: data });\n                    } else {\n                        DataExport.startExport(data, sendToHDX).then((id) => {\n                            $scope.showProgress = true;\n                        });\n                    }\n                });\n        }\n    }\n}];\n","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>nav.export</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n        <div class=\\\"progress-bar\\\" ng-show=\\\"isLoading()\\\">\\n            <span>\\n            ..\\n            </span>\\n        </div>\\n\\n        <div class=\\\"main-col\\\">\\n            <div class=\\\"form-sheet\\\" ng-show=\\\"showProgress\\\">\\n                <div class=\\\"form-sheet-summary\\\">\\n                    <h2 class=\\\"form-sheet-title\\\" translate>\\n                        data_export.title_hxl\\n                    </h2>\\n                    <p translate>data_export.export_progress</p>\\n                </div>\\n            </div>\\n            <div class=\\\"form-sheet\\\" ng-show=\\\"!showProgress\\\">\\n                <div class=\\\"form-sheet-summary\\\">\\n                <h2 class=\\\"form-sheet-title\\\">\\n                    {{'data_export.hxl_title' | translate}}\\n                </h2>\\n                <p>{{'data_export.hxl_desc' | translate}}</p>\\n\\n                <p>\\n                    {{'data_export.hxl_instructions_1' | translate}}\\n                    <a href=\\\"https://data.humdata.org/\\\" target=\\\"_blank\\\" class=\\\"link-blue\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                        </svg>\\n                        {{'data_export.hxl_instructions_2' | translate}}\\n                    </a>\\n                {{'data_export.hxl_instructions_3' | translate}}\\n                <a ui-sref=\\\"settings.userSettings\\\" class=\\\"link-blue\\\">\\n                    {{'data_export.hxl_instructions_4' | translate}}\\n                </a>\\n                {{'data_export.hxl_instructions_5' | translate}}\\n                </p>\\n\\n                <p>{{'data_export.hxl_instructions_6' | translate}}\\n                    <a href=\\\"https://tools.humdata.org/examples/hxl/\\\" target=\\\"_blank\\\" class=\\\"link-blue\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                        </svg>\\n                    {{'data_export.hxl_instructions_7' | translate}}\\n                    </a>\\n                    {{'data_export.hxl_instructions_8' |translate}}\\n                    <a href=\\\"http://hxlstandard.org/standard/1_1beta/postcards/\\\" target=\\\"_blank\\\" class=\\\"link-blue\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                        </svg>\\n                        {{'data_export.hxl_instructions_9' | translate}}\\n                    </a>\\n                    .\\n                </p>\\n            </div>\\n            <div class=\\\"form-field alert error\\\" id=\\\"error\\\" ng-show=\\\"fieldError\\\">\\n                <svg class=\\\"iconic\\\">\\n                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#warning\\\"></use>\\n                </svg>\\n                {{'data_export.no_fields_selected' | translate}}\\n            </div>\\n                <fieldset ng-repeat=\\\"form in forms\\\" ng-hide=\\\"form.targeted_survey === true\\\">\\n                    <legend>\\n                        <bdi>{{form.name}}</bdi>\\n                    </legend>\\n                    <table>\\n                        <thead>\\n                            <tr>\\n                                <th></th>\\n                                <th translate=\\\"survey.survey_field\\\">Survey field</th>\\n                                <th translate=\\\"data_export.HXL_tags\\\">HXL tags</th>\\n                                <th translate=\\\"data_export.HXL_attributes\\\">HXL attributes</th>\\n                                <th translate=\\\"data_export.tag_preview\\\">Tag preview</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr>\\n                                <td class=\\\"form-field\\\">\\n                                    <input type=\\\"checkbox\\\" ng-model=\\\"form.selected\\\" ng-value=\\\"1\\\" ng-change=\\\"selectAll(form)\\\">\\n                                </td>\\n                                <td>\\n                                    <em translate=\\\"nav.select_all\\\">Select all<em>\\n                                </td>\\n                                <td></td>\\n                                <td></td>\\n                                <td></td>\\n                            </tr>\\n                            <tr ng-repeat=\\\"formAttribute in form.attributes\\\">\\n                                <td class=\\\"form-field\\\">\\n                                    <input\\n                                        type=\\\"checkbox\\\"\\n                                        checklist-model=\\\"formAttribute.selected\\\"\\n                                        checklist-value=\\\"formAttribute.id\\\"\\n                                        ng-checked=\\\"_.isEmpty(attribute.selected)\\\"\\n                                    >\\n                                </td>\\n                                <td>\\n                                    <p ng-click=\\\"formAttribute.selected = !formAttribute.selected\\\"><bdi>{{formAttribute.label}}</bdi></p>\\n                                </td>\\n                                <td>\\n                                    <div class=\\\"custom-select\\\">\\n                                        <select\\n                                            ng-model=\\\"formAttribute.selectedTag\\\"\\n                                            ng-options=\\\"tag as tag.tag_name for tag in formAttribute.tags track by tag.id\\\"\\n\\n                                            ng-change=\\\"selectTag(formAttribute)\\\"\\n                                        >\\n                                            <option value=''>Leave empty</option>\\n                                        </select>\\n                                    </div>\\n                                </td>\\n                                <td class=\\\"form-field\\\">\\n                                    <div class=\\\"custom-select\\\" ng-repeat=\\\"index in range(formAttribute)\\\">\\n                                        <select\\n                                            ng-disabled=\\\"!formAttribute.selectedTag && !formAttribute.selected\\\"\\n                                            ng-model=\\\"formAttribute.selectedHxlAttributes[index].attribute\\\"\\n                                            ng-change=\\\"selectHxlAttribute(formAttribute)\\\"\\n                                        >\\n                                            <option value=''>Leave empty</option>\\n                                            <option\\n                                                ng-value=\\\"hxlAttribute.attribute\\\"\\n                                                ng-repeat=\\\"hxlAttribute in formAttribute.selectedTag.hxl_attributes\\\"\\n                                                ng-disabled=\\\"hxlAttributeSelected(hxlAttribute, formAttribute, index)\\\"\\n                                            >\\n                                                 {{hxlAttribute.attribute}}\\n                                            </option>\\n\\n                                        </select>\\n                                    </div>\\n                                    <a ng-click=\\\"addAnother(formAttribute)\\\" class=\\\"link-blue\\\">Add another hxl attribute?</a>\\n                                </td>\\n                                <td>\\n                                    <span ng-repeat=\\\"hxl_label in formAttribute.hxl_label\\\"><em>{{hxl_label}} </em></span>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </fieldset>\\n                <div class=\\\"form-field\\\"  ng-hide=\\\"isLoading()\\\">\\n                    <p>{{getSelectedFields().length}} fields selected</p>\\n                </div>\\n                <div class=\\\"form-field button-group\\\">\\n                    <button class=\\\"button-alpha\\\" ng-click=\\\"exportData(false)\\\">Export to CSV</button>\\n                    <a ng-click=\\\"exportData(true)\\\" class=\\\"button button-alpha\\\">Upload to a hdx account</a>\\n                    <a ui-sref=\\\"settings.dataExport\\\" class=\\\"button\\\">Cancel</a>\\n            </div>\\n            </div>\\n        </div>\\n    </main>\\n</div>\\n    \";","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$translate',\n    '$location',\n    '$q',\n    'FormEndpoint',\n    'FormStageEndpoint',\n    'Notify',\n    '_',\n    'Features',\nfunction (\n    $scope,\n    $rootScope,\n    $translate,\n    $location,\n    $q,\n    FormEndpoint,\n    FormStageEndpoint,\n    Notify,\n    _,\n    Features\n) {\n\n    // Change layout class\n    $rootScope.setLayout('layout-b');\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    $translate('nav.posts_and_entities').then(function (title) {\n        $scope.title = title;\n        $scope.$emit('setPageTitle', title);\n    });\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n    Features.loadFeatures()\n    .then(function () {\n        $scope.targetedSurveysEnabled = Features.isFeatureEnabled('targeted-surveys');\n    });\n\n    // Get all the forms for display\n    $scope.refreshForms = function () {\n        FormEndpoint.queryFresh().$promise.then(function (response) {\n            $scope.forms = response;\n        });\n    };\n\n    $scope.deleteSurvey = function (survey) {\n        Notify.confirmDelete('notify.form.delete_form_confirm', 'notify.form.delete_form_confirm_desc').then(function () {\n            // If we haven't saved the survey\n            // just go back to the surveys views\n            if (!survey.id) {\n                $location.url('/settings/surveys');\n                return;\n            }\n\n            FormEndpoint.delete({\n                id: survey.id\n            }).$promise.then(function () {\n                Notify.notify('notify.form.destroy_form_success', { name: survey.name });\n                $scope.refreshForms();\n            }, $scope.handleResponseErrors);\n        });\n    };\n\n    $scope.handleResponseErrors = function (errorResponse) {\n        Notify.apiErrors(errorResponse);\n    };\n\n    $scope.refreshForms();\n}];\n","module.exports = \"<div ui-view>\\n    <!-- mode-context needs to be in each template -->\\n    <layout-class layout=\\\"a\\\"></layout-class>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>app.surveys</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <!-- toolbar -->\\n        <div class=\\\"toolbar\\\">\\n        </div>\\n        <!-- end toolbar -->\\n\\n        <div class=\\\"main-col\\\">\\n            <div class=\\\"listing card\\\">\\n              <article class=\\\"listing-item\\\">\\n                  <div class=\\\"listing-item-primary\\\">\\n                    <div class=\\\"button-group right\\\">\\n                        <a ui-sref=\\\"settings.surveys.create\\\"><button class=\\\"button-alpha\\\" translate=\\\"settings.new_survey\\\">New survey</button></a>\\n                    </div>\\n                    <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.surveys.create\\\" translate=\\\"settings.create\\\">Create a new survey</a></h2>\\n                    <p class=\\\"listing-item-secondary\\\" translate=\\\"settings.create_open_or_targeted\\\" ng-show=\\\"targetedSurveysEnabled\\\">Create an open or targeted survey to gather information about Ushahidi.</p>\\n                  </div>\\n              </article>\\n            </div>\\n            <div class=\\\"listing card\\\">\\n                <div class=\\\"listing-item\\\" ng-show=\\\"forms.length\\\" ng-repeat=\\\"form in forms\\\">\\n                    <span class=\\\"post-band\\\" ng-style=\\\"{backgroundColor: form.color}\\\"></span>\\n                    <div class=\\\"listing-item-secondary\\\" dropdown>\\n                      <button class=\\\"button-beta button-flat\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n                          <svg class=\\\"iconic\\\">\\n                              <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#ellipses\\\"></use>\\n                          </svg>\\n                          <span class=\\\"hidden\\\">More</span>\\n                      </button>\\n                      <ul class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                          <li>\\n                              <a href=\\\"/settings/surveys/duplicate/{{form.id}}\\\">\\n                                  <svg class=\\\"iconic\\\">\\n                                      <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/material/svg-sprite-content-symbol.svg\") + \"#ic_content_copy_24px\\\"></use>\\n                                  </svg>\\n                                  <span class=\\\"label\\\" translate=\\\"survey.duplicate_survey\\\">Duplicate</span>\\n                              </a>\\n                          </li>\\n                          <li>\\n                              <a ng-click=\\\"deleteSurvey(form)\\\">\\n                                  <svg class=\\\"iconic\\\">\\n                                      <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                                  </svg>\\n                                  <span class=\\\"label\\\" translate=\\\"survey.delete\\\">Delete</span>\\n                              </a>\\n                          </li>\\n                      </ul>\\n                    </div>\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <h2 class=\\\"listing-item-title\\\">\\n                            <a href=\\\"/settings/surveys/edit/{{form.id}}\\\" ng-show=\\\"!form.targeted_survey || !targetedSurveysEnabled\\\">{{form.name}}</a></h2>\\n                            <a ui-sref=\\\"settings.surveys.targeted.published({id: form.id})\\\" ng-show=\\\"form.targeted_survey && targetedSurveysEnabled\\\">{{form.name}}</a>\\n\\n                        <p class=\\\"listing-item-secondary\\\" markdown-to-html=\\\"form.description\\\"></p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n    </main>\\n\\n</div>\\n\";","module.exports = [\n    '$scope',\n    '$translate',\n    '$rootScope',\n    '$location',\n    '$q',\n    'TagEndpoint',\n    'Notify',\n    '_',\nfunction (\n    $scope,\n    $translate,\n    $rootScope,\n    $location,\n    $q,\n    TagEndpoint,\n    Notify,\n    _\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    $translate('tool.manage_tags').then(function (title) {\n        $scope.title = title;\n        $scope.$emit('setPageTitle', title);\n    });\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n\n    $scope.refreshView = function () {\n        TagEndpoint.queryFresh().$promise.then(function (tags) {\n            $scope.allCategories = tags;\n            $scope.categories = _.map(_.where(tags, { parent_id: null }), function (tag) {\n                if (tag && tag.children) {\n                    tag.children = _.map(tag.children, function (child) {\n                        return _.findWhere(tags, {id: parseInt(child.id)});\n                    });\n                }\n                return tag;\n            });\n        });\n        $scope.selectedCategories = [];\n    };\n    $scope.refreshView();\n\n    $scope.deleteCategory = function (tag) {\n        Notify.confirmDelete('notify.category.destroy_confirm', 'notify.category.destroy_confirm_desc').then(function () {\n            TagEndpoint.delete(tag).$promise.then(function () {\n                Notify.notify('notify.category.destroy_success', { name: tag.tag });\n                $scope.refreshView();\n            }, handleResponseErrors);\n        });\n    };\n\n    $scope.deleteCategories = function () {\n        Notify.confirmDelete('notify.category.bulk_destroy_confirm', 'notify.category.bulk_destroy_confirm_desc', { count: $scope.selectedCategories.length }).then(function () {\n            var calls = [];\n            angular.forEach($scope.selectedCategories, function (tagId) {\n                calls.push(TagEndpoint.delete({id: tagId }).$promise);\n            });\n            $q.all(calls).then(function () {\n                Notify.notify('notify.category.bulk_destroy_success', { count: $scope.selectedCategories.length });\n                $scope.refreshView();\n            }, handleResponseErrors);\n        });\n    };\n\n    $scope.isToggled = function (tag) {\n        return $scope.selectedCategories.indexOf(tag.id) > -1;\n    };\n\n    $scope.toggleCategory = function (tag) {\n        var idx = $scope.selectedCategories.indexOf(tag.id);\n        if (idx > -1) {\n            $scope.selectedCategories.splice(idx, 1);\n        } else {\n            $scope.selectedCategories.push(tag.id);\n        }\n    };\n\n    function handleResponseErrors(errorResponse) {\n        Notify.apiErrors(errorResponse);\n    }\n\n}];\n","module.exports = \"<div ui-view>\\n\\t<layout-class layout=\\\"b\\\"></layout-class>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a ui-sref=\\\"settings.list\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>app.categories</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n    <main role=\\\"main\\\">\\n\\n        <!-- toolbar -->\\n        <div class=\\\"toolbar\\\">\\n            <div class=\\\"fab\\\">\\n                <a ui-sref=\\\"settings.categories.create\\\" type=\\\"button\\\" class=\\\"button button-alpha button-fab\\\" ng-class=\\\"{'disabled': selectedCategories.length}\\\">\\n                    <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                    </svg>\\n                    <span class=\\\"hidden\\\" translate>category.add_category</span>\\n                </a>\\n            </div>\\n        </div>\\n        <!-- end toolbar -->\\n\\n        <div class=\\\"main-col\\\">\\n\\n            <div class=\\\"listing card\\\" ng-class=\\\"{'toolbar-active': selectedCategories.length}\\\">\\n                <div class=\\\"alert\\\" ng-hide=\\\"categories.length\\\">\\n                    <p ng-hide=\\\"categories.length\\\"><em translate>empty.category</em></p>\\n                </div>\\n\\n                <div id=\\\"category-{{category.id}}\\\" class=\\\"listing-item\\\" ng-repeat=\\\"category in categories\\\" ng-class=\\\"{ 'warning': isToggled(category) }\\\">\\n\\n                    <div class=\\\"listing-item-select\\\" ng-click=\\\"toggleCategory(category)\\\">\\n                        <input type=\\\"checkbox\\\" value=\\\"{{category.id}}\\\" ng-checked=\\\"isToggled(category)\\\"></input>\\n                    </div>\\n\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.categories.edit({id: category.id})\\\">{{category.tag}}</a></h2>\\n                    </div>\\n                    <div class=\\\"listing-item-secondary\\\">\\n                        <button class=\\\"button-beta button-flat\\\" ng-click=\\\"deleteCategory(category)\\\">\\n                            <svg class=\\\"iconic\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                            </svg>\\n                            <span class=\\\"hidden\\\">Delete</span>\\n                        </button>\\n                    </div>\\n\\n                    <div id=\\\"category-{{child.id}}\\\" class=\\\"listing-item\\\" ng-repeat=\\\"child in category.children\\\" ng-class=\\\"{ 'warning': isToggled(child) }\\\" ng-click=\\\"toggleCategory(child)\\\" ng-style=\\\"{'marginLeft': '50px', 'border': 'none'}\\\" ng-if=\\\"category.children\\\">\\n\\n                        <div class=\\\"listing-item-select\\\">\\n                            <input type=\\\"checkbox\\\" value=\\\"{{child.id}}\\\" ng-checked=\\\"isToggled(child)\\\">\\n                        </div>\\n\\n                        <div class=\\\"listing-item-primary\\\">\\n                            <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.categories.edit({id: child.id})\\\">{{child.tag}}</a></h2>\\n                        </div>\\n                        <div class=\\\"listing-item-secondary\\\">\\n                            <button class=\\\"button-beta button-flat\\\" ng-click=\\\"deleteCategory(child)\\\">\\n                                <svg class=\\\"iconic\\\">\\n                                    <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                                </svg>\\n                                <span class=\\\"hidden\\\">Delete</span>\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <listing-toolbar entities=\\\"allCategories\\\" selected-set=\\\"selectedCategories\\\">\\n                    <button type=\\\"button\\\" class=\\\"button-destructive\\\" ng-disabled=\\\"!selectedCategories.length\\\" ng-click=\\\"deleteCategories()\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                        </svg>\\n                        <span class=\\\"button-label hidden\\\">nav.delete</span>\\n                    </button>\\n                </listing-toolbar>\\n            </div>\\n            <!--\\n            @FIXME\\n            I don't know if we actually need pagination here. Since we didn't use to have a working pagination, I'm commenting out for the moment.\\n             Opening a ticket for this and if it turns out we don't need it I'll just delete this code.\\n            so I can send the PR for users which do need pagination\\n            <uib-pagination ng-model=\\\"currentPage\\\" items-per-page=\\\"itemsPerPage\\\" total-items=\\\"totalItems\\\" ng-change=\\\"pageChanged()\\\" max-size=\\\"5\\\" boundary-links=\\\"false\\\" rotate=\\\"false\\\"></uib-pagination>\\n            !-->\\n       </div>\\n   </main>\\n</div>\\n\";","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$translate',\n    '$q',\n    '$location',\n    '_',\n    '$window',\n    'Session',\n    'UserEndpoint',\n    'RoleEndpoint',\n    'Notify',\nfunction (\n    $scope,\n    $rootScope,\n    $translate,\n    $q,\n    $location,\n    _,\n    $window,\n    Session,\n    UserEndpoint,\n    RoleEndpoint,\n    Notify\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    var handleResponseErrors, checkAndNotifyAboutManipulateOwnUser;\n    $rootScope.setLayout('layout-a');\n    $translate('tool.manage_users').then(function (title) {\n        $scope.title = title;\n        $scope.$emit('setPageTitle', title);\n    });\n\n    RoleEndpoint.query().$promise.then(function (roles) {\n        $scope.roles = _.indexBy(roles, 'name');\n    });\n\n    $scope.filters = {\n        role: [],\n        q: ''\n    };\n\n    $scope.selectedUsers = [];\n\n    $scope.isToggled = function (user) {\n        return $scope.selectedUsers.indexOf(user.id) > -1;\n    };\n\n    $scope.toggleUser = function (user) {\n        var idx = $scope.selectedUsers.indexOf(user.id);\n        if (idx > -1) {\n            $scope.selectedUsers.splice(idx, 1);\n        } else {\n            $scope.selectedUsers.push(user.id);\n        }\n    };\n\n    handleResponseErrors = function (errorResponse) {\n        Notify.apiErrors(errorResponse);\n    };\n\n    checkAndNotifyAboutManipulateOwnUser = function (translationKey) {\n        var currentUserId = Session.getSessionDataEntry('userId');\n        if (_.contains($scope.selectedUsers, currentUserId)) {\n            Notify.error(translationKey);\n            return true;\n        }\n        return false;\n    };\n\n    $scope.addUser = function () {\n        $location.path('/settings/users/create');\n    };\n\n    $scope.deleteUsers = function () {\n\n        if (checkAndNotifyAboutManipulateOwnUser('user.cannot_delete_yourself')) {\n            return;\n        }\n        Notify.confirmDelete('notify.user.bulk_destroy_confirm', {\n            count: $scope.selectedUsers.length\n        }).then(function () {\n            var calls = [];\n            angular.forEach($scope.selectedUsers, function (userId) {\n                calls.push(UserEndpoint.delete({ id: userId }).$promise);\n            });\n\n            $q.all(calls).then(function () {\n                Notify.notify('notify.user.bulk_destroy_success');\n                $scope.getUsersForPagination();\n            }, handleResponseErrors)\n            .finally($scope.filterRole);\n        }, function () {});\n    };\n\n    $scope.changeRole = function (role) {\n        if (checkAndNotifyAboutManipulateOwnUser('user.cannot_change_your_own_role')) {\n            return;\n        }\n\n        Notify.confirm('notify.user.bulk_role_change_confirm', {\n            count: $scope.selectedUsers.length,\n            role:  role.display_name\n        }).then(function () {\n            var calls = [];\n            angular.forEach($scope.selectedUsers, function (userId) {\n                calls.push(UserEndpoint.saveCache({ id: userId, role: role.name }).$promise);\n            });\n            $q.all(calls).then(function () {\n                Notify.notify('notify.user.bulk_role_change_success', {role_name: role.name});\n                $scope.getUsersForPagination();\n            }, handleResponseErrors)\n            .finally($scope.filterRole);\n        });\n    };\n\n    $scope.itemsPerPageChanged = function (count) {\n        $scope.pagination.itemsPerPage = count;\n        $scope.getUsersForPagination();\n    };\n\n    // // hydrate!\n    // $scope.users = UserEndpoint.query();\n\n\n    // --- start: definitions\n    $scope.getUsersForPagination = function () {\n        var filters = _.extend({\n                            offset: ($scope.pagination.currentPage - 1) * $scope.pagination.itemsPerPage,\n                            limit: $scope.pagination.itemsPerPage,\n                            orderby: 'realname'\n                        }, $scope.filters);\n        UserEndpoint.queryFresh(filters).$promise.then(function (usersResponse) {\n            $scope.users = usersResponse.results;\n            $scope.pagination.totalItems = usersResponse.total_count;\n            $scope.showPagination = $scope.pagination.totalItems > 0  ? $scope.pagination.totalItems / $scope.pagination.itemsPerPage > 1 : false;\n        });\n    };\n\n    $scope.pageChanged = $scope.getUsersForPagination;\n    $scope.applyFilters = function () {\n        $scope.getUsersForPagination();\n    };\n    // --- end: definitions\n\n\n    // --- start: initialization\n    $scope.filteredRole = '';\n    $scope.pagination = {\n        currentPage : 1,\n        itemsPerPage : 10,\n        totalItems: 10\n    };\n\n    $scope.getUsersForPagination();\n    // --- end: initialization\n    $scope.$watch('filters', function () {\n        $scope.getUsersForPagination();\n    }, true);\n\n}];\n","module.exports = \"<div ui-view>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>app.users</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n        <!-- toolbar -->\\n        <div class=\\\"toolbar\\\">\\n            <div class=\\\"fab\\\">\\n                <a ui-sref=\\\"settings.users.create\\\" type=\\\"button\\\" class=\\\"button button-alpha button-fab\\\" ng-class=\\\"{'disabled': selectedUsers.length}\\\">\\n                    <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                    </svg>\\n                    <span class=\\\"hidden\\\" translate>user.add_user</span>\\n                </a>\\n            </div>\\n\\n            <filter-users filters=\\\"filters\\\"></filter-users>\\n\\n            <div class=\\\"button-group\\\" ng-show=\\\"todo\\\">\\n                <button type=\\\"button\\\">\\n                    <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#external-link\\\"></use>\\n                    </svg>\\n                    <span class=\\\"button-label\\\" translate>nav.export</span>\\n                </button>\\n            </div>\\n        </div>\\n        <!-- end toolbar -->\\n\\n        <div class=\\\"main-col\\\">\\n\\n            <div class=\\\"listing card\\\" ng-class=\\\"{'toolbar-active': selectedUsers.length}\\\">\\n                <div class=\\\"alert\\\" ng-hide=\\\"users.length\\\">\\n                    <p ng-hide=\\\"users.length\\\"><em translate>empty.user</em></p>\\n                </div>\\n\\n                <div id=\\\"user-{{user.id}}\\\" class=\\\"listing-item\\\" ng-repeat=\\\"user in users | orderBy:'realname'\\\" ng-class=\\\"{ 'warning': isToggled(user) }\\\" ng-click=\\\"toggleUser(user)\\\">\\n                    <div class=\\\"listing-item-select\\\">\\n                        <input type=\\\"checkbox\\\" value=\\\"{{user.id}}\\\" ng-checked=\\\"isToggled(user)\\\">\\n                    </div>\\n\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <div class=\\\"listing-item-image\\\">\\n                            <img class=\\\"avatar\\\" ng-src=\\\"https://www.gravatar.com/avatar/{{ user.gravatar || '00000000000000000000000000000000' }}?d=retro\\\" alt=\\\"{{ user.realname }}\\\">\\n                        </div>\\n\\n                        <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.users.edit({id: user.id})\\\">{{user.realname}}</a></h2>\\n                        <p class=\\\"listing-item-secondary\\\" \\n                            translate-values=\\\"{role: roles[user.role].display_name}\\\" \\n                            translate=\\\"user.role_display\\\">\\n                            Role: role_name\\n                        </p>\\n                        <p class=\\\"listing-item-secondary\\\" style=\\\"text-transform: capitalize\\\" ng-repeat=\\\"contact in user.contacts\\\"\\n                            translate-values=\\\"{\\n                                type: contact.type,\\n                                contact: contact.contact\\n                            }\\\" \\n                            translate=\\\"user.contact\\\">\\n                            Contact_Type: contact\\n                        </p>\\n                    </div>\\n                </div>\\n                <listing-toolbar entities=\\\"users\\\" selected-set=\\\"selectedUsers\\\">\\n                    <fieldset class=\\\"custom-fieldset init\\\" dropdown>\\n                        <legend class=\\\"dropdown-trigger init\\\" data-toggle=\\\"dropdown-menu\\\" dropdown-toggle>\\n                            <span class=\\\"legend-label\\\" translate>\\n                                user.change_role\\n                            </span>\\n                            <svg class=\\\"iconic chevron\\\">\\n                                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                            </svg>\\n                        </legend>\\n                        <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                            <div class=\\\"form-field radio\\\" ng-repeat=\\\"role in roles\\\">\\n                                <label>\\n                                    <input type=\\\"radio\\\" name=\\\"role\\\" ng-click=\\\"changeRole(role)\\\">\\n                                        {{role.display_name}}\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </fieldset>\\n                    <button type=\\\"button\\\" class=\\\"button-destructive\\\" ng-disabled=\\\"!selectedUsers.length\\\" ng-click=\\\"deleteUsers()\\\">\\n                        <svg class=\\\"iconic\\\">\\n                            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#trash\\\"></use>\\n                        </svg>\\n                        <span class=\\\"button-label hidden\\\">nav.delete</span>\\n                    </button>\\n                </listing-toolbar>\\n             </div>\\n            <nav class=\\\"pagination\\\" ng-show=\\\"showPagination\\\">\\n                <ul uib-pagination ng-model=\\\"pagination.currentPage\\\" items-per-page=\\\"pagination.itemsPerPage\\\" total-items=\\\"pagination.totalItems\\\" ng-change=\\\"pageChanged()\\\" max-size=\\\"5\\\" boundary-links=\\\"false\\\" rotate=\\\"false\\\"></ul>\\n            </nav>\\n        </div>\\n    </main>\\n</div>\\n\";","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$translate',\n    '$location',\n    '$state',\n    'UserEndpoint',\n    'Notify',\n    '_',\n    'RoleEndpoint',\nfunction (\n    $scope,\n    $rootScope,\n    $translate,\n    $location,\n    $state,\n    UserEndpoint,\n    Notify,\n    _,\n    RoleEndpoint\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    $translate('user.add_user').then(function (title) {\n        $scope.title = title;\n        $rootScope.$emit('setPageTitle', title);\n    });\n\n    $scope.passwordShown = true;\n    $scope.user = { role: 'user' }; // @todo don't hardcode default role\n    $scope.save = $translate.instant('app.save');\n    $scope.saving = $translate.instant('app.saving');\n    $scope.saving_user = false;\n    $scope.saveUser = function (user) {\n        $scope.saving_user = true;\n\n        UserEndpoint.saveCache(user).$promise.then(function (response) {\n            if (response.id) {\n                Notify.notify('notify.user.save_success', {name: user.realname});\n                $scope.saving_user = false;\n                $scope.userSavedUser = true;\n                $scope.user.id = response.id;\n                // in favor of $route.reload();\n                $state.go('settings.users', null, { reload: true });\n            }\n        }, function (errorResponse) { // error\n            var validationErrors = [],\n                limitError = false;\n            // @todo refactor limit handling\n            _.each(errorResponse.data.errors, function (value, key) {\n                // Ultimately this should check individual status codes\n                // for the moment just check for the message we expect\n                if (value.title === 'limit::admin') {\n                    limitError = 'limit.admin_limit_reached';\n                } else {\n                    validationErrors.push(value);\n                }\n            });\n\n            if (limitError) {\n                Notify.limit(limitError);\n            } else {\n                Notify.errors(_.pluck(validationErrors, 'message'));\n            }\n            $scope.saving_user = false;\n        });\n    };\n\n    $scope.cancel = function () {\n        $location.path('/settings/users');\n    };\n\n    RoleEndpoint.query().$promise.then(function (roles) {\n        $scope.roles = _.indexBy(roles, 'name');\n    });\n}];\n","module.exports = [\n    '$scope',\n    '$rootScope',\n    '$translate',\n    '$location',\n    '$transition$',\n    'UserEndpoint',\n    'Notify',\n    '_',\n    'RoleEndpoint',\n    'Session',\n    '$state',\nfunction (\n    $scope,\n    $rootScope,\n    $translate,\n    $location,\n    $transition$,\n    UserEndpoint,\n    Notify,\n    _,\n    RoleEndpoint,\n    Session,\n    $state\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    $translate('user.edit_user').then(function (title) {\n        $scope.title = title;\n        $scope.$emit('setPageTitle', title);\n    });\n\n    $scope.passwordShown = true;\n    $scope.save = $translate.instant('app.save');\n    $scope.saving = $translate.instant('app.saving');\n    $scope.saving_user = false;\n\n    UserEndpoint.getFresh({id: $transition$.params().id}).$promise.then(function (user) {\n        $scope.$emit('setPageTitle', $scope.title + ' - ' + user.realname);\n        $scope.user = user;\n        $scope.passwordShown = false;\n    });\n\n    $scope.showPassword = function () {\n        $scope.passwordShown = true;\n    };\n\n    $scope.saveUser = function (user) {\n        $scope.saving_user = true;\n        UserEndpoint.saveCache(user).$promise.then(function (response) {\n            if (response.id) {\n                Notify.notify('notify.user.edit_success', {name: user.realname});\n                $scope.saving_user = false;\n                $scope.userSavedUser = true;\n                $scope.user.id = response.id;\n            }\n            $state.go('settings.users', null, { reload: true });\n        }, function (errorResponse) { // error\n            var validationErrors = [],\n                limitError = false;\n            // @todo refactor limit handling\n            _.each(errorResponse.data.errors, function (value, key) {\n                // Ultimately this should check individual status codes\n                // for the moment just check for the message we expect\n                if (value.title === 'limit::admin') {\n                    limitError = 'limit.admin_limit_reached';\n                } else {\n                    validationErrors.push(value);\n                }\n            });\n\n            if (limitError) {\n                Notify.limit(limitError);\n            } else {\n                Notify.errors(_.pluck(validationErrors, 'message'));\n            }\n            $scope.saving_user = false;\n        });\n    };\n\n    var handleResponseErrors = function (errorResponse) {\n        Notify.apiErrors(errorResponse);\n    };\n\n    var checkAndNotifyAboutManipulateOwnUser = function (translationKey) {\n        var currentUserId = Session.getSessionDataEntry('userId');\n        if (_.contains($scope.selectedUsers, currentUserId)) {\n            Notify.error(translationKey);\n            return true;\n        }\n        return false;\n    };\n\n    $scope.deleteUser = function (user) {\n        if (checkAndNotifyAboutManipulateOwnUser('user.cannot_delete_yourself')) {\n            return;\n        }\n        Notify.confirmDelete('notify.user.destroy_confirm').then(function () {\n            UserEndpoint.delete({ id: user.id }).$promise.then(function () {\n                Notify.notify('notify.user.destroy_success');\n            }, handleResponseErrors);\n            $location.url('/settings/users');\n        }, function () {});\n    };\n\n    $scope.cancel = function () {\n        $location.path('/settings/users');\n    };\n\n    RoleEndpoint.query().$promise.then(function (roles) {\n        $scope.roles = _.indexBy(roles, 'name');\n    });\n}];\n","module.exports = \"<div ui-view>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a ui-sref=\\\"settings.list\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>app.roles</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <!-- toolbar -->\\n        <div class=\\\"toolbar\\\">\\n            <div class=\\\"fab\\\" ng-show=\\\"rolesEnabled\\\">\\n                <a ui-sref=\\\"settings.roles.create\\\" type=\\\"button\\\" class=\\\"button button-alpha button-fab\\\">\\n                    <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                    </svg>\\n                    <span class=\\\"hidden\\\" translate>role.add_role</span>\\n                </a>\\n            </div>\\n        </div>\\n        <!-- end toolbar -->\\n\\n        <div custom-roles class=\\\"main-col\\\">\\n\\n            <div class=\\\"alert\\\" ng-show=\\\"!rolesEnabled\\\" translate=\\\"feature_limits.view_unavailable\\\" translate-values=\\\"{value: 'Custom roles'}\\\"></div>\\n\\n            <div class=\\\"alert\\\" ng-hide=\\\"roles.length\\\">\\n                <p ng-hide=\\\"roles.length\\\"><em translate>empty.role</em></p>\\n            </div>\\n\\n            <div class=\\\"listing card\\\" ng-show=\\\"roles.length\\\" ng-show=\\\"rolesEnabled\\\">\\n                <div class=\\\"listing-item\\\" ng-repeat=\\\"role in roles | orderBy:'role'\\\">\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.roles.edit({id: role.id})\\\">{{role.display_name}}</a></h2>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </main>\\n</div>\\n\";","module.exports = \"<div ui-view>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"settings\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>app.webhooks</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <!-- toolbar -->\\n        <div class=\\\"toolbar\\\">\\n            <div class=\\\"fab\\\" ng-show=\\\"webhooksEnabled\\\">\\n                <a ui-sref=\\\"settings.webhooks.create\\\" type=\\\"button\\\" class=\\\"button button-alpha button-fab\\\">\\n                    <svg class=\\\"iconic\\\">\\n                      <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#plus\\\"></use>\\n                    </svg>\\n                    <span class=\\\"hidden\\\" translate>webhook.add_webhook</span>\\n                </a>\\n            </div>\\n        </div>\\n        <!-- end toolbar -->\\n\\n        <div custom-webhooks class=\\\"main-col\\\">\\n\\n            <div class=\\\"alert\\\" ng-show=\\\"!webhooksEnabled\\\" translate=\\\"feature_limits.view_unavailable\\\" translate-values=\\\"{value: 'Custom webhooks'}\\\"></div>\\n\\n            <div ng-show=\\\"webhooksEnabled\\\">\\n              <div class=\\\"alert\\\" ng-hide=\\\"webhooks.length\\\">\\n                  <p ng-hide=\\\"webhooks.length\\\"><em translate>empty.webhook</em></p>\\n              </div>\\n\\n              <div class=\\\"listing card\\\" ng-show=\\\"webhooks.length\\\">\\n                  <div class=\\\"listing-item\\\" ng-repeat=\\\"webhook in webhooks | orderBy:'webhook'\\\">\\n                      <div class=\\\"listing-item-primary\\\">\\n                          <h2 class=\\\"listing-item-title\\\"><a ui-sref=\\\"settings.webhooks.edit({id: webhook.id})\\\">{{webhook.name}}</a></h2>\\n                      </div>\\n                  </div>\\n              </div>\\n\\n              <uib-pagination ng-model=\\\"currentPage\\\" items-per-page=\\\"itemsPerPage\\\" total-items=\\\"totalItems\\\" ng-change=\\\"pageChanged()\\\" max-size=\\\"5\\\" boundary-links=\\\"false\\\" rotate=\\\"false\\\"></uib-pagination>\\n            </div>\\n        </div>\\n    </main>\\n</div>\\n\";","module.exports = [\n    '$q',\n    '$scope',\n    '$rootScope',\n    '$location',\n    '$translate',\n    'ConfigEndpoint',\n    'DataProviderEndpoint',\n    'FormEndpoint',\n    'FormAttributeEndpoint',\n    'Notify',\n    '_',\n    'Features',\nfunction (\n    $q,\n    $scope,\n    $rootScope,\n    $location,\n    $translate,\n    ConfigEndpoint,\n    DataProviderEndpoint,\n    FormEndpoint,\n    FormAttributeEndpoint,\n    Notify,\n    _,\n    Features\n) {\n\n    // Redirect to home if not authorized\n    if ($rootScope.hasManageSettingsPermission() === false) {\n        return $location.path('/');\n    }\n\n    // Change layout class\n    $rootScope.setLayout('layout-c');\n    // Change mode\n    $scope.$emit('event:mode:change', 'settings');\n\n    // Displays a loading indicator when busy querying endpoints.\n    $scope.saving = false;\n    $scope.settings = {};\n    $scope.available_providers = [];\n    $scope.formEnabled = [];\n    $scope.surveys = {};\n    $scope.formsSubmitted = {};\n    $scope.panelVisible = {};\n    $scope.forms = {};\n    $scope.selectedForm = {};\n    $scope.savedProviders = {};\n\n    // Translate and set page title.\n    $translate('settings.data_sources.data_sources').then(function (title) {\n        $scope.title = title;\n        $scope.$emit('setPageTitle', title);\n    });\n\n    $scope.allowedTypeMapping = function (field_type, attribute_type) {\n        if (field_type === attribute_type) {\n            return true;\n        }\n\n        var allowed_text_types = ['text', 'varchar', 'title', 'description', 'markdown'];\n        if (field_type === 'text' && _.contains(allowed_text_types, attribute_type)) {\n            return true;\n        }\n\n        return false;\n    };\n\n    $scope.getFormAttributes = function (form, provider_id) {\n\n        $scope.selectedForm[provider_id] = form;\n\n        if ($scope.selectedForm[provider_id].attributes) {\n            return;\n        }\n\n        $scope.selectedForm[provider_id].attributes = [];\n\n        // Get Attributes if not previously loaded\n        FormAttributeEndpoint.query({formId: form.id}).$promise.then(function (results) {\n            $scope.selectedForm[provider_id].attributes = [];\n\n            // Due to the oddness of title and description being both Post fields and Attributes\n            // it is necessary to construct an index into the Post object that can be used with the\n            // Laravel/Kohana function array_get/array_set\n            _.each(results, function (attribute) {\n                if (attribute.type === 'title' || attribute.type === 'description') {\n                    attribute.post_key = attribute.type === 'title' ? attribute.type : 'content';\n                } else {\n                    attribute.post_key = 'values.' + attribute.key;\n                }\n                $scope.selectedForm[provider_id].attributes.push(attribute);\n            });\n        });\n    };\n\n    $scope.setSelectedForm = function (form, provider_id) {\n        $scope.settings[provider_id].form_id = form.id;\n        $scope.selectedForm[provider_id] = form;\n        $scope.getFormAttributes(form, provider_id);\n    };\n\n    $scope.isSelectedForm = function (form_id, provider_id) {\n        if ($scope.settings[provider_id]) {\n            if ($scope.settings[provider_id].form_id) {\n                return $scope.settings[provider_id].form_id === form_id;\n            }\n        }\n        return false;\n    };\n\n    $scope.toggleFormAssociation = function (provider_id) {\n        if ($scope.formEnabled[provider_id]) {\n            if ($scope.settings[provider_id]) {\n                $scope.settings[provider_id].form_id = undefined;\n                $scope.selectedForm[provider_id] = undefined;\n            }\n        }\n        $scope.formEnabled[provider_id] = !$scope.formEnabled[provider_id];\n    };\n\n    $scope.saveProviderSettings = function (provider) {\n        if ($scope.saving) {\n            return false;\n        }\n\n        var form = $scope.forms[provider];\n\n        if (form.$valid) {\n            $scope.saving = true;\n\n            // Enable data provider when saved for the first time\n            if (!(provider in $scope.savedProviders)) {\n                $scope.settings.providers[provider] = true;\n            }\n\n            $scope.settings.id = 'data-provider';\n            ConfigEndpoint.saveCache($scope.settings).$promise.then(function (result) {\n                $scope.saving = false;\n                Notify.notify('notify.datasource.save_success');\n\n                // Track saved provider\n                addSavedProvider(provider);\n\n            }, function (errorResponse) { // error\n                Notify.apiErrors(errorResponse);\n            });\n\n            // No errors found; disable this.\n            $scope.formsSubmitted[provider] = false;\n        } else {\n            // Force the accordian group for the form is pop open, to display field errors.\n            $scope.formsSubmitted[provider] = true;\n            $scope.panelVisible[provider] = true;\n        }\n    };\n\n    var addSavedProvider = function (provider) {\n        if (!$scope.savedProviders[provider]) {\n            $scope.savedProviders[provider] = true;\n        }\n    };\n\n    $q.all([\n      DataProviderEndpoint.queryFresh().$promise,\n      ConfigEndpoint.get({ id: 'data-provider' }).$promise,\n      FormEndpoint.query().$promise,\n      Features.loadFeatures()\n    ]).then(function (response) {\n        $scope.providers = response[0];\n        $scope.settings = response[1];\n        $scope.surveys = response[2];\n        $scope.available_providers = response[3]['data-providers'];\n\n        // Enable form elements as appropriate\n        _.forEach($scope.settings, function (provider, name) {\n            if (provider.form_id) {\n                $scope.toggleFormAssociation(name);\n                var form = _.find($scope.surveys, function (form) {\n                    return form.id === provider.form_id;\n                });\n                $scope.setSelectedForm(form, name);\n            }\n        });\n\n        // Keep track of providers with saved settings\n        $scope.savedProviders = {};\n\n        _.forEach($scope.providers.results, function (provider) {\n            if ($scope.settings[provider.id]) {\n                addSavedProvider(provider.id);\n            }\n        });\n    });\n}];\n","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\">\\n\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n            <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>app.data_sources</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\">\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <div class=\\\"main-col\\\">\\n\\n            <div class=\\\"alert\\\">\\n                <p><em translate>settings.data_sources.hint_turn_on_off</em></p>\\n            </div>\\n\\n            <div class=\\\"listing card\\\">\\n\\n                <!-- TODO: fix active class toggle -->\\n                <div class=\\\"listing-item active\\\" ng-repeat=\\\"provider in providers.results | orderBy:'name'\\\" is-open=\\\"panelVisible[provider.id]\\\"  dropdown auto-close=\\\"disabled\\\" ng-if=\\\"available_providers[provider.id]\\\">\\n\\n                    <div class=\\\"listing-item-secondary\\\">\\n                        <button type=\\\"button\\\" class=\\\"button-beta button-flat listing-item-toggle\\\" dropdown-toggle>\\n                            <svg class=\\\"iconic\\\">\\n                              <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                            </svg>\\n                            <span class=\\\"button-label\\\" translate>settings.data_sources.configure</span>\\n                        </button>\\n                    </div>\\n\\n                    <div class=\\\"listing-item-primary\\\">\\n                        <h2 class=\\\"listing-item-title\\\">\\n                            {{provider.name}}\\n                            <span class=\\\"status-indicator\\\" ng-class=\\\"{ 'green' : available_providers[provider.id] && settings.providers[provider.id] }\\\"></span>\\n                        </h2>\\n                    </div>\\n\\n                    <div class=\\\"listing-item-body\\\" dropdown-menu>\\n\\n                        <div class=\\\"alert error\\\" ng-if=\\\"forms[provider.id].$invalid\\\">\\n                            <p translate>settings.data_sources.hint_plugin_needs_configuring</p>\\n                        </div>\\n\\n                        <div class=\\\"alert\\\" ng-if=\\\"!available_providers[provider.id]\\\">\\n                            <p translate translate-values=\\\"{value: '{{provider.name}}'}\\\">\\n                                settings.data_sources.unavailable\\n                            </p>\\n                        </div>\\n\\n                        <form name=\\\"forms.{{provider.id}}\\\" ng-submit=\\\"saveProviderSettings(provider.id)\\\" ng-if=\\\"available_providers[provider.id]\\\">\\n\\n                            <div class=\\\"form-field switch\\\" ng-if=\\\"forms[provider.id].$valid\\\">\\n                                <label translate>settings.data_sources.enable_provider_message</label>\\n                                <div class=\\\"toggle-switch\\\">\\n                                    <input class=\\\"tgl\\\" id=\\\"{{provider.id}}_enable\\\" type=\\\"checkbox\\\" ng-model=\\\"settings.providers[provider.id]\\\" ng-change=\\\"saveProviderSettings(provider.id)\\\">\\n                                    <label class=\\\"tgl-btn\\\" for=\\\"{{provider.id}}_enable\\\"></label>\\n                               </div>\\n                            </div>\\n                            <div class=\\\"form-field switch\\\" ng-if=\\\"forms[provider.id].$valid\\\">\\n                                <label translate=\\\"settings.data_sources.associate_with_form\\\">Import to survey</label>\\n                                <div class=\\\"toggle-switch\\\">\\n                                    <input class=\\\"tgl\\\" id=\\\"{{provider.id}}_form_enable\\\" type=\\\"checkbox\\\" ng-checked=\\\"formEnabled[provider.id]\\\" ng-click=\\\"toggleFormAssociation(provider.id)\\\">\\n                                    <label class=\\\"tgl-btn\\\" for=\\\"{{provider.id}}_form_enable\\\"></label>\\n                               </div>\\n                               <div data-fieldgroup-target=\\\"import_to_survey-survey\\\" class=\\\"init active\\\">\\n                                 <p data-fieldgroup-target=\\\"hide-author-message\\\" class=\\\"init\\\" ng-class=\\\"{'active' : formEnabled[provider.id]}\\\" translate-values=\\\"{ datasource_type: provider.name }\\\" translate=\\\"survey.choose_survey_field_desc\\\" >\\n                                   <em>\\n                                     All incoming data from {{provider.name}} will be used to create responses to the survey you choose.\\n                                   </em>\\n                                 </p>\\n\\n                                 <fieldset ng-show=\\\"formEnabled[provider.id]\\\" class=\\\"custom-fieldset init\\\" dropdown auto-close=\\\"outsideClick\\\">\\n                                     <legend class=\\\"dropdown-trigger init\\\" dropdown-toggle>\\n                                       <span class=\\\"legend-label\\\">\\n                                         <span tranlate=\\\"data_import.import_to\\\">\\n                                           Import to\\n                                         </span>\\n                                         <span class=\\\"custom-fieldset-value\\\" ng-show=\\\"!selectedForm[provider.id]\\\" translate=\\\"data_import.which_survey\\\">\\n                                           which survey?\\n                                         </span>\\n                                         <span class=\\\"custom-fieldset-value\\\" ng-show=\\\"selectedForm[provider.id]\\\">\\n                                           {{selectedForm[provider.id].name}}\\n                                         </span>\\n                                       </span>\\n                                       <svg class=\\\"iconic chevron\\\">\\n                                         <use xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n                                       </svg>\\n                                     </legend>\\n\\n                                     <div class=\\\"dropdown-menu init\\\" dropdown-menu>\\n                                       <div class=\\\"form-field radio\\\"\\n                                          ng-repeat=\\\"form in surveys\\\"\\n                                          ng-class=\\\"{'checked' : isSelectedForm(form.id, provider.id)}\\\"\\n                                          ng-click=\\\"setSelectedForm(form, provider.id);$event.stopPropagation()\\\">\\n                                          <input\\n                                             id=\\\"import-to-{{form.id}}\\\"\\n                                             name=\\\"import-to\\\"\\n                                             ng-checked=\\\"isSelectedForm(form.id, provider.id)\\\"\\n                                             type=\\\"radio\\\">\\n                                         <label for=\\\"import-to-{{form.id}}\\\">\\n                                             {{form.name}}\\n                                         </label>\\n                                       </div>\\n                                     </div>\\n                                 </fieldset>\\n\\n                                 <fieldset data-fieldgroup-target=\\\"import_to_survey-fields\\\" class=\\\"init active\\\" ng-show=\\\"selectedForm[provider.id] && formEnabled\\\">\\n                                     <legend translate=\\\"survey.choose_survey_field\\\">Choose what should be assigned to each survey field</legend>\\n                                     <p translate=\\\"survey.choose_survey_field_desc\\\" translate-values=\\\"{ datasource_type: provider.name }\\\">Each of the survey's fields are listed below. Choose the data from {{provider.name}} that you'd like to use to populate each of those fields.</p>\\n                                     <table>\\n                                         <thead>\\n                                             <tr>\\n                                               <th>{{provider.name}} data</th>\\n                                               <th translate=\\\"survey.survey_field\\\">Survey field</th>\\n                                             </tr>\\n                                         </thead>\\n                                         <tbody>\\n                                             <tr ng-repeat=\\\"(field, field_type) in provider.inbound_fields\\\">\\n                                               <td>\\n                                                 <span>\\n                                                   {{field}}\\n                                                 </span>\\n                                               </td><td>\\n                                                   <div class=\\\"custom-select\\\">\\n                                                       <select ng-model=\\\"settings[provider.id]['inbound_fields'][field]\\\">\\n                                                         <option selected=\\\"selected\\\" value=\\\"\\\" translate=\\\"data_import.leave_empty\\\">\\n                                                             Leave empty\\n                                                         </option>\\n                                                          <option\\n                                                            ng-repeat=\\\"attribute in selectedForm[provider.id].attributes\\\"\\n                                                            ng-show=\\\"allowedTypeMapping(field_type, attribute.type)\\\"\\n                                                            value=\\\"{{attribute.post_key}}\\\"\\n                                                            label=\\\"{{attribute.label}}\\\"\\n                                                            ng-class=\\\"{'required' : attribute.required}\\\">\\n                                                       </select>\\n                                                   </div>\\n                                               </td>\\n                                             </tr>\\n                                         </tbody>\\n                                     </table>\\n                                 </fieldset>\\n                               </div>\\n                            </div>\\n\\n                            <div ng-repeat=\\\"(option_key, option) in provider.options track by option_key\\\" ng-class=\\\"{ error : formsSubmitted[provider.id] && forms[provider.id][option_key].$invalid, 'form-field' : option.input !== 'radio', 'required' : option.rules.indexOf('required') > -1 }\\\">\\n\\n                                <div class=\\\"\\\" ng-if=\\\"option.input == 'read-only-text'\\\">\\n                                    <label ng-if=\\\"option.label\\\" ng-bind-html=\\\"option.label\\\" class=\\\"input-label\\\"></label>\\n                                    <p ng-bind-html=\\\"option.description\\\"></p>\\n                                </div>\\n\\n                                <div class=\\\"form-field\\\" ng-if=\\\"option.input == 'text'\\\">\\n                                    <p ng-if=\\\"option.label\\\">\\n                                        {{option.label}}\\n                                    </p>\\n\\n                                    <p ng-if=\\\"option.description\\\">\\n                                        {{option.description}}\\n                                    </p>\\n\\n                                    <input ng-if=\\\"option.rules.indexOf('number') > -1\\\" id=\\\"{{provider.id}}_{{option_key}}\\\" name=\\\"{{option_key}}\\\" type=\\\"number\\\" ng-pattern=\\\"/^\\\\d+$/\\\" ng-model=\\\"settings[provider.id][option_key]\\\" ng-required=\\\"option.rules.indexOf('required') > -1\\\" ng-disabled=\\\"saving\\\" ng-class=\\\"{error:formsSubmitted[provider.id] && forms[provider.id][option_key].$invalid}\\\">\\n                                    <input ng-if=\\\"option.rules.indexOf('email') > -1\\\" id=\\\"{{provider.id}}_{{option_key}}\\\" name=\\\"{{option_key}}\\\" type=\\\"email\\\" ng-pattern=\\\"/^[a-z]+[a-z0-9._]+@[a-z]+\\\\.[a-z.]{2,5}$/\\\" ng-model=\\\"settings[provider.id][option_key]\\\" ng-required=\\\"option.rules.indexOf('required') > -1\\\" ng-disabled=\\\"saving\\\" ng-class=\\\"{error:formsSubmitted[provider.id] && forms[provider.id][option_key].$invalid}\\\">\\n                                    <input ng-if=\\\"option.rules.indexOf('password') > -1\\\" id=\\\"{{provider.id}}_{{option_key}}\\\" name=\\\"{{option_key}}\\\" type=\\\"password\\\" ng-model=\\\"settings[provider.id][option_key]\\\" ng-required=\\\"option.rules.indexOf('required') > -1\\\" ng-disabled=\\\"saving\\\" ng-class=\\\"{error:formsSubmitted[provider.id] && forms[provider.id][option_key].$invalid}\\\">\\n                                    <input ng-if=\\\"option.rules.indexOf('number') == -1 && option.rules.indexOf('email') == -1 && option.rules.indexOf('password') == -1\\\" id=\\\"{{provider.id}}_{{option_key}}\\\" name=\\\"{{option_key}}\\\" type=\\\"{{option.input}}\\\" ng-model=\\\"settings[provider.id][option_key]\\\" ng-required=\\\"option.rules.indexOf('required') > -1\\\" ng-disabled=\\\"saving\\\" ng-class=\\\"{error:formsSubmitted[provider.id] && forms[provider.id][option_key].$invalid}\\\">\\n                                </div>\\n\\n                                <fieldset ng-if=\\\"option.input == 'radio'\\\">\\n                                    <label ng-if=\\\"option.label\\\">\\n                                        {{option.label}}\\n                                    </label>\\n\\n                                    <p ng-if=\\\"option.description\\\">\\n                                        {{option.description}}\\n                                    </p>\\n\\n                                    <div class=\\\"form-field radio\\\" ng-repeat=\\\"radio_option in option.options track by $index\\\">\\n                                        <label for=\\\"{{provider.id}}_{{option_key}}_{{$index}}\\\">\\n                                            <input id=\\\"{{provider.id}}_{{option_key}}_{{$index}}\\\" type=\\\"{{option.input}}\\\" name=\\\"{{option_key}}\\\" ng-value=\\\"radio_option\\\" ng-model=\\\"settings[provider.id][option_key]\\\" ng-required=\\\"option.rules.indexOf('required') > -1\\\" ng-disabled=\\\"saving\\\">{{radio_option}}\\n                                        </label>\\n                                    </div>\\n                                </fieldset>\\n\\n                                <div class=\\\"alert error\\\" ng-if=\\\"formsSubmitted[provider.id] && forms[provider.id][option_key].$invalid\\\">\\n                                    <p translate>settings.generic_field_error</p>\\n                                </div>\\n\\n                            </div>\\n\\n                            <button type=\\\"submit\\\" class=\\\"button-alpha\\\">\\n                                <div class=\\\"loading\\\" ng-show=\\\"saving\\\">\\n                                    <div class=\\\"line\\\"></div>\\n                                    <div class=\\\"line\\\"></div>\\n                                    <div class=\\\"line\\\"></div>\\n                                </div>\\n                                <span ng-hide=\\\"saving\\\" translate>app.save</span>\\n                            </button>\\n\\n                        </form>\\n\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n    </main>\\n</div>\\n\";","module.exports = [\n    '$scope',\n    '$translate',\n    '$rootScope',\n    'CONST',\n    'ConfigEndpoint',\n    'Notify',\nfunction (\n    $scope,\n    $translate,\n    $rootScope,\n    CONST,\n    ConfigEndpoint,\n    Notify\n) {\n    const tierMap = {\n        'free': {\n            plan: 'Mapper',\n            newPlan: 'Ushahidi Demo'\n        },\n        'surveyor': {\n            plan: 'Surveyor',\n            newPlan: 'Ushahidi Basic'\n        },\n        'responder': {\n            plan: 'Responder',\n            newPlan: 'Ushahidi Basic'\n        },\n        'free-pre-jun-2016': {\n            plan: 'Mapper (Legacy)',\n            newPlan: 'Ushahidi Demo'\n        },\n        'zerorated': {\n            plan: 'Social Impact',\n            newPlan: 'Ushahidi Basic'\n        }\n    };\n    $rootScope.setLayout('layout-c');\n    $scope.switchTab = switchTab;\n    $scope.activeTab = 'demo';\n    $translate('nav.plan_settings').then(function (title) {\n        $scope.title = title;\n        $rootScope.$emit('setPageTitle', title);\n    });\n\n    ConfigEndpoint.get({id: 'site'}).$promise.then(function (site) {\n        $scope.tier = site.tier;\n        const msgAll =\n            'You have the <strong>' + tierMap[$scope.tier].plan + '</strong> plan. ' +\n            'This plan is now out of date and has been replaced by <strong>' + tierMap[$scope.tier].newPlan +\n            '</strong>. ';\n\n        if ($rootScope.isAdmin() && ($scope.tier === 'zerorated' || $scope.tier === 'surveyor' ||  $scope.tier === 'responder')) {\n            const msgPaid = 'Your deployment will be upgraded, at no additional cost, to the new Ushahidi Basic plan. ' +\n                'This change will occur between 8 October 2018 and 12 October 2018.';\n            Notify.notifyPermanent(msgAll + msgPaid);\n        } else if ($rootScope.isAdmin() && ($scope.tier === 'free' || $scope.tier === 'free-pre-jun-2016')) {\n            const msgFree = 'Your account will be migrated to Ushahidi Demo between 8 October 2018 and 12 October 2018. ';\n            Notify.notifyPermanent(msgAll + msgFree);\n        }\n    });\n    $scope.username = encodeURIComponent(($rootScope.currentUser || {}).email);\n    /* globals apiDomain, deploymentsDomain */\n    $scope.cloudDomain = typeof deploymentsDomain !== 'undefined' ? deploymentsDomain : 'ushahidi.io' ;\n    $scope.subdomain = typeof apiDomain !== 'undefined' ?\n        CONST.BACKEND_URL.replace('.' + apiDomain, '').replace(/http[s]?:\\/\\//, '') :\n        CONST.BACKEND_URL;\n\n    function switchTab(tab) {\n        // First unset last active tab\n        if ($scope.activeTab) {\n            angular.element(document.getElementById($scope.activeTab)).removeClass('active');\n            angular.element(document.getElementById($scope.activeTab + '-li')).removeClass('active');\n        }\n        // Set new active tab\n        angular.element(document.getElementById(tab)).addClass('active');\n        angular.element(document.getElementById(tab + '-li')).addClass('active');\n        $scope.activeTab = tab;\n    }\n\n}];\n","module.exports = \"<div>\\n    <div class=\\\"mode-context init\\\" dropdown>\\n\\n        <header class=\\\"mode-context-header\\\">\\n            <ol class=\\\"breadcrumbs\\\">\\n                <li><a href=\\\"/\\\" ng-controller=\\\"navigation as nav\\\">{{nav.site.name}}</a></li>\\n                <li><a href=\\\"/settings\\\" translate>app.settings</a></li>\\n            </ol>\\n            <h1 class=\\\"mode-context-title\\\" translate>app.plans</h1>\\n        </header>\\n\\n        <span class=\\\"mode-context-trigger\\\" dropdown-toggle>\\n            <svg class=\\\"iconic\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\" + require(\"/var/app/node_modules/ushahidi-platform-pattern-library/assets/img/iconic-sprite.svg\") + \"#chevron-bottom\\\"></use>\\n            </svg>\\n            <span class=\\\"label hidden\\\" translate>app.show_more_less</span>\\n        </span>\\n    </div>\\n\\n    <main role=\\\"main\\\">\\n\\n        <div class=\\\"wrapper\\\">\\n            <div class=\\\"tiers\\\" role=\\\"article\\\">\\n                <nav class=\\\"tabs-menu init\\\" data-tabs=\\\"pricing-tabs\\\">\\n                    <ul>\\n                        <li id=\\\"demo-li\\\" class=\\\"active\\\">\\n                            <a href=\\\"#\\\" ng-click=\\\"switchTab('demo')\\\">\\n                                Ushahidi Demo\\n                                <span class=\\\"tabs-label\\\">Self Service</span>\\n                            </a>\\n\\n                        </li>\\n                        <li id=\\\"basic-li\\\" >\\n                            <a href=\\\"#\\\" ng-click=\\\"switchTab('basic')\\\">\\n                                Ushahidi Basic\\n                                <span class=\\\"tabs-label\\\">Self Service</span>\\n                            </a>\\n\\n                        </li>\\n                        <li id=\\\"enterprise-single-li\\\" >\\n                            <a href=\\\"#\\\" ng-click=\\\"switchTab('enterprise-single')\\\">\\n                                Single Deployment\\n                                <span class=\\\"tabs-label alt\\\">Enterprise</span>\\n                            </a>\\n\\n                        </li>\\n                        <li id=\\\"enterprise-multiple-li\\\" >\\n                            <a href=\\\"#\\\" ng-click=\\\"switchTab('enterprise-multiple')\\\">\\n                                Multiple Deployment\\n                                <span class=\\\"tabs-label alt\\\">Enterprise</span>\\n                            </a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n\\n                <div class=\\\"tier pricing-tabs active tabs-target\\\" id=\\\"demo\\\">\\n                    <span class=\\\"tier-label\\\">Self Service</span>\\n\\n                    <div class=\\\"tier-summary\\\">\\n                        <h2 class=\\\"tier-name\\\">Ushahidi Demo</h2>\\n                        <p class=\\\"small\\\">limited use - 1 month</p>\\n                        <p>Test out the Ushahidi crowdsourcing and situation awareness platform.</p>\\n                        <strong class=\\\"tier-price\\\">Free</strong>\\n                        <a class=\\\"button button-alpha\\\" disabled ng-show=\\\"tier == 'demo_1'\\\">&check; Subscribed</a>\\n                        <a href=\\\"//{{ cloudDomain }}/settings/login?subdomain={{ subdomain }}&username={{ username }}&tier=demo_1\\\" class=\\\"button button-alpha\\\" ng-hide=\\\"tier == 'demo_1'\\\">Sign up</a>\\n                    </div>\\n\\n                    <div class=\\\"show-on-mobile\\\">\\n                        <div class=\\\"tier-features\\\">\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Free Software, Hosting, and Maintenance</h3>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Embeddable web form, email, SMSsync, data collection online/offline iOS and Android App. Map and Timeline data visualization <br> Roles/Permissions. Email, SMS, Twitter. Private Deployments. Analytics Visualization Page. Import/Export Data.</h3>\\n                                <a href=\\\"#5355\\\">Find out more about data collection</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">1 Deployment</h3>\\n                                <a href=\\\"#5348\\\">What’s a deployment?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">25 admins and/or custom roles</h3>\\n                                <a href=\\\"#5349\\\">What’s an admin?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">25 posts maximum</h3>\\n                                <a href=\\\"#5352\\\">What’s a post?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Deployments appear in Ushahidi iOS/Android App</h3>\\n                                <a href=\\\"#5728\\\">Learn more about our app</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Crowdsourced surveys</h3>\\n                                <a href=\\\"#5350\\\">What’s a crowdsourced survey?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">No targeted surveys</h3>\\n                                <a href=\\\"#5351\\\">What’s a targeted survey?</a>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">One-time Support Services not available for demo</h3>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">On-going support services not available for demo</h3>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Custom feature development  not available for demo</h3>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier pricing-tabs tabs-target\\\" id=\\\"basic\\\">\\n                    <span class=\\\"tier-label\\\">Self Service</span>\\n                    <div class=\\\"tier-summary\\\">\\n                        <h2 class=\\\"tier-name\\\">Ushahidi Basic</h2>\\n                        <p class=\\\"small hide-on-mobile\\\" style=\\\"visibility: hidden;\\\">this is a line break hack</p>\\n                        <p>Collect, monitor, analyze, and respond to real time incidents and engage with stakeholders.</p>\\n                        <strong class=\\\"tier-price\\\">$499 <em>/mo</em></strong>\\n                        <a class=\\\"button button-alpha\\\" ng-show=\\\"tier == 'level_1'\\\" disabled ng-show=\\\"tier == 'level_1'\\\">&check; Subscribed</a>\\n                        <a href=\\\"//{{ cloudDomain }}/settings/login?subdomain={{ subdomain }}&username={{ username }}&tier=level_1\\\" class=\\\"button button-alpha\\\" ng-hide=\\\"tier == 'level_1'\\\">Sign up</a>\\n                    </div>\\n\\n                    <div class=\\\"show-on-mobile\\\">\\n                        <div class=\\\"tier-features\\\">\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">$499/month for Software, Hosting, and Maintenance</h3>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Embeddable web form, email, SMSsync, data collection online/offline iOS and Android App. Map and Timeline data visualization <br> Roles/Permissions. Email, SMS, Twitter. Private Deployments. Analytics Visualization Page. Import/Export Data.</h3>\\n                                <a href=\\\"#5355\\\">Find out more about data collection</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">1 Deployment</h3>\\n                                <a href=\\\"#5348\\\">What’s a deployment?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">25 admins and/or custom roles</h3>\\n                                <a href=\\\"#5349\\\">What’s an admin?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Unlimited posts</h3>\\n                                <a href=\\\"#5352\\\">What’s a post?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Deployments appear in Ushahidi iOS/Android App</h3>\\n                                <a href=\\\"#5728\\\">Learn more about our app</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Crowdsourced surveys</h3>\\n                                <a href=\\\"#5350\\\">What’s a crowdsourced survey?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">No targeted surveys</h3>\\n                                <a href=\\\"#5351\\\">What’s a targeted survey?</a>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">One-time Support Services not available for basic</h3>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">On-going support services not available for basic</h3>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Custom feature development  not available for basic</h3>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier pricing-tabs tabs-target\\\" id=\\\"enterprise-single\\\">\\n                    <span class=\\\"tier-label alt\\\">Enterprise</span>\\n                    <div class=\\\"tier-summary\\\">\\n                        <h2 class=\\\"tier-name\\\">Ushahidi Enterprise: Single Deployment</h2>\\n                        <p>Ushahidi platform capabilities, technical expertise, ongoing support, and customizations.</p>\\n                        <p class=\\\"hide-on-mobile\\\" style=\\\"visibility: hidden;\\\"> this is a line break hack. this is a line break hack. this is a line break hack. this is a line break hack.</p>\\n                        <p class=\\\"form-heading\\\">Contact us about Enterprise Services for your organization</p>\\n\\n                    </div>\\n\\n                    <form id=\\\"form7\\\" name=\\\"form7\\\" class=\\\"wufoo topLabel\\\" accept-charset=\\\"UTF-8\\\" autocomplete=\\\"off\\\" enctype=\\\"multipart/form-data\\\" method=\\\"post\\\" novalidate=\\\"\\\" action=\\\"https://ushah.wufoo.com/forms/pb6wq340260j75/#public\\\">\\n\\n                        <div class=\\\"form-field\\\">\\n                            <label class=\\\"desc\\\" id=\\\"title1\\\" for=\\\"Field1\\\">Your name <span id=\\\"req_1\\\" class=\\\"req\\\">*</span></label>\\n                            <input placeholder=\\\"Your name\\\" id=\\\"Field1\\\" name=\\\"Field1\\\" type=\\\"text\\\" class=\\\"field text medium\\\" value=\\\"\\\" maxlength=\\\"255\\\" tabindex=\\\"1\\\" onkeyup=\\\"\\\" required=\\\"\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-field\\\">\\n                            <label class=\\\"desc nodisplay\\\" id=\\\"title2\\\" for=\\\"Field2\\\">Your email <span id=\\\"req_2\\\" class=\\\"req\\\">*</span></label>\\n                            <input placeholder=\\\"you@organization.com\\\" id=\\\"Field2\\\" name=\\\"Field2\\\" type=\\\"email\\\" spellcheck=\\\"false\\\" class=\\\"field text medium\\\" value=\\\"\\\" maxlength=\\\"255\\\" tabindex=\\\"2\\\" required=\\\"\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-field\\\">\\n                            <label class=\\\"desc nodisplay\\\" id=\\\"title3\\\" for=\\\"Field5\\\">Phone number <span id=\\\"req_5\\\" class=\\\"req\\\">*</span></label>\\n                            <input id=\\\"Field5\\\" class=\\\"field text medium\\\" name=\\\"Field5\\\" tabindex=\\\"3\\\" onkeyup=\\\"handleInput(this);\\\" onchange=\\\"handleInput(this);\\\" required=\\\"\\\" type=\\\"tel\\\" maxlength=\\\"255\\\" value=\\\"\\\" style=\\\"display: block; width: 100%;\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-field\\\">\\n                            <label class=\\\"desc nodisplay\\\" id=\\\"title3\\\" for=\\\"Field3\\\">Your organization</label>\\n                            <input placeholder=\\\"Your organization\\\" id=\\\"Field3\\\" name=\\\"Field3\\\" type=\\\"text\\\" class=\\\"field text medium\\\" value=\\\"\\\" maxlength=\\\"255\\\" tabindex=\\\"3\\\" onkeyup=\\\"\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-field\\\">\\n                            <button id=\\\"saveForm\\\" name=\\\"saveForm\\\" class=\\\"button btTxt submit\\\" type=\\\"submit\\\" onclick=\\\"ga('send','event','links','contact', 'plan-solutions',1);\\\">Continue</button>\\n                        </div>\\n\\n                        <div class=\\\"nodisplay\\\">\\n                            <label for=\\\"comment\\\">Do Not Fill This Out</label>\\n                            <textarea name=\\\"comment\\\" id=\\\"comment\\\" rows=\\\"1\\\" cols=\\\"1\\\"></textarea>\\n                            <input type=\\\"hidden\\\" id=\\\"idstamp\\\" name=\\\"idstamp\\\" value=\\\"zkhl5vdgevIPMx9QV0j5WIpon8aq8lW5GuXOYyAWb/k=\\\">\\n                        </div>\\n                    </form>\\n\\n                    <div class=\\\"tier-features\\\">\\n                        <div class=\\\"tier-feature\\\">\\n                            <strong class=\\\"tier-price\\\">Base Pricing</strong>\\n                            <p class=\\\"small\\\">(1 Deployment)</p>\\n                            <h3 class=\\\"tier-heading\\\">\\n                                Set-up\\n                                <br>\\n                                $15,000+\\n                                <br><br>\\n                                1 Remote Training\\n                                <br>\\n                                $1,500+\\n                                <br><br>\\n                                Software, Hosting &amp; Maintenance\\n                                <br>\\n                                $999+/month\\n                                <br><br>\\n                                Ongoing Technical Support\\n                                <br>\\n                                $1500+/month\\n                                <br><br>\\n                                <p class=\\\"small\\\">*pricing modified based upon circumstances and customizations</p>\\n                            </h3>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"show-on-mobile\\\">\\n                        <div class=\\\"tier-features\\\">\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">$999+/month for Software, Hosting, and Maintenance</h3>\\n                                <p class=\\\"small\\\">*subject to increase with customizations</p>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">All of Ushahidi Basic + 25 admins. SMS targeted surveys. Automated sorting capabilities.</h3>\\n                                <a href=\\\"#5355\\\">Find out more about data collection</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">1 Deployment</h3>\\n                                <a href=\\\"#5348\\\">What’s a deployment?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">25 admins and/or custom roles</h3>\\n                                <a href=\\\"#5349\\\">What’s an admin?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Unlimited posts</h3>\\n                                <a href=\\\"#5352\\\">What’s a post?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Deployments appear in Ushahidi iOS/Android App</h3>\\n                                <a href=\\\"#5728\\\">Learn more about our app</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Crowdsourced surveys</h3>\\n                                <a href=\\\"#5350\\\">What’s a crowdsourced survey?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Access to targeted surveys and the ability to gather and upload contacts and send multi-question SMS surveys. Contact for pricing based on country location and survey sizes</h3>\\n                                <a href=\\\"#5351\\\">What’s a targeted survey?</a>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">One-time Support Services</h3>\\n                            <a href=\\\"#5729\\\">Find out more about one-time services</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">On-going support services</h3>\\n                            <a href=\\\"#5730\\\">Find out more about on-going services</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Custom feature development</h3>\\n                            <p class=\\\"small\\\">*contact for scoping and pricing</p>\\n                            <a href=\\\"#5731\\\">Find out more about custom feature development</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Collaborative Discovery Session</h3>\\n                            <p class=\\\"small\\\">*contact for pricing</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">\\n                                Platform set-up\\n                                <br>\\n                                $15,000+\\n                            </h3>\\n                            <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Survey configuration - Contact for pricing</h3>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">\\n                                Training of project administrators\\n                                <br>\\n                                $1500+\\n                            </h3>\\n                            <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Training of trainers, Training of monitors or field staff, Stakeholder Engagement Toolkit, White Labeling, Translation</h3>\\n                            <p class=\\\"small\\\">*contact for pricing</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">\\n                                Ongoing technical support account manager\\n                                <br>\\n                                $1500+/month\\n                            </h3>\\n                            <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Long-term embedded Ushahidi platform administrator(s)</h3>\\n                            <p class=\\\"small\\\">*contact for pricing</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Long-term embedded Ushahidi platform community engagement officer(s)</h3>\\n                            <p class=\\\"small\\\">*contact for pricing</p>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier pricing-tabs tabs-target\\\" id=\\\"enterprise-multiple\\\">\\n                    <span class=\\\"tier-label alt\\\">Enterprise</span>\\n                    <div class=\\\"tier-summary\\\">\\n                        <h2 class=\\\"tier-name\\\">Ushahidi Enterprise: Multiple Deployments</h2>\\n                        <p>Ushahidi platform capabilities, technical expertise, ongoing support, and customizations.</p>\\n                        <p>Integrate Ushahidi across your organization or project activities by using multiple Ushahidi platform deployments.</p>\\n                        <p class=\\\"form-heading\\\">Contact us about Enterprise Services for your organization</p>\\n\\n                    </div>\\n\\n                    <form id=\\\"form7\\\" name=\\\"form7\\\" class=\\\"wufoo topLabel\\\" accept-charset=\\\"UTF-8\\\" autocomplete=\\\"off\\\" enctype=\\\"multipart/form-data\\\" method=\\\"post\\\" novalidate=\\\"\\\" action=\\\"https://ushah.wufoo.com/forms/pb6wq340260j75/#public\\\">\\n\\n                        <div class=\\\"form-field\\\">\\n                            <label class=\\\"desc\\\" id=\\\"title1\\\" for=\\\"Field1\\\">Your name <span id=\\\"req_1\\\" class=\\\"req\\\">*</span></label>\\n                            <input placeholder=\\\"Your name\\\" id=\\\"Field1\\\" name=\\\"Field1\\\" type=\\\"text\\\" class=\\\"field text medium\\\" value=\\\"\\\" maxlength=\\\"255\\\" tabindex=\\\"1\\\" onkeyup=\\\"\\\" required=\\\"\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-field\\\">\\n                            <label class=\\\"desc nodisplay\\\" id=\\\"title2\\\" for=\\\"Field2\\\">Your email <span id=\\\"req_2\\\" class=\\\"req\\\">*</span></label>\\n                            <input placeholder=\\\"you@organization.com\\\" id=\\\"Field2\\\" name=\\\"Field2\\\" type=\\\"email\\\" spellcheck=\\\"false\\\" class=\\\"field text medium\\\" value=\\\"\\\" maxlength=\\\"255\\\" tabindex=\\\"2\\\" required=\\\"\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-field\\\">\\n                            <label class=\\\"desc nodisplay\\\" id=\\\"title3\\\" for=\\\"Field5\\\">Phone number <span id=\\\"req_5\\\" class=\\\"req\\\">*</span></label>\\n                            <input id=\\\"Field5\\\" class=\\\"field text medium\\\" name=\\\"Field5\\\" tabindex=\\\"3\\\" onkeyup=\\\"handleInput(this);\\\" onchange=\\\"handleInput(this);\\\" required=\\\"\\\" type=\\\"tel\\\" maxlength=\\\"255\\\" value=\\\"\\\" style=\\\"display: block; width: 100%;\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-field\\\">\\n                            <label class=\\\"desc nodisplay\\\" id=\\\"title3\\\" for=\\\"Field3\\\">Your organization</label>\\n                            <input placeholder=\\\"Your organization\\\" id=\\\"Field3\\\" name=\\\"Field3\\\" type=\\\"text\\\" class=\\\"field text medium\\\" value=\\\"\\\" maxlength=\\\"255\\\" tabindex=\\\"3\\\" onkeyup=\\\"\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-field\\\">\\n                            <button id=\\\"saveForm\\\" name=\\\"saveForm\\\" class=\\\"button btTxt submit\\\" type=\\\"submit\\\" onclick=\\\"ga('send','event','links','contact', 'plan-solutions',1);\\\">Continue</button>\\n                        </div>\\n\\n                        <div class=\\\"nodisplay\\\">\\n                            <label for=\\\"comment\\\">Do Not Fill This Out</label>\\n                            <textarea name=\\\"comment\\\" id=\\\"comment\\\" rows=\\\"1\\\" cols=\\\"1\\\"></textarea>\\n                            <input type=\\\"hidden\\\" id=\\\"idstamp\\\" name=\\\"idstamp\\\" value=\\\"zkhl5vdgevIPMx9QV0j5WIpon8aq8lW5GuXOYyAWb/k=\\\">\\n                        </div>\\n                    </form>\\n\\n                    <div class=\\\"tier-features\\\">\\n                        <div class=\\\"tier-feature\\\">\\n                            <strong class=\\\"tier-price\\\">Base Pricing</strong>\\n                            <p class=\\\"small\\\">(5 Deployments)</p>\\n                            <p class=\\\"small\\\">*contact us for pricing for 10, 25, or custom deployment packages</p>\\n                            <h3 class=\\\"tier-heading\\\">\\n                                Set-up\\n                                <br>\\n                                $50,000+\\n                                <br><br>\\n                                5 Remote Trainings\\n                                <br>\\n                                $6,000+\\n                                <br><br>\\n                                Software, Hosting &amp; Maintenance\\n                                <br>\\n                                $2000+/month\\n                                <br><br>\\n                                Ongoing Technical Support\\n                                <br>\\n                                $3,000+/month\\n                                <br><br>\\n                                <p class=\\\"small\\\">*pricing modified based upon circumstances and customizations</p>\\n                            </h3>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"show-on-mobile\\\">\\n                        <div class=\\\"tier-features\\\">\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">$2000+/month for Software, Hosting, and Maintenance</h3>\\n                                <p class=\\\"small\\\">*subject to increase with customizations</p>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">All of Ushahidi Basic + Unlimited admins. SMS targeted surveys. Automated sorting capabilities.</h3>\\n                                <a href=\\\"#5355\\\">Find out more about data collection</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">5 Deployments</h3>\\n                                <p class=\\\"small\\\">*contact us for pricing for 10, 25, or custom deployment packages</p>\\n                                <a href=\\\"#5348\\\">What’s a deployment?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Unlimited admins</h3>\\n                                <a href=\\\"#5349\\\">What’s an admin?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Unlimited posts</h3>\\n                                <a href=\\\"#5352\\\">What’s a post?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Deployments appear in Ushahidi iOS/Android App</h3>\\n                                <a href=\\\"#5728\\\">Learn more about our app</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Crowdsourced surveys</h3>\\n                                <a href=\\\"#5350\\\">What’s a crowdsourced survey?</a>\\n                            </div>\\n\\n                            <div class=\\\"tier-feature\\\">\\n                                <h3 class=\\\"tier-heading\\\">Access to targeted surveys and the ability to gather and upload contacts and send multi-question SMS surveys. Contact for pricing based on country location and survey sizes</h3>\\n                                <a href=\\\"#5351\\\">What’s a targeted survey?</a>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">One-time Support Services</h3>\\n                            <a href=\\\"#5729\\\">Find out more about one-time services</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">On-going support services</h3>\\n                            <a href=\\\"#5730\\\">Find out more about on-going services</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Custom feature development</h3>\\n                            <p class=\\\"small\\\">*contact for scoping and pricing</p>\\n                            <a href=\\\"#5731\\\">Find out more about custom feature development</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Collaborative Discovery Session</h3>\\n                            <p class=\\\"small\\\">*contact for pricing</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">\\n                                Platform set-up\\n                                <br>\\n                                $50,000+\\n                            </h3>\\n                            <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Survey configuration - Contact for pricing</h3>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">\\n                                Training of project administrators\\n                                <br>\\n                                $7500+\\n                            </h3>\\n                            <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Training of trainers, Training of monitors or field staff, Stakeholder Engagement Toolkit, White Labeling, Translation</h3>\\n                            <p class=\\\"small\\\">*contact for pricing</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">\\n                                Ongoing technical support account manager\\n                                <br>\\n                                $3000+/month\\n                            </h3>\\n                            <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Long-term embedded Ushahidi platform administrator(s)</h3>\\n                            <p class=\\\"small\\\">*contact for pricing</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Long-term embedded Ushahidi platform community engagement officer(s)</h3>\\n                            <p class=\\\"small\\\">*contact for pricing</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"tiers hide-on-mobile\\\" role=\\\"article\\\">\\n\\n                <div class=\\\"tier-label\\\">Platform Technology</div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-features\\\">\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Free Software, Hosting, and Maintenance</h3>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Embeddable web form, email, SMSsync, data collection online/offline iOS and Android App. Map and Timeline data visualization <br> Roles/Permissions. Email, SMS, Twitter. Private Deployments. Analytics Visualization Page. Import/Export Data.</h3>\\n                            <a href=\\\"#5355\\\">Find out more about data collection</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">1 Deployment</h3>\\n                            <a href=\\\"#5348\\\">What’s a deployment?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">25 admins and/or custom roles</h3>\\n                            <a href=\\\"#5349\\\">What’s an admin?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">25 posts maximum</h3>\\n                            <a href=\\\"#5352\\\">What’s a post?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Deployments appear in Ushahidi iOS/Android App</h3>\\n                            <a href=\\\"#5728\\\">Learn more about our app</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Crowdsourced surveys</h3>\\n                            <a href=\\\"#5350\\\">What’s a crowdsourced survey?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">No targeted surveys</h3>\\n                            <a href=\\\"#5351\\\">What’s a targeted survey?</a>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-features\\\">\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">$499/month for Software, Hosting, and Maintenance</h3>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Embeddable web form, email, SMSsync, data collection online/offline iOS and Android App. Map and Timeline data visualization <br> Roles/Permissions. Email, SMS, Twitter. Private Deployments. Analytics Visualization Page. Import/Export Data.</h3>\\n                            <a href=\\\"#5355\\\">Find out more about data collection</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">1 Deployment</h3>\\n                            <a href=\\\"#5348\\\">What’s a deployment?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">25 admins and/or custom roles</h3>\\n                            <a href=\\\"#5349\\\">What’s an admin?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Unlimited posts</h3>\\n                            <a href=\\\"#5352\\\">What’s a post?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Deployments appear in Ushahidi iOS/Android App</h3>\\n                            <a href=\\\"#5728\\\">Learn more about our app</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Crowdsourced surveys</h3>\\n                            <a href=\\\"#5350\\\">What’s a crowdsourced survey?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">No targeted surveys</h3>\\n                            <a href=\\\"#5351\\\">What’s a targeted survey?</a>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-features\\\">\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">$999+/month for Software, Hosting, and Maintenance</h3>\\n                            <p class=\\\"small\\\">*subject to increase with customizations</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">All of Ushahidi Basic + 25 admins. SMS targeted surveys. Automated sorting capabilities.</h3>\\n                            <a href=\\\"#5355\\\">Find out more about data collection</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">1 Deployment</h3>\\n                            <a href=\\\"#5348\\\">What’s a deployment?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">25 admins and/or custom roles</h3>\\n                            <a href=\\\"#5349\\\">What’s an admin?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Unlimited posts</h3>\\n                            <a href=\\\"#5352\\\">What’s a post?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Deployments appear in Ushahidi iOS/Android App</h3>\\n                            <a href=\\\"#5728\\\">Learn more about our app</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Crowdsourced surveys</h3>\\n                            <a href=\\\"#5350\\\">What’s a crowdsourced survey?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Access to targeted surveys and the ability to gather and upload contacts and send multi-question SMS surveys. Contact for pricing based on country location and survey sizes</h3>\\n                            <a href=\\\"#5351\\\">What’s a targeted survey?</a>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-features\\\">\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">$2000+/month for Software, Hosting, and Maintenance</h3>\\n                            <p class=\\\"small\\\">*subject to increase with customizations</p>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">All of Ushahidi Basic + Unlimited admins. SMS targeted surveys. Automated sorting capabilities.</h3>\\n                            <a href=\\\"#5355\\\">Find out more about data collection</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">5 Deployments</h3>\\n                            <p class=\\\"small\\\">*contact us for pricing for 10, 25, or custom deployment packages</p>\\n                            <a href=\\\"#5348\\\">What’s a deployment?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Unlimited admins</h3>\\n                            <a href=\\\"#5349\\\">What’s an admin?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Unlimited posts</h3>\\n                            <a href=\\\"#5352\\\">What’s a post?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Deployments appear in Ushahidi iOS/Android App</h3>\\n                            <a href=\\\"#5728\\\">Learn more about our app</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Crowdsourced surveys</h3>\\n                            <a href=\\\"#5350\\\">What’s a crowdsourced survey?</a>\\n                        </div>\\n\\n                        <div class=\\\"tier-feature\\\">\\n                            <h3 class=\\\"tier-heading\\\">Access to targeted surveys and the ability to gather and upload contacts and send multi-question SMS surveys. Contact for pricing based on country location and survey sizes</h3>\\n                            <a href=\\\"#5351\\\">What’s a targeted survey?</a>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier-label\\\">Cataloug of Services</div>\\n\\n                <div class=\\\"tier-label blank\\\">One-time Support Services</div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">One-time Support Services not available for demo</h3>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">One-time Support Services not available for basic</h3>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">One-time Support Services</h3>\\n                        <a href=\\\"#5729\\\">Find out more about one-time services</a>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Collaborative Discovery Session</h3>\\n                        <p class=\\\"small\\\">*contact for pricing</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">\\n                            Platform set-up\\n                            <br>\\n                            $15,000+\\n                        </h3>\\n                        <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Survey configuration - Contact for pricing</h3>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">\\n                            Training of project administrators\\n                            <br>\\n                            $1500+\\n                        </h3>\\n                        <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Training of trainers, Training of monitors or field staff, Stakeholder Engagement Toolkit, White Labeling, Translation</h3>\\n                        <p class=\\\"small\\\">*contact for pricing</p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">One-time Support Services</h3>\\n                        <a href=\\\"#5729\\\">Find out more about one-time services</a>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Collaborative Discovery Session</h3>\\n                        <p class=\\\"small\\\">*contact for pricing</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">\\n                            Platform set-up\\n                            <br>\\n                            $50,000+\\n                        </h3>\\n                        <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Survey configuration - Contact for pricing</h3>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">\\n                            Training of project administrators\\n                            <br>\\n                            $7500+\\n                        </h3>\\n                        <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Training of trainers, Training of monitors or field staff, Stakeholder Engagement Toolkit, White Labeling, Translation</h3>\\n                        <p class=\\\"small\\\">*contact for pricing</p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier-label blank\\\">Ongoing support services</div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Ongoing support services not available for demo</h3>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Ongoing support services not available for demo</h3>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Ongoing support services</h3>\\n                        <a href=\\\"#5730\\\">Find out more about ongoing services</a>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">\\n                            Ongoing technical support account manager\\n                            <br>\\n                            $1500+/month\\n                        </h3>\\n                        <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Long-term embedded Ushahidi platform administrator(s)</h3>\\n                        <p class=\\\"small\\\">*contact for pricing</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Long-term embedded Ushahidi platform community engagement officer(s)</h3>\\n                        <p class=\\\"small\\\">*contact for pricing</p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Ongoing support services</h3>\\n                        <a href=\\\"#5730\\\">Find out more about ongoing services</a>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">\\n                            Ongoing technical support account manager\\n                            <br>\\n                            $3000+/month\\n                        </h3>\\n                        <p class=\\\"small\\\">*required for base Enterprise Partnership</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Long-term embedded Ushahidi platform administrator(s)</h3>\\n                        <p class=\\\"small\\\">*contact for pricing</p>\\n                    </div>\\n\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Long-term embedded Ushahidi platform community engagement officer(s)</h3>\\n                        <p class=\\\"small\\\">*contact for pricing</p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier-label blank\\\">Custom feature development</div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Custom feature development  not available for demo</h3>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Custom feature development  not available for basic</h3>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Custom feature development</h3>\\n                        <p class=\\\"small\\\">*contact for scoping and pricing</p>\\n                        <a href=\\\"#5731\\\">Find out more about custom feature development</a>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"tier\\\">\\n                    <div class=\\\"tier-feature\\\">\\n                        <h3 class=\\\"tier-heading\\\">Custom feature development</h3>\\n                        <p class=\\\"small\\\">*contact for scoping and pricing</p>\\n                        <a href=\\\"#5731\\\">Find out more about custom feature development</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <section>\\n            <div class=\\\"wrapper\\\">\\n                <div class=\\\"case-studies-group\\\">\\n                    <div class=\\\"case-studies-item\\\">\\n                        <h2 class=\\\"section-heading\\\">Grassroots projects</h2>\\n                        <p><em>Apply for a free Basic plan</em></p>\\n                        <p>Small non profits and grassroots organizations that are aligned with Ushahidi's mission and can demonstrate a yearly operating budget of less than $250k USD per year are invited to apply for a free Basic plan.</p>\\n                        <p>You can still try out Ushahidi platform by signing up for the free Ushahidi Demo version.</p>\\n                        <a href=\\\"pricing/apply-for-free\\\" class=\\\"button\\\" onclick=\\\"ga('send','event','links','select','social impact',1);\\\">Continue</a>\\n                    </div>\\n\\n                    <div class=\\\"case-studies-item\\\">\\n                        <h2 class=\\\"section-heading\\\">Ushahidi code</h2>\\n                        <p><em>Self-host &amp; customize Ushahidi on your own</em></p>\\n                        <p>Ushahidi is an open source product, meaning that all the code that runs it is available for all admins to download and modify. If you'd like to download Ushahidi, customize it, and host it on your own servers, it is available on GitHub.</p>\\n                        <a href=\\\"https://ushah.wufoo.com/forms/make-ushahidi-even-better/\\\" class=\\\"button\\\" onclick=\\\"ga('send','event','links','download', 'ushahidi',1);\\\">Continue</a>\\n                    </div>\\n\\n                    <div class=\\\"case-studies-item\\\">\\n                        <h2 class=\\\"section-heading\\\">International Development, Humanitarian, University or Research Organization</h2>\\n                        <p><em>On Enterprise a catalogue of technical services is on offer</em></p>\\n                        <p>We can assist with the technical set-up, survey design, a variety of targeted trainings, metrics and analysis, programmatic management, ongoing technical support, and custom feature development. We want you to be able to focus on your project goals and impact and let us stress about the technology.</p>\\n                        <a href=\\\"enterprise-partnerships\\\" class=\\\"button\\\">Continue</a>\\n                    </div>\\n\\n                    <div class=\\\"case-studies-item\\\">\\n                        <h2 class=\\\"section-heading\\\">Foundation or Potential Funder</h2>\\n                        <p><em>We have loads of ideas for how to improve the Ushahidi platform - so let’s talk!</em></p>\\n                        <p>From incorporating machine learning, automation, and new data sources, to making the platform more secure in high-risk situations and reaching last-mile users - we’re constantly working to improve our core services and functionality.</p>\\n                        <p>We’re also always seeking core funding for sustainability from organizations who believe in our mission and impact.</p>\\n                        <a href=\\\"impact-report\\\" class=\\\"button\\\">Continue</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </section>\\n\\n        <section class=\\\"section-faq\\\">\\n            <h1 class=\\\"section-title\\\">Frequently asked questions</h1>\\n            <div class=\\\"wrapper\\\">\\n                <div class=\\\"faq-grid\\\">\\n                    <div id=\\\"5727\\\" class=\\\"faq\\\">\\n                        <h3>How is Ushahidi funded?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Ushahidi is a nonprofit, open source, software as a service (SaaS) organization, but we operate as a social enterprise. We are both grant funded and revenue generating.\\n                        </p><p>We build and sell a replicable, scalable, and sustainable software platform called Ushahidi. (And a new emergency management check-in product called TenFour) to both grassroots organizations and international development and humanitarian agencies, but also make the code base to the Ushahidi platform available open source.\\n                        </p><p></p>\\n                    </div>\\n                    <div id=\\\"5348\\\" class=\\\"faq\\\">\\n                        <h3>What is a deployment?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>A deployment is an instance of the Ushahidi platform for your particular project.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5349\\\" class=\\\"faq\\\">\\n                        <h3>What’s an project admin?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>An project admin is someone on your team who will manage and run your deployment by logging into the deployment to view and manage unpublished reports, create custom user roles, and edit deployment settings. You may have multiple admins on you staff to run your deployment.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5350\\\" class=\\\"faq\\\">\\n                        <h3>What’s a crowdsourced survey?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>A crowdsourced survey is a customizable set of questions available for anyone to answer on the platform that, when completed, creates a post accessible on the timeline and map pages. Multiple crowdsourced surveys with different sets of questions can be configured on the same deployment, allowing you to collect and compare different types of information.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5351\\\" class=\\\"faq\\\">\\n                        <h3>What’s a targeted survey?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>A targeted survey is set of questions that can be drafted within the Ushahidi platform and sent to a pre populated list of phone numbers. You can therefore send a survey to your beneficiaries, stakeholders, or field staff (who you have the cell phone numbers for) in order to collect and analyze their answers to targeted questions as part of your project. Currently targeted surveys are available on the Ushahidi platform via SMS only.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5352\\\" class=\\\"faq\\\">\\n                        <h3>What’s a post?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Posts come in two forms: crowdsourced and targeted. A crowdsourced post is a piece of unstructured or semistructured data from a public author via any enabled data source such as web form, mobile application, email, Twitter, or SMS. A targeted post is a piece of unstructured or semistructured data from a particular author, such as the recipient of a targeted SMS survey.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5353\\\" class=\\\"faq\\\">\\n                        <h3>Is there a limit to the number of crowdsourced survey responses I can receive?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>There is no limit to the number of people or posts via the Ushahidi Basic self service plan, an Enterprise Partnership, or a Grassroots Social Impact License! There is a limit of 25 posts for the Ushahidi Demo self service plan.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5728\\\" class=\\\"faq\\\">\\n                        <h3>What’s the Ushahidi mobile app?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>The Ushahidi mobile app is available via iOS or Android. It allows users to search for deployment, add a deployment, respond to a survey, and view other posts on a deployment.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5354\\\" class=\\\"faq\\\">\\n                        <h3>Does the self service Ushahidi Demo plan have a time limit?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Yes, the Ushahidi Demo self service plan can be used for 1 month.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5355\\\" class=\\\"faq\\\">\\n                        <h3>What are data sources: embeddable web form, app, email, Twitter, and SMS?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Data collection sources are the different channels that can be used to gather crowdsourced reports in a deployment. We currently enable posts to be completed via embeddable web forms, a native Android and iOS app, Twitter, email, and SMS. SMSsync, Twilio, and Nexmo are SMS gateways that can be configured to transfer inbound messages to a deployment. </p><p></p>\\n                    </div>\\n                    <div id=\\\"5723\\\" class=\\\"faq\\\">\\n                        <h3>Are the costs to send and receive SMS messages included in the price of the Ushahidi platform?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>No, the cost to send and receive SMS messages is not included in the price of the Ushahidi platform. Our team will help you to set up an account with one of our supported SMS gateways and the cost will be paid through them.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5724\\\" class=\\\"faq\\\">\\n                        <h3>What does “Import and Export data” mean?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Data can be uploaded to or downloaded from an Ushahidi platform deployment via CSV file. Existing data sets can be uploaded to a deployment in bulk, and data can be downloaded from the deployment either in full or based on a specific filter criteria.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5725\\\" class=\\\"faq\\\">\\n                        <h3>What are roles and permissions?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Roles and permissions allow you to assign your registered admins on your team different levels of access to the deployment data and settings. An admin can have permissions to five different controls: Manage Users, Manage Posts, Manage Settings, Bulk Data Import, Edit their own posts. For example, some may be granted view-only rights to unpublished posts, while others may have edit rights, and still others may have the ability to change settings such as data sources or survey questions.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5726\\\" class=\\\"faq\\\">\\n                        <h3>What are private deployments?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Private deployments require a registered user to login before accessing any of the deployment data. Therefore your deployment could be made private within you team or organization.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5729\\\" class=\\\"faq\\\">\\n                        <h3>What are One-time services?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Ushahidi provides a catalogue of services and expertise available via enterprise partnership in order to support our partners in the use of the Ushahidi platform. One-time services available include platform setup, a variety of virtual or in person trainings, survey configuration support, and others. We want you to focus on your project goals and impact. Our team will worry about the technology.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5730\\\" class=\\\"faq\\\">\\n                        <h3>What are On-going services?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Ushahidi provides a catalogue of services and expertise available via enterprise partnership in order to support our partners in the use of the Ushahidi platform. On-going services include platform hosting and maintenance, technical support, and others. We want you to focus on your project goals and impact. Our team will worry about the technology.</p><p></p>\\n                    </div>\\n                    <div id=\\\"5731\\\" class=\\\"faq\\\">\\n                        <h3>What is Custom feature development?</h3>\\n                        <p class=\\\"small lt-color\\\"></p><p>Ushahidi can scope out and provide a budget for customizations to the existing Ushahidi platform if desired by Enterprise partners. These customizations can include new features, new data sources, additionally language capabilities, and other requests or features.</p><p></p>\\n                    </div>\\n                </div>\\n            </div>\\n        </section>\\n    </main>\\n</div>\\n\";"],"sourceRoot":""}